openapi: 3.0.3
info:
  title: SellerCenter REST API documentation
  description: >-

    <h2>Introduction</h2>


    <p>
      The purpose of this documentation is to describe the existing
      <a target="_blank" href="https://en.wikipedia.org/wiki/Representational_state_transfer">RESTful</a>
      API for the Seller Center. Here you can find description for all available endpoints that SellerCenter provides.
    </p>


    <p>
      You can use this button to see the latest changes in the documentation. <button id="sc-sellerapi-changelog-button">View Changelog</button>
    </p>


    <h2>Getting started</h2>

    <p>The base URI for the Seller Center REST API is
    <code>https://sellercenter-api.[your-instance]/</code>.</p>

    <p>
      Seller Center REST API is not publicly accessible. All requests have to use authentication parameters.
      Seller Center provides a standard OAuth2 authentication/authorization server.
      API user needs to be authorized first and send access key as Authorization Bearer header in each request.
      We are no longer supporting TLS protocol version 1.0 since beginning of July 2023. 
      The current version of TLS is 1.3
    </p>


    <h3>Step 1 - Register application</h3>

    <p>
      Register a new application in Seller Center in 
      <em>Settings | Integration Management | OAuth Applications | Add Application</em> and get an auto generated 
      <em>Application ID</em> (<code>'client_id'</code>) and <em>Application Secret</em> (<code>'client_secret'</code>).
    <p>


    <h3>Step 2 - Request an access token</h3>

    <p>To request an access token, your application needs to send a POST request
    to the Seller Center OAuth server:

    <code>POST
    https://sellercenter.[your-instance]/oauth/client-credentials</code> with
    body</p>

    <ul>

    <li><code>grant_type=client_credentials</code></li></li>

    </ul>

    <p>Example request:</p>

    <code>
      curl --location --request POST 'https://sellercenter.[your-instance]/oauth/client-credentials' \ </br>
        --header 'Authorization: Basic Y2xpZW50aWQ6cGFzc3dvcmQ=' \ </br>
        --form 'grant_type="client_credentials"'
    </code>

    <p>The response of this POST request contains JSON with an
    <code>'access_token'</code> needed for next step.</p>

    <p>
      The token is valid for 3600 seconds (1 hour) and the response contains this information: 
      <code>'expires_in'</code> field with <code>3600</code> value.
    </p>


    <h3>Step 3 - Request the Seller Center REST API</h3>

    <p>
      Make sure that the user is provided with proper permissions to perform the API operation (read, write, delete, etc).
      Build your request to any resource of the Seller Center REST API and add the following Header for Authorization:
    </p>

    <code>Authorization: Bearer {access_token from previous step}</code>


    <h2>Rate limit</h2>

    <p>The rate limit per seller will decrease from 50 requests per second to
    30, effective from July 1, 2024. Also for bulk background operations

    there is a limit of (50000 + 5 * amount of products) per day. For example,
    you have 100 products. 

    It means that per day you are able to upload files with maximum 50500 rows. 

    <p>How to not hit rate limit:

    <ul>
      <li>Do not do unnecessary query. Example: there is no need to request list of your orders every second.
      Consider to do it once per minute if you have many new orders or once per hour if you have just
      several orders per day.
      </li>
      <li>Consider to not do frequent pull operations. There is a functionality of webhooks available. It 
      means that you don't need to request data about your order every minute to see if its status was changed,
      but rather you can implement webhook and receive callback once order status changed.
      </li>
      <li>Consider caching on your side. Data like list of categories, brands, attributes is not frequently
      changed, feel free to cache it. 
      </li>
      <li>Send only real updates. If you changed price for one product, there is no need to upload whole
      catalog or send price update requests for all products when there is no real price update. Also if 
      there were no changes, there is no need to send updates. 
      <li>
    </ul>

    <p>Please, use API with possible less requests. For example, instead of once
    per hour push stock

    update for all your products you can do it only for those where stock was
    changed.

    <p>Some data is changed very infrequently, for example list of brands,
    category tree, options for 

    attributes. Please, use caching on your side to reduce amount of calls to
    these endpoits. 

    <p>Please, also note that IDs of object are never changed. It means, for
    example, that after you 

    created product you can (and should) save ID of create product on your side
    so that later when you

    need to update stock or prices of that product you would already know ID of
    product on side of 

    SellerCenter and won't do GET requests to get this information.


    <h2>Request Signing</h2>

    <p>
      For security reasons, some endpoints require request signing (this is noted on the respective endpoints). To sign 
      a request, the following headers have to be present:
    </p>

    <ul>
      <li><code>X-Timestamp</code> - timestamp of the request in UNIX time (seconds)</li>
      <li><code>X-Nonce</code> - a random, unique string (max. 40 characters)</li>
      <li><code>X-Signature-Algorithm</code> - <code>HMAC-SHA256</code></li>
      <li><code>X-Signature</code> - signature as a string</li>
    </ul>


    <p>
      The content of the signature is calculated with the format below. The <code>body_hash</code> is the SHA-256 hash 
      of the request body (e.g. for <em>GET</em> requests this value should be empty). This content can then be signed by 
      <a target="_blank" href="https://en.wikipedia.org/wiki/HMAC">HMAC-SHA256</a> using the application secret.
    </p>

      ```php
      $httpMethod $requestPathWithQuery
      timestamp=$timestamp
      nonce=$nonce
      body_hash=sha256($body)
      ```

    <p>To give an example, imagine the following request and settings:</p>

    <ul>
      <li><code>GET https://example.com/my/path?foo=bar&zzz=second+parameter</code></li>
      <li>Timestamp is <code>1234567890</code> (Feb 13 2009)</li>
      <li>Nonce is <code>9b95be45f403af9c0039e08bee85f409611fa1b2</code></li>
      <li>Application secret is <code>my_key_123456789012345678901234567890123</code></li>
    </ul>


    The resulting signature content of this example is:
      ```txt
      GET /my/path?foo=bar&zzz=second%20parameter
      timestamp=1234567890
      nonce=9b95be45f403af9c0039e08bee85f409611fa1b2
      body_hash=
      ```
    <p>
      The calculated signature (using the above secret) is <code>88810379e74af556c15fad9c8fc9fc1756b000d3915df597b69056af0f3ff004</code>.
    </p>

    <p>
      If this request was sent as a <em>POST</em> with body <code>{"foo":"bar","zzz":"second parameter"}</code>, then the 
      <code>body_hash</code> would be <code>40c9aa2af101ea84a90c0eb711d502277a6ca1bff772917a8b772f0efc0b1cde</code> and 
      the signature would equal to <code>f0d36077e97b2f644d960cd60b1875c7dabfc1630d52c7538e5bd1b0012a75be</code>.
    </p>

    <h2>Bulk operations</h2>

    <p>For product bulk operations you can use endpoints
    <code>/v2/import/product-update</code>, 

    <code>/v2/import/product-creation</code> and
    <code>/v2/import/stock-update</code> (those endpoints receives CSV files)
    and

    process them in background; or you can use endpoints
    <code>/v2/import/product-stock-update-xml</code>, 

    <code>/v2/import/product-creation-xml-import</code>,
    <code>/v2/import/product-update-xml-import</code> which receive XML payload

    like endpoints <em>ProductCreate</em>, <em>ProductUpdate</em> and
    <em>ProductStockUpdate</em> in old API. 

    <p>Please, send only changed information when you are doing bulk operations.
    For example, if you have change of

    stock in two products then there is no need to send whole catalog to apply
    that change, please send only 

    changed data.

    <h2>Maintenance Mode</h2>

    <p>There is a maintenance mode in Seller Center. When it is enabled, all
    requests to this API will return status 

    code 503 and the following response:</p>

    <code>
      {
          "message": "Service is unavailable due to maintenance mode",
          "caused_by": "maintenance_mode"
      }
    </code>

    <p>An API consumer may use the header <code>Retry-After</code> to determine
    when to retry the request.</p>
  version: '2.0'
servers:
  - url: /
  - url: https://{environment}.sellercenter.com.br
    description: Dafiti BR
    variables:
      environment:
        enum:
          - api
          - staging-api
        default: api
        description: Specify either the live or staging environment
  - url: https://{environment}.dafiti.cl
    description: Dafiti CL
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-staging-api
        default: sellercenter-api
        description: Specify either the live or staging environment
  - url: https://{environment}.dafiti.com.co
    description: Dafiti CO
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-staging-api
        default: sellercenter-api
        description: Specify either the live or staging environment
  - url: https://{environment}.theiconic.com.au
    description: Iconic AU
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-api-preprod
          - sellercenter-api-staging
        default: sellercenter-api
        description: Specify either the live, preprod or staging environment
  - url: https://{environment}.zalora.com
    description: Zalora GSC
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-api-staging
        default: sellercenter-api
        description: Specify either the live or staging environment
  - url: https://{environment}.zalora.com.hk
    description: Zalora HK
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-api-staging
        default: sellercenter-api
        description: Specify either the live or staging environment
  - url: https://{environment}.zalora.co.id
    description: Zalora ID
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-api-staging
        default: sellercenter-api
        description: Specify either the live or staging environment
  - url: https://{environment}.zalora.com.my
    description: Zalora MY
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-api-staging
        default: sellercenter-api
        description: Specify either the live or staging environment
  - url: https://{environment}.zalora.com.ph
    description: Zalora PH
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-api-staging
        default: sellercenter-api
        description: Specify either the live or staging environment
  - url: https://{environment}.zalora.sg
    description: Zalora SG
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-api-staging
        default: sellercenter-api
        description: Specify either the live or staging environment
  - url: https://{environment}.zalora.com.tw
    description: Zalora TW
    variables:
      environment:
        enum:
          - sellercenter-api
          - sellercenter-api-staging
        default: sellercenter-api
        description: Specify either the live or staging environment
paths:
  /v2/mapped-attribute-options:
    get:
      summary: Get all mapped attributes and options
      security:
        - oAuth: []
      description: >
        Some attributes in SellerCenter can have "dependant" attributes. Imagine
        attribute "MainColor" with value "Red", "Green" and another attribute
        "DetailedColor" with values like "Light Red", "Pink Red", "Dark Red",
        "Scarlet Red", "Deep Green", "Lime", etc. When you set MainColor as
        "Green" all values for DetailedColor like "Light Red" and "Pink Red" are
        not valid.


        This endpoint returns this mapping so that you will see that for
        attribute "MainColor" with value "Green" valid values for attribute
        "DetailedColor" are "Deep Green" and "Lime".
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Mapped Attribute Options
                  type: object
                  properties:
                    parent:
                      description: parent
                      type: object
                      properties:
                        attributeId:
                          description: attributeId
                          example: 70
                          type: integer
                        optionId:
                          description: optionId
                          example: 200
                          type: integer
                      required:
                        - attributeId
                        - optionId
                    child:
                      description: child
                      type: object
                      properties:
                        attributeId:
                          description: attributeId
                          example: 75
                          type: integer
                        optionId:
                          description: optionId
                          example: 208
                          type: integer
                      required:
                        - attributeId
                        - optionId
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Attribute
  /v2/brands:
    get:
      summary: Get list of brands by filter
      security:
        - oAuth: []
      description: >
        This endpoint returns the brands based on some filter parameters. The
        available options are: id, uuid and name. Multiple filters can be used
        at the same time returning the brands who matched all the filters. The
        includeInaccessible parameter when passed, all brands are returned,
        otherwise, only the brands that are available for the current seller are
        returned
      parameters:
        - in: query
          required: false
          name: name
          description: Search brands by name (optional)
          schema:
            type: string
        - name: brandIds[]
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          allowEmptyValue: false
        - name: brandUuids[]
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          allowEmptyValue: false
        - name: includeInaccessible
          in: query
          required: false
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: restrictedOnly
          in: query
          required: false
          schema:
            type: boolean
            enum:
              - true
              - false
        - in: query
          required: false
          name: sort
          description: The field to sort the results by.
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
              - name
        - in: query
          required: false
          name: sortDir
          description: >-
            Define which if you like to sort ascending or descending. Default is
            ascending
          example: asc
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          nullable: false
                          example: 111555
                        srcId:
                          type: string
                          nullable: true
                          example: ADI5341
                          description: Internal id
                        uuid:
                          type: string
                          nullable: true
                          example: 1af9fe46-77d2-4ab2-8b4a-8c7eeac8bbc9
                        name:
                          type: string
                          nullable: false
                          example: Adidas
                        status:
                          type: string
                          nullable: false
                          enum:
                            - active
                            - inactive
                            - deleted
                        isActive:
                          type: boolean
                          nullable: false
                          example: true
                        isApproved:
                          type: boolean
                          nullable: false
                          example: true
                        isRestricted:
                          type: boolean
                          nullable: false
                          example: false
                        countries:
                          type: string
                          nullable: false
                          example: RU,KZ
                        createdAt:
                          type: string
                          format: date-time
                          nullable: false
                          example: '2021-09-22T23:21:42+02:00'
                        updatedAt:
                          type: string
                          format: date-time
                          nullable: false
                          example: '2021-09-22T23:21:42+02:00'
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Brands
  /v2/brands/{brandId}:
    get:
      summary: Get single brand by ID
      security:
        - oAuth: []
      parameters:
        - in: path
          name: brandId
          required: true
          schema:
            type: integer
          description: Numeric Id of Brand
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    nullable: false
                    example: 111555
                  srcId:
                    type: string
                    nullable: true
                    example: ADI5341
                    description: Internal id
                  uuid:
                    type: string
                    nullable: true
                    example: 1af9fe46-77d2-4ab2-8b4a-8c7eeac8bbc9
                  name:
                    type: string
                    nullable: false
                    example: Adidas
                  status:
                    type: string
                    nullable: false
                    enum:
                      - active
                      - inactive
                      - deleted
                  isActive:
                    type: boolean
                    nullable: false
                    example: true
                  isApproved:
                    type: boolean
                    nullable: false
                    example: true
                  isRestricted:
                    type: boolean
                    nullable: false
                    example: false
                  countries:
                    type: string
                    nullable: false
                    example: RU,KZ
                  createdAt:
                    type: string
                    format: date-time
                    nullable: false
                    example: '2021-09-22T23:21:42+02:00'
                  updatedAt:
                    type: string
                    format: date-time
                    nullable: false
                    example: '2021-09-22T23:21:42+02:00'
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Brands
  /v2/brands/{brandId}/attributes:
    get:
      summary: Get mapped attribute options for the brand
      description: >
        In SellerCenter there is a feature "brand scale to attribute mapping".
        This feature maybe enabled or disabled.

        You can know this by looking to config value
        "brand/scale_mapping/enabled". If it is disabled, then sizeSystem

        is not relevant and all further information is not applicable.



        If it is enabled, then in config parameter
        "brand/scale_mapping/attribute" there will be numeric ID of so called

        "size scale attribute". This attribute is always a dropdown and has
        several options. Example names of

        options for that attribute are usually looks like: CL_W_JEANS,
        CL_W_SOCKS_EUR, CL_U_INT.



        Some brands require only certain size scale values to be chosen, for
        example brand X may allow CL_W_JEANS,

        CL_W_SOCKS_EUR but not allow CL_U_INT. By requesting endpoint
        /v2/brands/{brandId}/attributes you can get

        information about which size scale options are allowed for this brand.
        Please, keep in mind that empty array

        in this endpoint means "there are no restrictions for this brand, all
        size scale options are available".

        So when you know brand of your product set and "brand scale to attribute
        mapping" feature is enabled you can

        get list of allowed options for size scale attribute and you can use
        only them when you create or update product set.



        Value of that "size scale" attribute should be treated as any other
        attribute and you need to put it in the

        list of other attributes’ values.



        So when you have "size scale" attribute with ID=12 and you found that
        desired value for this attribute is

        CL_W_JEANS (ID=9342), then during creation or updating of product set
        you need to pass this value both in list

        of attributes and in sizeSystem property. To be more precise request
        will look like:

        ```

        {
          "brandId": 123,
          "primaryCategoryId": 567,
          ...,
          "attributes": {
            "12":9342,
            ...
          },
          "sizeSystem": 9342
        }

        ```



        Please, keep in mind that other mappings can be also applied. Example:
        brand X allow CL_W_JEANS, CL_W_SOCKS_EUR

        but not allow CL_U_INT. When you create product set in category "Jeans"
        there can be category-to-attribute

        mapping that allows for that certain category only CL_W_JEANS. So even
        if CL_W_SOCKS_EUR is allowed by brand,

        but attempt to create product set with this size system will fail
        because that particular category does not

        allow it.



        If "brand/scale_mapping/enabled" = 0, then you can pass `null` to
        "sizeSystem".
      security:
        - oAuth: []
      parameters:
        - in: path
          name: brandId
          required: true
          schema:
            type: integer
          description: Numeric Id of Brand
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    name:
                      type: string
                      example: supplier_type
                    options:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 321
                          name:
                            type: string
                            example: Direct
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Brands
  /v2/category/most-used:
    get:
      summary: Get most used categories
      security:
        - oAuth: []
      description: |
        Return most used categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Category identifier
                      type: integer
                      example: 7865
                      readOnly: true
                      nullable: true
                    parentId:
                      description: Category parent identifier
                      type: integer
                      example: 1285
                      nullable: true
                      readOnly: true
                    name:
                      description: Category name
                      type: string
                      example: Sample category name
                      nullable: true
                      readOnly: true
                    attributeSetId:
                      description: Attribute set identifier
                      type: integer
                      example: 8757345
                      nullable: false
                      readOnly: true
                    pathIds:
                      description: Category path identifier list
                      type: array
                      example:
                        - 3461
                        - 6783
                      items:
                        type: integer
                    path:
                      description: Category path
                      type: array
                      example:
                        - Back To School
                        - For Kids
                        - Books
                      items:
                        type: string
                    uuid:
                      description: Category UUID identifier
                      example: 060cef12-08ef-4ae6-b15e-79398fedc774
                      type: string
                      readOnly: true
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Category
  /v2/category/tree:
    get:
      summary: Get categories tree
      security:
        - oAuth: []
      description: |
        Return Category tree for active categories only
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        id:
                          description: Category identifier
                          type: integer
                          example: 7865
                          readOnly: true
                          nullable: true
                        parentId:
                          description: Category parent identifier
                          type: integer
                          example: 1285
                          nullable: true
                          readOnly: true
                        name:
                          description: Category name
                          type: string
                          example: Sample category name
                          nullable: true
                          readOnly: true
                        attributeSetId:
                          description: Attribute set identifier
                          type: integer
                          example: 8757345
                          nullable: false
                          readOnly: true
                        pathIds:
                          description: Category path identifier list
                          type: array
                          example:
                            - 3461
                            - 6783
                          items:
                            type: integer
                        path:
                          description: Category path
                          type: array
                          example:
                            - Back To School
                            - For Kids
                            - Books
                          items:
                            type: string
                        uuid:
                          description: Category UUID identifier
                          example: 060cef12-08ef-4ae6-b15e-79398fedc774
                          type: string
                          readOnly: true
                    - type: object
                      properties:
                        children:
                          type: array
                          description: Category children
                          items:
                            allOf:
                              - type: object
                                properties:
                                  id:
                                    description: Category identifier
                                    type: integer
                                    example: 7865
                                    readOnly: true
                                    nullable: true
                                  parentId:
                                    description: Category parent identifier
                                    type: integer
                                    example: 1285
                                    nullable: true
                                    readOnly: true
                                  name:
                                    description: Category name
                                    type: string
                                    example: Sample category name
                                    nullable: true
                                    readOnly: true
                                  attributeSetId:
                                    description: Attribute set identifier
                                    type: integer
                                    example: 8757345
                                    nullable: false
                                    readOnly: true
                                  pathIds:
                                    description: Category path identifier list
                                    type: array
                                    example:
                                      - 3461
                                      - 6783
                                    items:
                                      type: integer
                                  path:
                                    description: Category path
                                    type: array
                                    example:
                                      - Back To School
                                      - For Kids
                                      - Books
                                    items:
                                      type: string
                                  uuid:
                                    description: Category UUID identifier
                                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
                                    type: string
                                    readOnly: true
                              - type: object
                                properties:
                                  children:
                                    type: array
                                    description: Category children
                                    example: []
                                    items: {}
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Category
  /v2/category/root:
    get:
      summary: Get root category
      security:
        - oAuth: []
      description: |
        Return root category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Category identifier
                    type: integer
                    example: 7865
                    readOnly: true
                    nullable: true
                  parentId:
                    description: Category parent identifier
                    type: integer
                    example: 1285
                    nullable: true
                    readOnly: true
                  name:
                    description: Category name
                    type: string
                    example: Sample category name
                    nullable: true
                    readOnly: true
                  attributeSetId:
                    description: Attribute set identifier
                    type: integer
                    example: 8757345
                    nullable: false
                    readOnly: true
                  pathIds:
                    description: Category path identifier list
                    type: array
                    example:
                      - 3461
                      - 6783
                    items:
                      type: integer
                  path:
                    description: Category path
                    type: array
                    example:
                      - Back To School
                      - For Kids
                      - Books
                    items:
                      type: string
                  uuid:
                    description: Category UUID identifier
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
                    type: string
                    readOnly: true
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Category
  /v2/category/{categoryId}/attributes:
    get:
      summary: Get category attributes
      security:
        - oAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
          description: Numeric Id of Category
      description: >
        Return category attributes. In SellerCenter you can sell products in
        different categories. Every product set has attributes ("colour",
        "warranty period", "fabric", etc). Not every attribute is applicable to
        every category. In order to make creation of products easier we are
        using only relevant for each category attributes. To do that each
        category has so called AttributeSet. AttributeSet is a way to group
        attributes. Returns attributes for inactive category also, but not for
        deleted one.


        For example, products in categories "Men classic shoes" and "Golden
        Rings" will have different attributes therefore category "Men classic
        shoes" will have AttributeSet "Shoes" and category "Golden Rings" will
        have AttributeSet "Jewelry".


        Each Attribute belongs to one AttributeSet. For example attribute
        "Material of soil" will belong to AttributeSet "Shoes" and "Probe of
        Gold" will belong to AttributeSet "Jewelry".


        Some Attributes are "global", which means that they belong to any
        category and common for all products. Example of global attributes:
        "Warranty period", "Country of Origin" and so on.


        When you want to create product in certain category you need to get list
        of attributes for this category and this is what this endpoint is for.


        **Please, carefully read description of each field in the model and make
        sure to unfold description of every child objects (especially
        "options")**
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: >
                        Attribute identifier. Please, consider the fact that
                        there could be several attributes with

                        the same name, but with different IDs. For example,
                        there can be AttributeSets "Shoes", "Dresses"

                        and "Jewelry". Shoes and Dresses has "color", but there
                        is no such attribute for "Jewelry".


                        So when you want to create product in "Shoes" or
                        "Dresses" you can (and if "color" is mandatory -

                        should) pass value of "color". But this attribute
                        "color" will have different IDs, probably

                        different set of options, maybe different validation
                        rules and so on.
                      type: integer
                      example: 7865
                      readOnly: true
                      nullable: true
                    label:
                      description: >
                        Attribute label, in general same as name, but can
                        contain spaces and non-latin and/or non numeric

                        characters. Subject to change. For example, there is
                        attribute with label "Colour" but then new

                        attribute "Second color" was added to make end users be
                        able to shop for perfect colour combination.

                        After that attribute with label "Colour" may change its
                        label to "Main Colour". You can use this

                        property if you are building your own UI for
                        SellerCenter operations as label for attribute.
                      type: string
                      example: Sample attribute label
                      nullable: true
                      readOnly: true
                    name:
                      description: >-
                        Attribute name for internal usage. You can ignore this
                        property.
                      type: string
                      example: Attribute name
                      nullable: false
                      readOnly: true
                    feedName:
                      description: >
                        Feed name: this is how attribute is displayed in XLSX
                        exports and expected to be in imports. When your

                        integration with SellerCenter will generate files for
                        upload to SellerCenter, then you need to use this

                        property as column name. Very rarely changed, but you
                        need to consider that is can happen.
                      type: string
                      example: Feed name
                      nullable: false
                      readOnly: true
                    groupName:
                      description: >
                        Attribute's group name. If you implement own UI for
                        SellerCenter it is useful to display attributes in

                        groups, for example "Delivery", "Product Additional
                        Details". By using this field you can split

                        attributes in groups and display accordingly.
                      type: string
                      example: Content
                      nullable: true
                      readOnly: true
                    isMandatory:
                      description: |
                        Attribute is mandatory.
                      type: boolean
                      example: false
                      nullable: false
                      readOnly: true
                    isGlobalAttribute:
                      description: >
                        Is true when attribute does not belong to certain
                        AttributeSet and can be set for any product.
                      type: boolean
                      example: true
                      nullable: true
                      readOnly: true
                    description:
                      description: >
                        Attribute description. Maybe useful to see more about
                        meaning of attribute or when you develop

                        own UI for SellerCenter operations.
                      type: string
                      example: Some description of an attribute
                      nullable: true
                      readOnly: true
                    productType:
                      description: >
                        Legacy field indicating whether attribute belongs to
                        product ("simple"), product set ("config") or
                        very-special

                        ("sellercenter"). Please, do not rely on this field as
                        it is subject to change in near future. It is left

                        for compatibility reasons for some clients of previous
                        versions of API.
                      type: string
                      example: sellercenter
                      nullable: false
                      readOnly: true
                    inputType:
                      description: >
                        Type of input to display to user. See enum values for
                        possible values. This may be

                        useful if you develop your own UI for SellerCenter.
                      type: string
                      enum:
                        - checkbox
                        - datefield
                        - datetime
                        - dropdown
                        - multiselect
                        - numberfield
                        - textarea
                        - textfield
                      example: numberfield
                      nullable: false
                      readOnly: true
                    attributeType:
                      description: >
                        Type of an attribute, see enum for possible values. It
                        defines how SellerCenter stores value of certain

                        attribute. For type of "value" - it is stored "as-is",
                        for "option" - ID of option stored,

                        for "multi_option" - array or option IDs.


                        This is useful when you get information about product
                        set and you want to understand whether

                        123 is plain value or ID of option.


                        There is a special attribute type called "system".
                        Attribute with those types returned for purposes

                        of making aware about logic of those attributes. For
                        example, you may see attribute "Brand" among them.

                        From this attribute you will see useful information like
                        "is it mandatory?", "what is example value of

                        it?", "what description can I show to my users while I
                        develop our own UI for SellerCenter".


                        Attributes of this type should not be sent in array of
                        "attributes" when you create or update your

                        product sets. Continuing with example of Brand
                        attribute: to pass this information you should use

                        field brandId in root of payload for creation of product
                        set.
                      type: string
                      enum:
                        - value
                        - option
                        - multi_option
                        - system
                      example: system
                      nullable: false
                      readOnly: true
                    exampleValue:
                      description: Attribute's example value
                      type: string
                      nullable: true
                      readOnly: true
                    maxLength:
                      description: >
                        Attribute's max length, applicable for string
                        attributes.
                      type: integer
                      example: 23
                      nullable: true
                      readOnly: true
                    isVisibleForHybrid:
                      description: >
                        This flag enables/disable if an attribute is visible or
                        not for a hybrid product
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    attributeDefinitionType:
                      description: |
                        Is used to define the attribute type
                      type: string
                      enum:
                        - default
                        - price_status
                        - price
                        - special_price
                        - sale_start
                        - sale_end
                      example: price
                      nullable: true
                      readOnly: true
                    attributeDefinitionCountry:
                      description: |
                        Is used to define the attribute's country/vendor
                      type: string
                      enum:
                        - TW
                        - SG
                        - PH
                        - ID
                        - MY
                        - HK
                      example: MY
                      nullable: true
                      readOnly: true
                    inputMode:
                      description: >
                        Is used to disable, hide a field. See enum values for
                        possible values.
                      type: string
                      enum:
                        - edit
                        - display
                        - invisible
                        - edit_on_create
                      example: edit
                      nullable: true
                      readOnly: true
                    forbidEmpty:
                      description: |
                        If set to true an attribute can not be 0 or NULL.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    options:
                      description: >
                        Attribute options. List of all option for current
                        attribute. Additional validation may apply

                        like validation "brand to attribute mappings",
                        "attribute to attribute mapping". Example:

                        you want to create new product in category "Shoes".
                        Option "45" is among options of attribute

                        "Size", but there is a mapping which says that if for
                        attribute "Age group" there is a value

                        "Kids" selected then only allowed sizes are "20", "21",
                        ... "32".
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: >
                              Option identifier. Please note that several
                              attrbiutes can have options with same name,

                              but with different IDs. You need to use right
                              option ID for right attribute. For example,

                              there are attributes "Colour" (ID=1) and "Soil
                              color" (ID=2). "Color" has option "Black"

                              with ID=1234 and "Soil color" has option "Black"
                              with ID=9876. Even though name of options

                              are the same, when you want to pass value for
                              "Soil color" you can send only 9876,
                            type: integer
                            example: 631
                            readOnly: true
                            nullable: false
                          name:
                            description: >
                              Option name. If you implement own UI for
                              SellerCenter you can display this to user, also

                              same value end user in the shop will see. If you
                              are generating XLS files for future

                              upload to SellerCenter then you need also to use
                              this value. Please, note that very rarely

                              this value can be changed (for example, one colour
                              got splitted in two or more, renamed

                              to be more understandable for end user)
                            type: string
                            example: Black
                            nullable: false
                            readOnly: true
                          isDefault:
                            description: >
                              Is option default. Used as hint when this option
                              is most commonly used. It may be useful

                              if you implementing own UI for SellerCenter and
                              this option should be displayed as

                              selected by defaul when your user sees the screen
                              of product set creation.
                            type: boolean
                            example: false
                            nullable: true
                            readOnly: true
                      nullable: true
                      readOnly: true
                    isEditionBySellerBlocked:
                      description: >
                        If set to true then the value of the attribute can not
                        be changed after the product was synced with the shop.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    isUsedInConsignmentFormulas:
                      description: >
                        If set to true then the attribute is used in consignment
                        formulas.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Category
  /v2/category/{categoryId}/settings:
    get:
      summary: Get category settings
      security:
        - oAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
          description: Numeric Id of Category
      description: >
        Return category settings. In SellerCenter you can setup image or price
        restrictions for every category.  The settings can be inherited from the
        parent category.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 32
                    shopId:
                      type: string
                      example: 139593
                      description: Src ID of the category
                    name:
                      type: string
                      example: Electronics
                    restrictions:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            example: price
                            enum:
                              - price
                              - image
                          name:
                            type: string
                            example: min_price
                            enum:
                              - image_allowed_background_color
                              - image_max_background_percentage
                              - image_max_blurriness_score
                              - max_discount_percentage
                              - max_price
                              - max_sale_price
                              - min_discount_percentage
                              - min_price
                              - min_sale_price
                          description:
                            type: string
                            example: Min Price
                          country:
                            type: string
                            example: DE
                            nullable: true
                          validationType:
                            type: string
                            example: scalar
                          value:
                            type: string
                            example: '10'
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Category
  /v2/category/{categoryId}/children:
    get:
      summary: Get category's direct children
      security:
        - oAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
          description: Numeric Id of Category
      description: |
        Return category 1st level/direct children.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Category identifier
                      type: integer
                      example: 7865
                      readOnly: true
                      nullable: true
                    uuid:
                      description: Category UUID identifier
                      example: 060cef12-08ef-4ae6-b15e-79398fedc774
                      type: string
                      readOnly: true
                    srcId:
                      type: string
                      nullable: true
                      description: >-
                        ID of category in Shop system. If null means that
                        category was not yet synchronized with Shop and is not
                        visible to end customers.
                      example: '39487664'
                    status:
                      description: Category status
                      type: string
                      enum:
                        - active
                        - inactive
                        - inherited_inactive
                        - deleted
                    visible:
                      description: Whether or not the category is visible
                      type: boolean
                      example: true
                      nullable: false
                    parentId:
                      description: Category parent identifier
                      type: integer
                      example: 1285
                      nullable: true
                      readOnly: true
                    name:
                      description: Category name
                      type: string
                      example: Sample category name
                      nullable: true
                      readOnly: true
                    attributeSetId:
                      description: Attribute set identifier
                      type: integer
                      example: 8757345
                      nullable: false
                      readOnly: true
                    pathIds:
                      description: Category path identifier list
                      type: array
                      example:
                        - 3461
                        - 6783
                      items:
                        type: integer
                    path:
                      description: Category path
                      type: array
                      example:
                        - Back To School
                        - For Kids
                        - Books
                      items:
                        type: string
                    hasChildren:
                      description: Whether or not the category has children
                      type: boolean
                      example: true
                      nullable: false
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Category
  /v2/category/mappings:
    get:
      tags:
        - Category
      summary: Get the all category-to-attribute mapping information.
      description: >
        Depending on selected category, available options in some attributes can
        be limited. For example, there is

        an attribute "Season" with typical values like "Summer", "Autumn",
        "Winter" etc. In category "Winter sport

        clothing" options for attribute "Season" can be limited to only
        "Winter". If you will try to create or update

        product set in this category with Season=Summer there will be a
        validation error.


        When you request attributes for certain category using "GET
        /v2/category/{categoryId}/attributes", this mapping

        is already included. That means when you request "GET
        /v2/category/{category Id of Winter sport

        clothing}/attributes" then in available options of attribute "Season"
        you will see only "Winter".
      security:
        - oAuth: []
      operationId: GET_v2-category-mappings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryId:
                      type: integer
                      example: 32
                    categoryName:
                      type: string
                      example: Health
                    attributes:
                      type: array
                      items:
                        type: object
                        properties:
                          attributeId:
                            type: integer
                            example: 80
                          options:
                            type: array
                            items:
                              type: integer
                              example: 99
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/category/{categoryId}/automatic-nomenclature:
    get:
      summary: Returns formula for calculating automatic nomenclature.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
          description: Numeric Id of Category
      description: >
        This endpoint may be used when you implement UI for SellerCenter
        operations. For some categories there is so called "Automatic
        Nomenclature" feature enabled. If it is configured, then name of product
        set get calculated automatically based on some other attributes.


        For example when this endpoint returns "attr.brand attr.model
        attr.color", then provided name of product set will be ignored during
        saving and name will be set to "Levis 501 Blue".


        This endpoint may be used interactively show to user in UI what will be
        resulted name of product set.


        If empty string is returned then no formula is applied. Additionally,
        empty string (no formula) will be returned when you request it for
        inactive and/or deleted categories or categories outside of category
        root for current seller.


        As user of this endpoint to calculate name of product set you need to
        replace all occurances of `attr.[a-zA-Z0-9]` with values of attributes
        with given names.


        Example: you got following string as response `"attr.brand attr.model
        (attr.color)"`. You need to go through attributes of current product set
        and find attributes with *names* equal to brand, model and color. Then
        you do replacement in initial string so that `attr.brand` will be
        replaced with `Adidas`. So at the end you will have resulted name for
        your product set as `Adidas 4DFWD (Orange)`. Also, note that in formula
        the could be string characters like `(` and `)` in given example, you
        don't need to replace them with anything.
      responses:
        '200':
          description: string with automatic nomenclature formula
          content:
            application/json:
              schema:
                example: attr.brand attr.model attr.color
                type: string
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Category
  /v2/category/{categoryId}:
    get:
      tags:
        - Category
      summary: Get the category for the provided id.
      description: >
        Get some information about a category based on its id. This is not
        related to a particular seller, so the properties (eg visibility)

        are not altered in any way.
      security:
        - oAuth: []
      operationId: GET_v2-category-by-id
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
          description: Numeric Id of Category
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Category identifier
                      type: integer
                      example: 7865
                      readOnly: true
                    srcId:
                      type: string
                      nullable: true
                      description: >-
                        ID of category in Shop system. If null means that
                        category was not yet synchronized with Shop and is not
                        visible to end customers.
                      example: '39487664'
                    uuid:
                      description: Category UUID identifier
                      example: 060cef12-08ef-4ae6-b15e-79398fedc774
                      type: string
                      readOnly: true
                    parentId:
                      description: Category parent identifier
                      type: integer
                      example: 1285
                      nullable: true
                      readOnly: true
                    name:
                      description: Category name
                      type: string
                      example: Sample category name
                      readOnly: true
                    visible:
                      description: If the category is visible or not
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    status:
                      type: string
                      enum:
                        - active
                        - inactive
                        - inherited_inactive
                        - deleted
                    path:
                      description: Category path
                      type: array
                      example:
                        - Back To School
                        - For Kids
                        - Books
                      items:
                        type: string
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/categories:
    get:
      tags:
        - Category
      summary: >
        Get the categories for the provided search query. When search query is
        empty or not included in

        the request then endpoint can be used to paginate throw all categories.
      security:
        - oAuth: []
      operationId: GET_v2-categories-search-by-query
      parameters:
        - in: query
          name: query
          required: false
          schema:
            type: string
          description: Search query
        - name: includeInaccessible
          in: query
          required: false
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: Category identifier
                          type: integer
                          example: 7865
                          readOnly: true
                          nullable: true
                        parentId:
                          description: Category parent identifier
                          type: integer
                          example: 1285
                          nullable: true
                          readOnly: true
                        name:
                          description: Category name
                          type: string
                          example: Sample category name
                          nullable: true
                          readOnly: true
                        attributeSetId:
                          description: Attribute set identifier
                          type: integer
                          example: 8757345
                          nullable: false
                          readOnly: true
                        pathIds:
                          description: Category path identifier list
                          type: array
                          example:
                            - 3461
                            - 6783
                          items:
                            type: integer
                        path:
                          description: Category path
                          type: array
                          example:
                            - Back To School
                            - For Kids
                            - Books
                          items:
                            type: string
                        childrenIds:
                          description: Category children id list
                          type: array
                          example:
                            - 7834
                            - 7835
                          items:
                            type: integer
                        visible:
                          description: Whether or not the category is visible
                          type: boolean
                          example: true
                          nullable: false
                        fulfillmentVisible:
                          description: >-
                            Whether or not the category is visible in
                            consignment
                          type: boolean
                          example: true
                          nullable: false
                        qcDisabled:
                          description: >-
                            Whether or not the category is disabled in
                            quality-control
                          type: boolean
                          example: false
                          nullable: false
                        serialNumberRequired:
                          description: Whether or not the category requires a serial number
                          type: boolean
                          example: false
                          nullable: false
                        status:
                          description: Category status
                          type: string
                          enum:
                            - active
                            - inactive
                            - inherited_inactive
                            - deleted
                        uuid:
                          description: Category UUID identifier
                          example: 060cef12-08ef-4ae6-b15e-79398fedc774
                          type: string
                          readOnly: true
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/categories/ids:
    get:
      tags:
        - Category
      summary: Get the categories for the provided ids.
      security:
        - oAuth: []
      operationId: GET_v2-categories-search-by-ids
      parameters:
        - in: query
          name: ids[]
          description: Search by category ids
          schema:
            type: array
            items:
              type: integer
        - name: includeInaccessible
          in: query
          required: false
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: Category identifier
                          type: integer
                          example: 7865
                          readOnly: true
                          nullable: true
                        parentId:
                          description: Category parent identifier
                          type: integer
                          example: 1285
                          nullable: true
                          readOnly: true
                        name:
                          description: Category name
                          type: string
                          example: Sample category name
                          nullable: true
                          readOnly: true
                        attributeSetId:
                          description: Attribute set identifier
                          type: integer
                          example: 8757345
                          nullable: false
                          readOnly: true
                        pathIds:
                          description: Category path identifier list
                          type: array
                          example:
                            - 3461
                            - 6783
                          items:
                            type: integer
                        path:
                          description: Category path
                          type: array
                          example:
                            - Back To School
                            - For Kids
                            - Books
                          items:
                            type: string
                        childrenIds:
                          description: Category children id list
                          type: array
                          example:
                            - 7834
                            - 7835
                          items:
                            type: integer
                        visible:
                          description: Whether or not the category is visible
                          type: boolean
                          example: true
                          nullable: false
                        fulfillmentVisible:
                          description: >-
                            Whether or not the category is visible in
                            consignment
                          type: boolean
                          example: true
                          nullable: false
                        qcDisabled:
                          description: >-
                            Whether or not the category is disabled in
                            quality-control
                          type: boolean
                          example: false
                          nullable: false
                        serialNumberRequired:
                          description: Whether or not the category requires a serial number
                          type: boolean
                          example: false
                          nullable: false
                        status:
                          description: Category status
                          type: string
                          enum:
                            - active
                            - inactive
                            - inherited_inactive
                            - deleted
                        uuid:
                          description: Category UUID identifier
                          example: 060cef12-08ef-4ae6-b15e-79398fedc774
                          type: string
                          readOnly: true
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/categories/uuids:
    get:
      tags:
        - Category
      summary: Get the categories for the provided uuids.
      security:
        - oAuth: []
      operationId: GET_v2-categories-search-by-uuids
      parameters:
        - in: query
          name: uuids[]
          description: Search by category uuids
          schema:
            type: array
            items:
              type: string
        - name: includeInaccessible
          in: query
          required: false
          schema:
            type: boolean
            enum:
              - true
              - false
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: Category identifier
                          type: integer
                          example: 7865
                          readOnly: true
                          nullable: true
                        parentId:
                          description: Category parent identifier
                          type: integer
                          example: 1285
                          nullable: true
                          readOnly: true
                        name:
                          description: Category name
                          type: string
                          example: Sample category name
                          nullable: true
                          readOnly: true
                        attributeSetId:
                          description: Attribute set identifier
                          type: integer
                          example: 8757345
                          nullable: false
                          readOnly: true
                        pathIds:
                          description: Category path identifier list
                          type: array
                          example:
                            - 3461
                            - 6783
                          items:
                            type: integer
                        path:
                          description: Category path
                          type: array
                          example:
                            - Back To School
                            - For Kids
                            - Books
                          items:
                            type: string
                        childrenIds:
                          description: Category children id list
                          type: array
                          example:
                            - 7834
                            - 7835
                          items:
                            type: integer
                        visible:
                          description: Whether or not the category is visible
                          type: boolean
                          example: true
                          nullable: false
                        fulfillmentVisible:
                          description: >-
                            Whether or not the category is visible in
                            consignment
                          type: boolean
                          example: true
                          nullable: false
                        qcDisabled:
                          description: >-
                            Whether or not the category is disabled in
                            quality-control
                          type: boolean
                          example: false
                          nullable: false
                        serialNumberRequired:
                          description: Whether or not the category requires a serial number
                          type: boolean
                          example: false
                          nullable: false
                        status:
                          description: Category status
                          type: string
                          enum:
                            - active
                            - inactive
                            - inherited_inactive
                            - deleted
                        uuid:
                          description: Category UUID identifier
                          example: 060cef12-08ef-4ae6-b15e-79398fedc774
                          type: string
                          readOnly: true
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/content-score/product-set/{productSetId}:
    get:
      summary: Retrieves the productSet content score
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                    description: >-
                      Always equals to "ok" when calculation completed
                      successfully.
                  score:
                    type: number
                    format: float
                    example: 50
                    minimum: 0.01
                    maximum: 100
                    description: >
                      Percentage of the score. For example "60.00" means that
                      from 100% current data scores to

                      only 60 percents. Depending on category configuration
                      there can be threshold and products

                      with score below that threshold will be auto rejected
                      during product QC.
                  score_report:
                    type: object
                    properties:
                      points:
                        type: number
                        description: >
                          Number of points product set has now. Different rules
                          can have different scoring, for example

                          having long enough title is counted for 10 points and
                          length of description for 90. So

                          when description is not filled at all it can be 0,
                          when it filled by 50% of required it

                          will be 45.
                      maxPoints:
                        type: number
                        description: >
                          Like described in previous property for title it will
                          10 and for description - 90.
                      isSuccessful:
                        type: boolean
                        description: |
                          Whether or not rule is considered to be fulfulled.
                      productValue:
                        type: string
                        description: >
                          Current product value. Can be useful when you want to
                          get score for existing product set, in this

                          case you can receive here, for example, 9 for score
                          for title length which means that current

                          length of title is 9 characters. When you send product
                          data you already know this value.
                      metric:
                        type: string
                        description: >
                          Human readable and translated metric, can be displayed
                          in UI
                        example: Description words
                      recommendation:
                        type: string
                        example: more or equal than 3
                      ruleGroup:
                        type: string
                        enum:
                          - AttributeExists
                          - CategoryLevel
                          - DescriptionBoldPercent
                          - DescriptionBullets
                          - DescriptionWords
                          - TitleChars
                          - Barcode
                      ruleParameters:
                        type: object
                        description: >
                          Contains configuration data for the rule.



                          Rule of group Barcode does not have any configuration.



                          Rule of groups CategoryLevel, DescriptionBullets,
                          DescriptionWords has property `min` in this

                          object.



                          Rule of group AttributeExists has property
                          `attributeId` in this object.



                          Rule of groups DescriptionBoldPercent and TitleChars
                          has properties `min` and `max` in this object.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Content Score
  /v2/content-score/score:
    post:
      summary: Calculate productSet content score
      description: >
        Calculates the productSet content score based on product properties and
        attributes. The rules for scoring are set in the content score setup
        section from SellerCenter.


        **Important notice:** this feature is configured based on attribute
        names and can be configured for several different categories with same
        rules. For example, there are categories "Shoes" and "Jewelry". Both
        categories belongs to different attribute sets and they have different
        attributes. But there could be attribute with name "Color" in both
        categories. Even though this attribute has different ID for product in
        "Shoes" and "Jewelry", for Content Score feature we can have global rule
        "Attribute with name Color must be filled". In response you will get
        information about to which attribute ID score was calculated.


        Please, when working with this endpoint read as well description of each
        field in the model. For this please click on "schema" and unfold
        objects, there you will see additional description.


        Also note that when you send well-formed request but category has no
        content-score rules or  feature is disabled you will get 404 response
        code.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - categoryId
              properties:
                productSetId:
                  type: integer
                categoryId:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                shortDescription:
                  description: >
                    Value of attribute with **name** "short_description" or
                    "highlights" (if any). This is legacy parameter and rules

                    relying on this parameter are in general not in use.
                  type: string
                attributeSetId:
                  description: >
                    Previously when product changed category initial attribute
                    set was kept (for example product was created in 

                    category "T-Shirts" with one attribute set, but then moved
                    to category "Shoes" which has another attribute set). 

                    This parameter was used, among other, to calculate content
                    score. Currently this parameter is not used in 

                    content score calculation. AttributeSetId is now taken from
                    current category. 


                    This parameter is deprecated and will be removed in future
                    versions of this endpoint.
                  deprecated: true
                  type: string
                attributes:
                  description: >
                    Array with attribute IDs as key plus value of attributes.
                    Please, see description of endpoint for example value.

                    Make sure to send all attributes, even with empty values.
                  type: object
                  additionalProperties: true
                variations:
                  description: >
                    Array of products (variations). Only one key is in each
                    variation is expected - `ean`, as there is only

                    one content score rule for products itself. Deleted
                    variations do not participate in calculating content

                    score, so when you are sending not yet saved data, then you
                    should omit sending deleted variations.
                  type: object
                  additionalProperties: true
              example:
                productSetId: 364215
                categoryId: 524
                name: Name
                description: Here is the long description
                shortDescription: Short description
                attributeSetId: 12
                attributes:
                  '2': value2
                  '254': value1
                variations:
                  - ean: 4059326403862
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                    description: >-
                      Always equals to "ok" when calculation completed
                      successfully.
                  score:
                    type: number
                    format: float
                    example: 50
                    minimum: 0.01
                    maximum: 100
                    description: >
                      Percentage of the score. For example "60.00" means that
                      from 100% current data scores to

                      only 60 percents. Depending on category configuration
                      there can be threshold and products

                      with score below that threshold will be auto rejected
                      during product QC.
                  score_report:
                    type: object
                    properties:
                      points:
                        type: number
                        description: >
                          Number of points product set has now. Different rules
                          can have different scoring, for example

                          having long enough title is counted for 10 points and
                          length of description for 90. So

                          when description is not filled at all it can be 0,
                          when it filled by 50% of required it

                          will be 45.
                      maxPoints:
                        type: number
                        description: >
                          Like described in previous property for title it will
                          10 and for description - 90.
                      isSuccessful:
                        type: boolean
                        description: |
                          Whether or not rule is considered to be fulfulled.
                      productValue:
                        type: string
                        description: >
                          Current product value. Can be useful when you want to
                          get score for existing product set, in this

                          case you can receive here, for example, 9 for score
                          for title length which means that current

                          length of title is 9 characters. When you send product
                          data you already know this value.
                      metric:
                        type: string
                        description: >
                          Human readable and translated metric, can be displayed
                          in UI
                        example: Description words
                      recommendation:
                        type: string
                        example: more or equal than 3
                      ruleGroup:
                        type: string
                        enum:
                          - AttributeExists
                          - CategoryLevel
                          - DescriptionBoldPercent
                          - DescriptionBullets
                          - DescriptionWords
                          - TitleChars
                          - Barcode
                      ruleParameters:
                        type: object
                        description: >
                          Contains configuration data for the rule.



                          Rule of group Barcode does not have any configuration.



                          Rule of groups CategoryLevel, DescriptionBullets,
                          DescriptionWords has property `min` in this

                          object.



                          Rule of group AttributeExists has property
                          `attributeId` in this object.



                          Rule of groups DescriptionBoldPercent and TitleChars
                          has properties `min` and `max` in this object.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Content Score
  /v2/countries/enabled:
    get:
      summary: |
        Get enabled countries
      description: |
        Get all enabled country codes
      security:
        - oAuth: []
      responses:
        '200':
          description: Response a list of enabled countries
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: string
                    example:
                      - SG
                      - VN
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Country
  /v2/export-products:
    get:
      summary: Triggers export of products
      security:
        - oAuth: []
      description: >
        Export files are generated in background. This means that for your
        request to trigger export API will return you data about scheduled job.
        Depending on size of export (whether it is 10 products or 100000
        products) export generation can take from milliseconds till some
        minutes.


        Please, be aware that depending on type of export format file (list of
        columns, how file looks) may differ. For example export with
        status=image-missing will contain only basic information about each
        product and columns for images.


        <strong>Note:</strong> In this section <em>CatalogProductId</em> refers
        to the id of the product in our system while <em>ProductId</em> is the
        EAN/ISBN/GTIN.
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          required: false
          name: status
          description: >
            Sections of product. 


            "all" returns all product sets without filtering.


            "active" will return product sets in active categories, with active
            brand, with at least one product  with stock, with price, synced
            with shop system, with at least one not-deleted image, with at least
            one product with "active" status.


            "inactive-all" - will return product sets where all products has
            status "inactive".


            "deleted-all" - will return product sets where all products has
            status "deleted".


            "image-missing" - will return product sets without images or with
            all images deleted.


            "pending" - return product sets with at least one active product
            with QC status "pending" (product sets which are waiting to be
            Quality Controlled).


            "rejected" - return product sets with at least one active product
            with QC status "rejected" (product sets which are rejected during
            Quality Controlled). You need to update products and fix issues
            found during Quality Control.


            "disapproved" - same as "rejected" but without Not-Authorized
            products.


            "sold-out" - will return product sets with 0 stock (product sets
            with all products have 0 stock).


            "not-authorized" - will return not authorized product sets.
          schema:
            type: string
            enum:
              - all
              - active
              - inactive-all
              - deleted-all
              - image-missing
              - pending
              - rejected
              - disapproved
              - sold-out
              - not-authorized
        - in: query
          required: false
          name: keyword
          description: >
            Search by product name / product sku / seller sku / parent sku. The
            keyword might be a string or an array of strings.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - in: query
          required: false
          name: createDateStart
          description: >
            Filter by creation date of product set. It should be less than
            createDateEnd. Date should be given in Y-m-d

            format, for example 2021-01-20.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: createDateEnd
          description: >
            Filter by date of creation of product set. It should be greater than
            createDateStart. Date should be given in Y-m-d

            format, for example 2021-02-14.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: updateDateStart
          description: >
            Filter by update date of product set. It should be less than
            updateDateEnd. Date should be given in Y-m-d

            format, for example 2021-01-20.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: updateDateEnd
          description: >
            Filter by update date of product set. It should be greater than
            updateDateStart. Date should be given in Y-m-d

            format, for example 2021-02-14.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: brandIds[]
          description: Search by brand IDs
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: tags[]
          description: Search by tag ids or names
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: visibility
          description: Search by visibility status
          schema:
            type: string
            enum:
              - Syncing
        - in: query
          required: false
          name: inStock
          description: If it sets true, the API will only return products that have stock.
          schema:
            type: boolean
        - in: query
          required: false
          name: reserved
          description: >-
            If it sets true, the API will only return products that have
            reserve.
          schema:
            type: boolean
        - in: query
          required: false
          name: categoryIds[]
          description: Search by category ids
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: onlyWithTags
          description: If it sets true, the API will only return products that have tags.
          schema:
            type: boolean
        - in: query
          required: false
          name: parentSku
          description: Search by parent sku
          schema:
            type: string
        - in: query
          required: false
          name: group
          description: Search by product group
          schema:
            type: string
        - in: query
          required: false
          name: attributeSetId
          description: >
            Search products by AttributeSet ID. AttributeSet defines which
            attribute certain category will have. For example:

            there can be AttributeSet "Shoes" with attributes like "sole
            material", "heel height" and there can be AttributeSet

            "Jewerly" with another attributes like "percentage of gold". 

            Each category in SellerCenter belongs to one AttributeSet, therefore
            AttributeSet defines which attribute each 

            category has.
          schema:
            type: integer
            example: 321
        - in: query
          required: false
          name: format
          description: Requested format.
          schema:
            type: string
            default: csv
            enum:
              - csv
              - xlsx
      responses:
        '200':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Export
  /v2/export-users:
    post:
      summary: Triggers export of users
      security:
        - oAuth: []
      description: >
        Export files are generated in background. This means that for your
        request to trigger export API will return you data about scheduled job.
        Depending on size of export (whether it is 10 users or 100000 users)
        export generation can take from milliseconds till some minutes.
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Export
  /v2/export-switchable-sellers:
    post:
      summary: Triggers export of switchable sellers
      security:
        - oAuth: []
      description: >
        Export files are generated in background. This means that for your
        request to trigger export API will return you data about scheduled job.
        Depending on size of export (whether it is 10 sellers or 100000 sellers)
        export generation can take from milliseconds till some minutes.
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Export
  /v2/users/import/seller_access:
    post:
      summary: Execute import of users
      security:
        - oAuth: []
      description: >
        Import a list of user's emails to sellers, it requires user to be a
        venture. All of rows in the file will be imported or none of them.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                The field name 'file1' is temporary - it will be changed
              required:
                - file1
              properties:
                file1:
                  type: string
                  format: binary
      responses:
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: >-
                      <b>File has been successfully uploaded.</b> Please be
                      patient while data is being processed.
                  errorMessages:
                    type: array
                    items:
                      type: string
                      example: >-
                        There is no data in uploaded file or all records were
                        invalid and have been ignored.
                  warningMessages:
                    type: array
                    items:
                      type: string
                      example: 'Unknown field: Country'
                  feedId:
                    type: integer
                    example: 7
                  feedUuid:
                    type: string
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin, Import, Users
  /v2/groups:
    get:
      summary: Get list of groups by search parameters
      security:
        - oAuth: []
      parameters:
        - name: brandId
          in: query
          required: true
          schema:
            type: integer
          allowEmptyValue: false
          description: Search by Brand ID
        - name: name
          in: query
          required: false
          schema:
            type: string
          description: Search by name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Super products
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/health:
    get:
      summary: Get information whether API has any problems or not
      description: >
        Format of the response can be changed. Please, do not rely on it in any
        automated actions.
      responses:
        '200':
          description: some basic information about status of the system
          content:
            application/json:
              schema:
                example: >
                  {"database":{"read":{"version":"5.7.33","active":true},"write":{"version":"5.7.33","active":true}}}
                type: string
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - System
  /v2/import/stock-update:
    post:
      summary: Update the products by uploading the file
      security:
        - oAuth: []
      description: >
        The file can have .csv or .xlsx extension. The import file is being
        processed in the background. This means that your request to trigger
        import API will return to you the data about the scheduled job.
        Depending on the size of the imported file import can take from
        milliseconds up to some minutes. This endpoint has no limit on amount of
        products in request, however it is recommended to send  products in
        requests which have changes and not send products which does not have
        updates and  it is recommended to split big requests into chunks.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                The field name 'file1' is temporary - it will be changed
              required:
                - file1
              properties:
                file1:
                  type: string
                  format: binary
      responses:
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: >-
                      <b>File has been successfully uploaded.</b> Please be
                      patient while data is being processed.
                  errorMessages:
                    type: array
                    items:
                      type: string
                      example: >-
                        There is no data in uploaded file or all records were
                        invalid and have been ignored.
                  warningMessages:
                    type: array
                    items:
                      type: string
                      example: 'Unknown field: Country'
                  feedId:
                    type: integer
                    example: 7
                  feedUuid:
                    type: string
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Import
  /v2/order/document/package/{packageId}:
    post:
      tags:
        - Orders
      description: Upload sales order document for package with id given.
      security:
        - oAuth: []
      operationId: POST_v2-order-document-package-upload
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documentType:
                  description: Document Type of the file uploaded.
                  type: string
                documentFile:
                  description: >-
                    The file uploaded. Please, be aware about allowed document
                    types. For example, for type <code>invoice</code> only png,
                    jpg and pdf are allowed.
                  type: string
                  format: binary
              required:
                - documentType
                - documentFile
      parameters:
        - required: true
          description: Numeric Package Id
          in: path
          name: packageId
          schema:
            type: integer
      responses:
        '200':
          description: Document was successfully uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ID of created document
                    type: integer
                    example: 672
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
    delete:
      tags:
        - Orders
      description: Deletes sales order document for package with given id.
      security:
        - oAuth: []
      operationId: POST_v2-order-document-package-delete
      parameters:
        - required: true
          description: Numeric Package Id
          in: path
          name: packageId
          schema:
            type: integer
      responses:
        '204':
          description: Document is deleted
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/set-invoice-number:
    post:
      tags:
        - Orders
      description: >-
        Sets an invoice number. Invoice will be changed for all order items in
        the package.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - orderItemId
                - invoiceNumber
              properties:
                orderItemId:
                  type: integer
                  example: 1
                invoiceNumber:
                  type: string
                  example: INV-20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemId
                  - invoiceNumber
                properties:
                  orderItemId:
                    type: integer
                    example: 1
                  invoiceNumber:
                    type: string
                    example: INV-20
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/set-invoice-access-key:
    post:
      tags:
        - Orders
      description: >-
        Sets an access key for an invoice of Order Items. Order Item has can't
        be in status *'Pending'*. AccessKey must be unique and valid.
        DocumentUrl is optional. If both Document Url and InvoiceEncodedXml are
        set, InvoiceEncodedXml is used. When "invoice access key" feature is
        disabled any call will result to error. Access key will be set for all
        items in the same package (setting of access key for one item in package
        will set it for all other items in the same package)
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - orderItems
              properties:
                orderItems:
                  type: array
                  items:
                    type: object
                    required:
                      - orderItemId
                      - accessKey
                    properties:
                      orderItemId:
                        type: integer
                        example: 1
                      accessKey:
                        type: string
                        example: '12345678901234567890123456789012345678901234'
                      documentUrl:
                        type: string
                        description: The URL to the shipment document (optional)
                      InvoiceEncodedXml:
                        type: string
                        description: >-
                          The invoice base64 encoded xml. Actually, it is
                          replacement of DocumentUrl parameter. If both
                          parameters are set, EncodedXml is used.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders-failure-reasons:
    get:
      tags:
        - Orders
      description: Get the active failure reasons for orders
      security:
        - oAuth: []
      operationId: GET_v2-orders-failure-reasons
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      nullable: false
                      example: 99
                    type:
                      type: string
                      nullable: false
                      example: canceled
                      enum:
                        - canceled
                        - failed
                        - return_rejected
                        - returned
                        - canceled_system
                    name:
                      type: string
                      nullable: false
                      example: Wrong address
                      description: >-
                        Name of the failure reason which should be used to set
                        the status to cancelled, returned or failed delivery.
                    description:
                      type: string
                      nullable: false
                      example: Wrong address
                      description: >-
                        Description of the failure reason which should be used
                        to set the status to cancelled, returned or failed
                        delivery. (THIS FIELD BE SOON REMOVED)
                    outOfStock:
                      type: boolean
                      nullable: false
                      example: true
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders-shipment-providers:
    get:
      tags:
        - Orders
      description: Get the shipment providers for orders
      security:
        - oAuth: []
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: boolean
            example: true
          description: Filter by status
      operationId: GET_v2-orders-shipment-providers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Shipment provider numeric internal identifier
                      example: 42
                    uuid:
                      type: string
                      description: Shipment provider identifier (UUID)
                      example: cf9b18be-61f5-4bde-a0ce-d0114bfdcb01
                    name:
                      type: string
                      description: Name
                      example: AS-FedEx
                    default:
                      type: boolean
                      description: True if it is the default shipment provider
                      example: 'true'
                    apiIntegrationAvailable:
                      type: boolean
                      description: >-
                        True if api integration is available with this shipment
                        provider
                      example: 'true'
                    status:
                      type: boolean
                      description: Status of the shipment provider for a seller
                      example: 'true'
                    cashOnDelivery:
                      type: boolean
                      description: True if active_for_cod is true otherwise false
                      example: 'true'
                    url:
                      type: string
                      description: Tracking url
                      example: https://www.sample-3pl.com/tracking
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order-pickup-requests:
    post:
      tags:
        - Orders
      description: Mark order items as ready to pick up
      security:
        - oAuth: []
      operationId: GET_v2-order-pickup-requests
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItemIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 123456
                    - 654321
      responses:
        '201':
          description: Created pickup request
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 1
                      - 2
                  errors:
                    type: array
                    items:
                      type: string
                    description: Empty list of errors
                    example: []
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                    example: Validation Failed
                  detail:
                    type: string
                    example: 'orderItemIds[0]: This value should be of type integer.'
                  violations:
                    type: array
                    items:
                      type: object
                      properties:
                        propertyPath:
                          type: string
                          example: orderItemIds[0]
                        title:
                          type: string
                          example: This value should be of type integer.
                        parameters:
                          type: object
                          properties:
                            value:
                              type: string
                              example: invalid_order_item_id
                            type:
                              type: string
                              example: integer
                        type:
                          type: string
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        orderItemId:
                          type: integer
                          description: |
                            Id of the order item
                          example: 1
                        detail:
                          type: string
                          description: >
                            A human readable explanation specific to this
                            occurrence of the problem that is helpful to locate
                            the problem and give advice on how to proceed.
                            Written in English and readable for engineers,
                            usually not suited for non technical stakeholders
                            and not localized.
                          example: Order item contains not allowed shipment type
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders:
    get:
      tags:
        - Orders
      description: Get list of orders with filters
      security:
        - oAuth: []
      parameters:
        - name: X-Context
          in: header
          required: false
          schema:
            type: string
            enum:
              - admin
              - seller
            example: seller
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          required: false
          name: section
          description: >
            Search section

            - status_shipped - returns orders with order items status `shipped`

            - status_delivered - returns orders with order items status
            `delivered`

            - status_failed - returns orders with order items status `failed`

            - status_canceled - returns orders with order items status
            `canceled`

            - status_pending - returns orders with order items status `pending`

            - status_ready_to_ship - returns orders with order items status
            `ready_to_ship`

            - status_payment_pending - returns orders with order items status
            `payment_pending`

            - status_returned - returns orders with order items status
            `returned`

            - status_return_shipped_by_customer - returns orders with order
            items status `return_shipped_by_customer`

            - status_return_rejected - returns orders with order items status
            `return_rejected`

            - status_return_waiting_for_approval - returns orders with order
            items status `return_waiting_for_approval`

            - status_return_delivered - returns orders with order items status
            `return_delivered`

            - group_economy - returns orders with `pending` status and `economy`
            shipment provider type

            - group_express - returns orders with `pending` status and `express`
            shipment provider type

            - group_standard - returns orders with `pending` status and
            `standard` shipment provider type

            - group_digital - returns orders with `pending` status and `digital`
            shipment provider type

            - group_sameday - returns orders with `pending` status and `sameday`
            shipment provider type

            - group_air - returns orders with `pending` status and `air`
            shipment provider type

            - group_surface - returns orders with `pending` status and `surface`
            shipment provider type

            - group_missing_external_invoice_access_key - returns orders with
            `pending` or `canceled` status and invoice key is `empty`

            - group_ready_to_ship_manifested - returns orders with `ready to
            ship` status and manifest is `exists`

            - group_ready_to_ship_nonmanifested - returns orders with `ready to
            ship` status and manifest is `not exists`
          schema:
            type: string
            enum:
              - status_shipped
              - status_delivered
              - status_failed
              - status_canceled
              - status_pending
              - status_ready_to_ship
              - status_payment_pending
              - status_returned
              - status_return_shipped_by_customer
              - status_return_rejected
              - status_return_waiting_for_approval
              - status_return_delivered
              - group_economy
              - group_express
              - group_standard
              - group_digital
              - group_sameday
              - group_air
              - group_surface
              - group_missing_external_invoice_access_key
              - group_kpi_rejection_rate
              - group_kpi_return_rate
              - group_ready_to_ship_manifested
              - group_ready_to_ship_nonmanifested
        - in: query
          required: false
          name: dateStart
          description: >-
            Search by order creation or date time. Time information is optional.
            By default start time will be at 00:00:00.
          schema:
            type: string
            anyOf:
              - format: date
              - format: date-time
            example: '2022-12-11T08:46:12.123456Z'
        - in: query
          required: false
          name: dateEnd
          description: >-
            Search by order creation date or date time. Time information is
            optional. By default end time will be at 23:59:59.
          schema:
            type: string
            anyOf:
              - format: date
              - format: date-time
            example: '2022-12-11T21:46:12.123456Z'
        - in: query
          required: false
          name: orderNumbers[]
          description: Search by order number
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: packed
          description: |
            Search by packed status
            - fully_packed - all of order items packed
            - partially_packed - part of order items packed
            - not_packed - no order items packed
          schema:
            type: string
            enum:
              - fully_packed
              - partially_packed
              - not_packed
        - in: query
          required: false
          name: customers[]
          description: Search by customer name (first name and last name)
          example:
            - John
            - Malkovic
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: printedStatus
          description: Search by printed status
          schema:
            type: boolean
        - in: query
          required: false
          name: tags[]
          description: Search by tag's numeric id.
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: productSku[]
          description: Search by product sku
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: delivery
          description: >
            Search by delivery:

            - shippedUnder24h - Orders with the status of the Order Item was set
            to shipped less or equal than 24 hours ago.

            - notShippedUnder24h - Orders with the status of the Order Item was
            set to shipped more than 24 hours ago.

            - notShippedUnder24BusinessHours - Orders with the status of the
            Order Item was set to shipped more than 24 business hours ago.
          schema:
            type: string
            enum:
              - shippedUnder24h
              - notShippedUnder24h
              - notShippedUnder24BusinessHours
        - in: query
          required: false
          name: shipmentType
          description: |
            Search by shipment type
          schema:
            type: string
            enum:
              - warehouse
              - dropshipping
              - crossdocking
        - in: query
          required: false
          name: shipmentProviders[]
          description: Search by shipment provider id
          example:
            - 8532
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: paymentMethods[]
          description: Search by payment methods
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: outlet
          description: Search orders from outlet only
          schema:
            type: boolean
        - in: query
          required: false
          name: invoiceRequired
          description: >-
            If this field is set to "1" then only orders for which an invoice is
            required will be returned
          schema:
            type: boolean
        - in: query
          required: false
          name: cancelationReasons[]
          description: Search by cancelation reasons
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: fulfilmentType[]
          description: |
            Search by fulfilment type
            - merchant - means the type of shipment from the seller's warehouse
            - venture - means the type of shipment from the venture's warehouse
          schema:
            type: array
            items:
              type: string
              enum:
                - merchant
                - venture
        - in: query
          required: false
          name: orderSources[]
          description: Search by order sources
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: sellerNames[]
          description: Search by seller name
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: updateDateStart
          description: >-
            Search by order item updated date or date time. Will return orders
            with at least one order item updated within the selected range. By
            default, the start time will be set to 00:00:00.
          schema:
            type: string
            anyOf:
              - format: date
              - format: date-time
            example: '2022-12-11T21:46:12.123456Z'
        - in: query
          required: false
          name: updateDateEnd
          description: >-
            Search by order item updated date or date time. Will return orders
            with at least one order item updated within the selected range. By
            default, the end time will be set to 23:59:59.
          schema:
            type: string
            anyOf:
              - format: date
              - format: date-time
            example: '2022-12-11T21:46:12.123456Z'
        - in: query
          required: false
          name: warehouses[]
          description: Search by warehouse name
          schema:
            type: array
            items:
              type: string
        - required: false
          description: Array of numeric Order Ids
          in: query
          name: orderIds[]
          schema:
            type: array
            items:
              type: integer
        - name: includeVoucherDetails
          in: query
          description: >-
            Include voucher details in response (only for orders with voucher)
            default: false
          schema:
            type: boolean
        - in: query
          required: false
          name: sort
          description: The field to sort the results by.
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
        - in: query
          required: false
          name: sortDir
          description: >-
            Define which if you like to sort ascending or descending. Default is
            ascending
          example: asc
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: Unique order identifier
                          example: 9d6ca7ce-4b71-46bf-aa5e-a0727eca880z
                        invoiceRequired:
                          type: boolean
                          description: >-
                            This flag means that invoice is required for the
                            Order
                          example: false
                        id:
                          type: integer
                          description: Unique numeric order identifier
                          example: 1111
                        regionId:
                          type: string
                          description: Regions order identifier
                          example: 2222-2
                        sellerId:
                          type: integer
                          description: Seller identifier
                          example: 222
                        number:
                          type: string
                          description: Order number given by the seller
                          example: MY-111143
                        customer:
                          type: object
                          description: Customer name
                          properties:
                            firstName:
                              type: string
                              description: First name
                              example: John
                              nullable: true
                            lastName:
                              type: string
                              description: Last name
                              example: Doe
                              nullable: true
                        address:
                          type: object
                          description: Order address
                          properties:
                            billing:
                              type: object
                              nullable: true
                              description: >-
                                Info about customer address with restricted
                                access to certain fields
                              properties:
                                firstName:
                                  type: string
                                  description: Customer first name
                                  example: John
                                  nullable: true
                                lastName:
                                  type: string
                                  description: Customer last name
                                  example: Doe
                                  nullable: true
                                phone:
                                  type: array
                                  items:
                                    type: string
                                  example:
                                    - '#####'
                                address:
                                  type: array
                                  items:
                                    type: string
                                  description: 5 rows to show the address
                                  example:
                                    - Johannisstr. 20
                                    - ''
                                    - ''
                                    - ''
                                    - ''
                                email:
                                  type: string
                                  description: Customer email
                                  example: '#####'
                                city:
                                  type: string
                                  description: Customer city
                                  example: Berlin
                                ward:
                                  type: string
                                  example: ''
                                region:
                                  type: string
                                  description: Customer region
                                  example: ''
                                postCode:
                                  type: string
                                  description: Customer post code
                                  example: '10117'
                                country:
                                  type: string
                                  description: Customer country
                                  example: Germany
                            shipping:
                              type: object
                              nullable: true
                              description: >-
                                Info about customer address with restricted
                                access to certain fields
                              properties:
                                firstName:
                                  type: string
                                  description: Customer first name
                                  example: John
                                  nullable: true
                                lastName:
                                  type: string
                                  description: Customer last name
                                  example: Doe
                                  nullable: true
                                phone:
                                  type: array
                                  items:
                                    type: string
                                  example:
                                    - '#####'
                                address:
                                  type: array
                                  items:
                                    type: string
                                  description: 5 rows to show the address
                                  example:
                                    - Johannisstr. 20
                                    - ''
                                    - ''
                                    - ''
                                    - ''
                                email:
                                  type: string
                                  description: Customer email
                                  example: '#####'
                                city:
                                  type: string
                                  description: Customer city
                                  example: Berlin
                                ward:
                                  type: string
                                  example: ''
                                region:
                                  type: string
                                  description: Customer region
                                  example: ''
                                postCode:
                                  type: string
                                  description: Customer post code
                                  example: '10117'
                                country:
                                  type: string
                                  description: Customer country
                                  example: Germany
                          required:
                            - billing
                            - shipping
                        nationalRegistrationNumber:
                          type: string
                          nullable: true
                          description: It is the registration number of the customer
                          example: '11114389'
                        payoutPending:
                          type: boolean
                          description: >-
                            Flag that specifies whether the order will generate
                            transactions or put them on hold until other
                            requirements are met
                          example: false
                        gift:
                          type: object
                          properties:
                            option:
                              type: boolean
                              description: Gift option
                              example: false
                            message:
                              description: Gift message
                              example: msg
                          required:
                            - option
                            - message
                        voucher:
                          type: object
                          properties:
                            code:
                              type: string
                              description: Voucher code
                              example: code
                            type:
                              type: string
                              description: Voucher type
                              example: type
                          required:
                            - code
                            - type
                        deliveryInfo:
                          type: string
                          description: Additional info about delivery
                          example: 1 D
                        paymentMethod:
                          type: string
                          description: Order payment method
                          example: NpsPayment
                        currency:
                          type: string
                          description: Currency
                          example: ARS
                        remarks:
                          type: string
                          description: Additional info about order
                          example: ''
                        createdAt:
                          type: string
                          format: datetime
                          description: Date and time when the order was created
                          example: '2021-09-22T23:21:42.123456Z'
                        updatedAt:
                          type: string
                          format: datetime
                          description: >-
                            Date and time when the order was updated. The dates
                            returned will follow the same format as in the
                            example
                          example: '2021-09-22T23:21:42.123456Z'
                        addressUpdatedAt:
                          type: string
                          format: datetime
                          description: >-
                            Date and time when address was updated last time.
                            The dates returned will follow the same format as in
                            the example
                          example: '2021-09-22T23:21:42.123456Z'
                        exchangeByOrderId:
                          type: string
                          description: >-
                            It indicates that current order is exchange order
                            for other order. This field contains a new order ID
                          nullable: true
                          example: null
                        exchangeForOrderId:
                          type: string
                          description: >-
                            It indicates that current order is exchange order
                            for other order. This field contains an old order ID
                          nullable: true
                          example: null
                        extraAttributes:
                          type: string
                          description: Additional attributes set by the seller.
                          example: null
                        statusList:
                          type: object
                          description: >-
                            Status list from order items as keys with count of
                            items with particular status as a value
                          example:
                            pending: 2
                            canceled: 1
                        source:
                          type: string
                          description: Order source
                          nullable: true
                          example: Zalora MY
                        itemCount:
                          type: integer
                          description: Amount of items in order
                          example: 1
                        unitPriceSumWithFees:
                          type: number
                          format: float
                          description: Sum of unit prices from items with fees
                          example: 10200.5
                        shippingFeeSstSum:
                          type: number
                          format: float
                          description: Sum of shipping fee SST tax
                          example: 10.5
                        grandTotal:
                          type: number
                          format: float
                          description: Sum of paid prices from items with fees
                          example: 100.5
                        targetToShip:
                          type: string
                          description: >-
                            Promised shipment date. It works only if Promised
                            Shipping Date Feature is Enabled. The dates returned
                            will follow the same format as in the example
                          nullable: true
                          example: '2022-12-23T05:36:23.123456Z'
                        shipmentProviderType:
                          type: string
                          description: >-
                            Calculated shipment provider type across all order
                            items
                          nullable: true
                          enum:
                            - express
                            - standard
                            - economy
                            - digital
                            - air
                            - surface
                            - mixed
                            - sameday
                          example: standard
                        shipmentProviderPreSelected:
                          type: boolean
                          description: >-
                            Information if the shipment provider has been
                            pre-selected
                          example: true
                        packedItemsCount:
                          type: integer
                          description: Amount of packed order items
                          example: 3
                        orderItemIds:
                          type: array
                          items:
                            type: integer
                          description: Ids of the order items in the order
                          example:
                            - 1111
                        items:
                          type: array
                          description: Order items
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: Unique numeric identifier
                                example: 1111
                              srcId:
                                type: string
                                description: Order item src ID
                                example: MY-32022990
                              sellerId:
                                type: integer
                                description: Seller ID
                                example: 11112
                              orderId:
                                type: integer
                                description: Order ID
                                example: 111134
                              uuid:
                                type: string
                                description: Unique string ID
                                example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
                              status:
                                type: string
                                description: |
                                  Order Item status.
                                example: pending
                                enum:
                                  - pending
                                  - shipped
                                  - canceled
                                  - returned
                                  - failed
                                  - delivered
                                  - ready_to_ship
                                  - return_shipped_by_customer
                                  - return_waiting_for_approval
                                  - return_rejected
                                  - return_delivered
                                  - payment_pending
                              isProcessable:
                                type: boolean
                                description: >-
                                  It's true if order item shipment type is not
                                  `consignment` and src_status is not
                                  `awaiting_fulfillment`
                                example: true
                              failureReason:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    description: |
                                      Failure reason type.
                                    nullable: true
                                    example: null
                                    enum:
                                      - canceled
                                      - returned
                                      - failed
                                      - return_rejected
                                      - canceled_system
                                  name:
                                    type: string
                                    description: Reason name
                                    nullable: true
                                    example: null
                                  description:
                                    type: string
                                    description: Reason description
                                    nullable: true
                                    example: null
                                  details:
                                    type: string
                                    description: Reason details
                                    example: ''
                                required:
                                  - type
                                  - name
                                  - description
                                  - details
                              shipment:
                                type: object
                                properties:
                                  type:
                                    type: string
                                    description: Shipment type.
                                    example: crossdocking
                                    enum:
                                      - warehouse
                                      - dropshipping
                                      - crossdocking
                                      - dropshipping_crossdocking
                                      - crossdocking_dropshipping
                                  crossdockingDeliveryType:
                                    type: string
                                    description: Crossdocking delivery type
                                    nullable: true
                                    example: null
                                    enum:
                                      - send_to_warehouse
                                      - pickup
                                  method:
                                    type: string
                                    description: >-
                                      Shipment method received from the Shop. It
                                      is intended to indicate where the order
                                      should be send to. Possible options are
                                      "home", "pickup", "address", "none"
                                    example: home
                                    enum:
                                      - home
                                      - pickup
                                      - address
                                      - none
                                  preProvider:
                                    nullable: true
                                    description: Pre-defined shipment provider
                                    type: object
                                    properties:
                                      uuid:
                                        type: string
                                        nullable: true
                                        example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                                      name:
                                        type: string
                                        description: Shipment provider name
                                        example: DafitiCarrier
                                      default:
                                        type: boolean
                                        description: >-
                                          True if it is the default shipment
                                          provider
                                        example: true
                                      digitalType:
                                        type: string
                                        description: Digital type
                                        nullable: true
                                        example: null
                                      trackingUrl:
                                        type: string
                                        description: Tracking URL
                                        nullable: true
                                        example: https://example.com/tracking/
                                    required:
                                      - uuid
                                      - name
                                      - isDefault
                                      - digitalType
                                      - trackingUrl
                                  provider:
                                    nullable: true
                                    description: Shipment provider
                                    type: object
                                    properties:
                                      uuid:
                                        type: string
                                        nullable: true
                                        example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                                      name:
                                        type: string
                                        description: Shipment provider name
                                        example: DafitiCarrier
                                      default:
                                        type: boolean
                                        description: >-
                                          True if it is the default shipment
                                          provider
                                        example: true
                                      digitalType:
                                        type: string
                                        description: Digital type
                                        nullable: true
                                        example: null
                                      trackingUrl:
                                        type: string
                                        description: Tracking URL
                                        nullable: true
                                        example: https://example.com/tracking/
                                    required:
                                      - uuid
                                      - name
                                      - isDefault
                                      - digitalType
                                      - trackingUrl
                                  providerPreselected:
                                    type: boolean
                                    description: Is shipment provider preselected
                                    example: false
                                  providerProduct:
                                    type: string
                                    example: ''
                                  providerType:
                                    type: string
                                    description: Shipment provider type
                                    nullable: true
                                    example: null
                                    enum:
                                      - express
                                      - standard
                                      - economy
                                      - digital
                                      - air
                                      - surface
                                      - sameday
                                  weight:
                                    type: number
                                    format: float
                                    description: Weight
                                    example: 0.5
                                  trackingCode:
                                    type: string
                                    description: Tracking code
                                    example: '123'
                                  preTrackingCode:
                                    type: string
                                    description: PRE tracking code
                                    nullable: true
                                    example: null
                                required:
                                  - type
                                  - crossdockingDeliveryType
                                  - method
                                  - preProvider
                                  - provider
                                  - providerPreselected
                                  - providerProduct
                                  - providerType
                                  - weight
                                  - trackingCode
                                  - preTrackingCode
                              invoiceNumber:
                                type: string
                                description: Invoice Number
                                nullable: true
                                example: 123re
                              invoiceAccesskey:
                                type: string
                                description: Invoice Access Key
                                nullable: true
                                example: null
                              inTransit:
                                type: boolean
                                description: Order item is in transit
                                example: false
                              premium:
                                type: boolean
                                description: >-
                                  The flag indicates if the order item is
                                  premium or not
                                example: false
                              targetToShipAt:
                                type: string
                                description: >-
                                  Promised shipment date. It works only if
                                  Promised Shipping Date Feature is Enabled. The
                                  dates returned will follow the same format as
                                  in the example
                                nullable: true
                                example: '2022-12-23T05:36:23.123456Z'
                              product:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: Product name.
                                    example: Short de Baño Azul Topper Slim
                                  sku:
                                    type: string
                                    description: Product SKU
                                    example: TO076AT24RKHAR-2474097
                                  variation:
                                    type: string
                                    description: Variation value as received from the Shop
                                    nullable: true
                                    example: '-'
                                  sellerSku:
                                    type: string
                                    description: Seller SKU
                                    example: 164097_L
                                required:
                                  - name
                                  - sku
                                  - variation
                                  - sellerSku
                              unitPrice:
                                type: number
                                format: float
                                description: Order item price
                                example: 2499
                              taxAmount:
                                type: number
                                format: float
                                description: Tax amount for the order item
                                example: 433.71
                              taxPercent:
                                type: number
                                format: float
                                description: Tax percent for the order item
                                example: 21
                              paidPrice:
                                type: number
                                format: float
                                description: Paid price
                                example: 2499
                              paidCommission:
                                type: number
                                format: float
                                description: Paid commission
                                nullable: true
                                example: null
                              shippingFee:
                                type: number
                                format: float
                                description: Shipping fee
                                example: 0
                              shippingServiceCost:
                                type: number
                                format: float
                                description: Shipping service cost
                                nullable: true
                                example: null
                              walletCredits:
                                type: number
                                format: float
                                description: >-
                                  Indicated that the customer used wallet as
                                  payment aside from possible voucher
                                example: 0
                              storeCredits:
                                type: number
                                format: float
                                description: Store credits
                                example: 0
                              shippingVoucherAmount:
                                type: number
                                format: float
                                description: Shipping voucher amount
                                example: 0
                              priceAfterDiscount:
                                type: number
                                format: float
                                description: Price after discount
                                example: 0
                              salesDueAmount:
                                type: number
                                format: float
                                description: Sales due amount
                                example: 245
                              itemSerialNumber:
                                type: string
                                description: Serial number
                                nullable: true
                                example: null
                              abatementRate:
                                type: string
                                description: Abatement rate
                                nullable: true
                                example: null
                              exciseRate:
                                type: string
                                description: Excise rate
                                nullable: true
                                example: null
                              hsnCode:
                                type: string
                                description: HSN code
                                nullable: true
                                example: null
                              codCollectableAmount:
                                type: string
                                description: Cod collectable amount
                                nullable: true
                                example: null
                              purchase:
                                type: object
                                properties:
                                  orderSrcId:
                                    type: integer
                                    description: Order src ID
                                    nullable: true
                                    example: 555
                                  orderNumber:
                                    type: string
                                    description: Order number
                                    nullable: true
                                    example: MPDS-D1405061201
                                  deliveryInfo:
                                    type: string
                                    description: Delivery info
                                    nullable: true
                                    example: null
                                required:
                                  - orderSrcId
                                  - orderNumber
                                  - deliveryInfo
                              createdAt:
                                type: string
                                format: datetime
                                description: Date and time when the order item was created
                                example: '2021-09-22T23:21:42.123456Z'
                              updatedAt:
                                type: string
                                format: datetime
                                nullable: true
                                description: >-
                                  Date and time when the order item was updated.
                                  The dates returned will follow the same format
                                  as in the example
                                example: '2021-09-22T23:21:42.123456Z'
                              lastStatusChangedAt:
                                type: string
                                format: datetime
                                nullable: true
                                description: >
                                  Date when the order item status was updated.

                                  Not every Order Item update changes its
                                  status. This is the difference between this
                                  field and updated_at. The dates returned will
                                  follow the same format as in the example
                                example: '2021-09-22T23:21:42.123456Z'
                              warehouseName:
                                type: string
                                description: Warehouse name
                                nullable: true
                                example: null
                              extraAttributes:
                                type: object
                                description: >-
                                  Extra attributes which were passed to
                                  SellerCenter on getMarketPlaceOrders call.
                                nullable: true
                                properties:
                                  installment_fee:
                                    type: number
                                    format: float
                                    description: Installment fee
                                    example: 20.5
                                  delivery_type:
                                    type: string
                                    description: Delivery type
                                    example: standard
                                  has_transfer_shipping_flat_fee:
                                    type: boolean
                                    description: >-
                                      Indicates, whether the order item has
                                      transfer shipping flat fee
                                    example: false
                                  price_excluded_tax:
                                    type: number
                                    format: float
                                    description: Price excluded tax
                                    example: 24.99
                                  sales_service_tax:
                                    type: number
                                    format: float
                                    description: Sales service tax
                                    example: 433.71
                                  gst_free:
                                    type: string
                                    description: >-
                                      Indicates, whether the order item is GST
                                      free
                                    example: '0'
                                  shipping_fee_sst:
                                    type: number
                                    format: float
                                    description: Shipping fee SST
                                    example: 10.5
                              isHybrid:
                                type: boolean
                                description: >-
                                  Indicates, whether the product is a hybrid
                                  product for the Hybrid Depth / Size Fill
                                  feature.
                                example: false
                              isOutlet:
                                type: boolean
                                description: >-
                                  Indicates, whether the order item has "outlet"
                                  flag.
                                example: false
                              actions:
                                type: array
                                description: Possible next actions for order item
                                example:
                                  - status_set_to_shipped
                                  - status_set_to_cancelled
                                items:
                                  type: string
                                  enum:
                                    - create_manifest
                                    - create_pickup_request
                                    - generate_checklist
                                    - generate_picklist
                                    - generate_invoice
                                    - generate_shipping_label
                                    - generate_shipping_parcel
                                    - generate_export_invoice
                                    - generate_manifest
                                    - generate_carrier_manifest
                                    - generate_credit_note
                                    - set_invoice_number
                                    - set_invoice_access_key
                                    - set_tracking_code
                                    - set_shipment_provider
                                    - status_set_to_delivered
                                    - status_set_to_shipped
                                    - status_set_to_canceled
                                    - status_set_to_packed_by_marketplace
                                    - status_set_to_ready_to_ship
                                    - status_set_to_returned
                                    - status_set_to_rejected
                                    - status_set_to_return_rejected
                                    - status_set_to_failed_delivery
                                    - status_set_to_payment_pending
                                    - status_set_to_return_delivered
                                    - status_set_to_return_waiting_for_approval
                                    - status_set_to_return_shipped_by_customer
                              vouchers:
                                type: array
                                description: Discount list
                                items:
                                  type: object
                                  properties:
                                    code:
                                      type: string
                                      description: Discount code
                                      example: AAA
                                    amount:
                                      type: number
                                      format: float
                                      description: Discount amount
                                      example: 14.5
                                    cashbackPercentage:
                                      type: integer
                                      description: >-
                                        Promotion defined percentage value for
                                        cashback
                                      example: 0
                                    voucherSellerShare:
                                      type: number
                                      format: float
                                      description: >-
                                        Promotion defined percentage value for
                                        the voucher, which is covered/funded by
                                        the seller
                                      example: 0
                                    cashbackSellerShare:
                                      type: number
                                      format: float
                                      description: >-
                                        Promotion defined percentage value for
                                        the cashback, which is covered/funded by
                                        the seller
                                      example: 0
                                    amountFundedBySeller:
                                      type: number
                                      format: float
                                      description: >-
                                        Actual calculated amount based on the
                                        voucher seller share percentage and the
                                        discount amount
                                      example: 0
                                    cashbackAmountFundedBySeller:
                                      type: string
                                      description: >-
                                        Actual calculated amount based on the
                                        cashback seller share percentage and the
                                        discount amount
                                      example: 0
                                  required:
                                    - code
                                    - amount
                                    - cashbackPercentage
                                    - voucherSellerShare
                                    - cashbackSellerShare
                                    - amountFundedBySeller
                                    - cashbackAmountFundedBySeller
                              manifestStatus:
                                example: forward_ready_to_ship
                                type: string
                                description: Manifest status
                                nullable: true
                                enum:
                                  - forward_ready_to_ship
                                  - forward_received
                                  - forward_shipped
                                  - return_ready_to_ship
                                  - return_received
                                  - return_shipped
                              isPickupRequestSent:
                                type: boolean
                                example: false
                                description: >-
                                  The flag shows if Pickup Request has been sent
                                  for the item
                              discountAmount:
                                type: number
                                format: float
                                description: Discount value
                                example: 0
                            required:
                              - id
                              - srcId
                              - sellerId
                              - orderId
                              - uuid
                              - status
                              - isProcessable
                              - failureReason
                              - shipment
                              - invoiceNumber
                              - invoiceAccesskey
                              - inTransit
                              - premium
                              - targetToShipAt
                              - product
                              - unitPrice
                              - taxAmount
                              - taxPercent
                              - paidPrice
                              - paidCommission
                              - shippingFee
                              - shippingServiceCost
                              - walletCredits
                              - storeCredits
                              - shippingVoucherAmount
                              - priceAfterDiscount
                              - salesDueAmount
                              - itemSerialNumber
                              - abatementRate
                              - exciseRate
                              - hsnCode
                              - codCollectableAmount
                              - purchase
                              - createdAt
                              - updatedAt
                              - lastStatusChangedAt
                              - warehouseName
                              - extraAttributes
                              - isHybrid
                              - isOutlet
                              - actions
                              - vouchers
                      required:
                        - uuid
                        - invoiceRequired
                        - id
                        - sellerId
                        - number
                        - customer
                        - address
                        - nationalRegistrationNumber
                        - payoutPending
                        - gift
                        - voucher
                        - deliveryInfo
                        - paymentMethod
                        - currency
                        - remarks
                        - createdAt
                        - updatedAt
                        - addressUpdatedAt
                        - exchangeByOrderId
                        - extraAttributes
                        - statusList
                        - source
                        - itemCount
                        - unitPriceSumWithFees
                        - targetToShip
                        - shipmentProviderPreSelected
                        - packedItemsCount
                        - orderItemIds
                        - items
                        - shippingFeeSstSum
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      hasNext:
                        type: boolean
                        description: |
                          True if next page will have at least one result
                        example: false
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/export:
    get:
      tags:
        - Orders
      description: Export orders with filters
      security:
        - oAuth: []
      parameters:
        - name: X-Context
          in: header
          required: false
          schema:
            type: string
            enum:
              - admin
              - seller
            example: seller
        - in: query
          required: false
          name: section
          description: >
            Search section

            - status_shipped - returns orders with order items status `shipped`

            - status_delivered - returns orders with order items status
            `delivered`

            - status_failed - returns orders with order items status `failed`

            - status_canceled - returns orders with order items status
            `canceled`

            - status_pending - returns orders with order items status `pending`

            - status_ready_to_ship - returns orders with order items status
            `ready_to_ship`

            - status_payment_pending - returns orders with order items status
            `payment_pending`

            - status_returned - returns orders with order items status
            `returned`

            - status_return_shipped_by_customer - returns orders with order
            items status `return_shipped_by_customer`

            - status_return_rejected - returns orders with order items status
            `return_rejected`

            - status_return_waiting_for_approval - returns orders with order
            items status `return_waiting_for_approval`

            - status_return_delivered - returns orders with order items status
            `return_delivered`

            - group_economy - returns orders with `pending` status and `economy`
            shipment provider type

            - group_express - returns orders with `pending` status and `express`
            shipment provider type

            - group_standard - returns orders with `pending` status and
            `standard` shipment provider type

            - group_digital - returns orders with `pending` status and `digital`
            shipment provider type

            - group_sameday - returns orders with `pending` status and `sameday`
            shipment provider type

            - group_air - returns orders with `pending` status and `air`
            shipment provider type

            - group_surface - returns orders with `pending` status and `surface`
            shipment provider type

            - group_missing_external_invoice_access_key - returns orders with
            `pending` or `canceled` status and invoice key is `empty`

            - group_ready_to_ship_manifested - returns orders with `ready to
            ship` status and manifest is `exists`

            - group_ready_to_ship_nonmanifested - returns orders with `ready to
            ship` status and manifest is `not exists`
          schema:
            type: string
            enum:
              - status_shipped
              - status_delivered
              - status_failed
              - status_canceled
              - status_pending
              - status_ready_to_ship
              - status_payment_pending
              - status_returned
              - status_return_shipped_by_customer
              - status_return_rejected
              - status_return_waiting_for_approval
              - status_return_delivered
              - group_economy
              - group_express
              - group_standard
              - group_digital
              - group_sameday
              - group_air
              - group_surface
              - group_missing_external_invoice_access_key
              - group_kpi_rejection_rate
              - group_kpi_return_rate
              - group_ready_to_ship_manifested
              - group_ready_to_ship_nonmanifested
        - in: query
          required: false
          name: dateStart
          description: >-
            Search by order creation or date time. Time information is optional.
            By default start time will be at 00:00:00.
          schema:
            type: string
            anyOf:
              - format: date
              - format: date-time
            example: '2022-12-11T08:46:12.123456Z'
        - in: query
          required: false
          name: dateEnd
          description: >-
            Search by order creation date or date time. Time information is
            optional. By default end time will be at 23:59:59.
          schema:
            type: string
            anyOf:
              - format: date
              - format: date-time
            example: '2022-12-11T21:46:12.123456Z'
        - in: query
          required: false
          name: orderNumbers[]
          description: Search by order number
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: packed
          description: |
            Search by packed status
            - fully_packed - all of order items packed
            - partially_packed - part of order items packed
            - not_packed - no order items packed
          schema:
            type: string
            enum:
              - fully_packed
              - partially_packed
              - not_packed
        - in: query
          required: false
          name: customers[]
          description: Search by customer name (first name and last name)
          example:
            - John
            - Malkovic
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: printedStatus
          description: Search by printed status
          schema:
            type: boolean
        - in: query
          required: false
          name: tags[]
          description: Search by tag's numeric id.
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: productSku[]
          description: Search by product sku
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: delivery
          description: >
            Search by delivery:

            - shippedUnder24h - Orders with the status of the Order Item was set
            to shipped less or equal than 24 hours ago.

            - notShippedUnder24h - Orders with the status of the Order Item was
            set to shipped more than 24 hours ago.

            - notShippedUnder24BusinessHours - Orders with the status of the
            Order Item was set to shipped more than 24 business hours ago.
          schema:
            type: string
            enum:
              - shippedUnder24h
              - notShippedUnder24h
              - notShippedUnder24BusinessHours
        - in: query
          required: false
          name: shipmentType
          description: |
            Search by shipment type
          schema:
            type: string
            enum:
              - warehouse
              - dropshipping
              - crossdocking
        - in: query
          required: false
          name: shipmentProviders[]
          description: Search by shipment provider id
          example:
            - 8532
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: paymentMethods[]
          description: Search by payment methods
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: outlet
          description: Search orders from outlet only
          schema:
            type: boolean
        - in: query
          required: false
          name: invoiceRequired
          description: >-
            If this field is set to "1" then only orders for which an invoice is
            required will be returned
          schema:
            type: boolean
        - in: query
          required: false
          name: cancelationReasons[]
          description: Search by cancelation reasons
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: fulfilmentType[]
          description: |
            Search by fulfilment type
            - merchant - means the type of shipment from the seller's warehouse
            - venture - means the type of shipment from the venture's warehouse
          schema:
            type: array
            items:
              type: string
              enum:
                - merchant
                - venture
        - in: query
          required: false
          name: orderSources[]
          description: Search by order sources
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: sellerNames[]
          description: Search by seller name
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: updateDateStart
          description: >-
            Search by order item updated date or date time. Will return orders
            with at least one order item updated within the selected range. By
            default, the start time will be set to 00:00:00.
          schema:
            type: string
            anyOf:
              - format: date
              - format: date-time
            example: '2022-12-11T21:46:12.123456Z'
        - in: query
          required: false
          name: updateDateEnd
          description: >-
            Search by order item updated date or date time. Will return orders
            with at least one order item updated within the selected range. By
            default, the end time will be set to 23:59:59.
          schema:
            type: string
            anyOf:
              - format: date
              - format: date-time
            example: '2022-12-11T21:46:12.123456Z'
        - in: query
          required: false
          name: warehouses[]
          description: Search by warehouse name
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: format
          description: Requested format
          schema:
            type: string
            default: csv
            enum:
              - csv
              - xlsx
        - required: false
          description: Array of numeric Order Ids
          in: query
          name: orderIds[]
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    example: 524
                    type: integer
                    description: >
                      ID of user who triggered export. When you request exports
                      you can see also exports

                      which were created by another users from the same Seller
                  sellerId:
                    example: 4089
                    type: integer
                  status:
                    type: string
                    enum:
                      - Finished
                      - Processing
                      - Error
                      - Queued
                      - Expired
                  isDeleted:
                    type: boolean
                    description: >
                      Export files has limited time of storage and after it they
                      are deleted. This

                      flag indicates that physical was already deleted and if
                      you need to download

                      this export then you will need to generate it again.
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  expiresAt:
                    type: string
                    format: date-time
                    description: datetime when this export file scheduled for deletion
                  requestedFormats:
                    type: array
                    description: formats which were requested for export
                    items:
                      type: string
                      enum:
                        - csv
                        - xlsx
                  downloadLinks:
                    type: array
                    items:
                      type: string
                    description: >
                      list of relative links to download export files. For some
                      types of

                      export files are generated in several formats, therefore
                      you may

                      have several links to download files.
                  exportContent:
                    example: Products - Shoes
                    type: string
                    description: >
                      short description of export file to distinguish between
                      different export items
                  uuid:
                    example: a8fd052d-f29a-471a-b92b-52bb0d2c0be4
                    type: string
                    description: >
                      Unique identifier of file. You can use it to download
                      file.
                  note:
                    type: string
                    description: >
                      Note on export item. It can be used to store some
                      additional information eg. failure reason
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/returns/export:
    post:
      summary: Triggers export of return orders
      security:
        - oAuth: []
      description: >
        Export files are generated in background. This means that for your
        request to trigger export API will return you data about scheduled job.
        Depending on size of export, generation can take from milliseconds till
        some minutes.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: >
                    Accept [open | return_shipped_by_customer | return_delivered
                    | return_waiting_for_approval | return_rejected | returned |
                    seller | regions].

                    Open status filters items with status
                    return_shipped_by_customer or return_delivered.

                    If not provided, or either orderItemIds or orderNumbers are
                    provided, all statuses will be included.
                  enum:
                    - open
                    - return_shipped_by_customer
                    - return_delivered
                    - return_waiting_for_approval
                    - return_rejected
                    - returned
                    - seller
                    - regions
                  example: open
                orderItemIds:
                  type: array
                  description: |
                    List of order item ids.
                  items:
                    type: integer
                    format: int64
                  example: '[1, 2, 3, 4]'
                srcIds:
                  type: array
                  description: |
                    List of srcIds.
                  items:
                    type: string
                  example: '["PH-1234567890", "PH-0987654321"]'
                orderNumbers:
                  type: array
                  description: |
                    List of order numbers.
                  items:
                    type: string
                  example: '["1234567890HK", "0987654321HK"]'
                format:
                  type: string
                  description: Accept [csv | xlsx]
                  enum:
                    - csv
                    - xlsx
                  example: csv
                dateStart:
                  type: string
                  format: date-time
                  description: Start date of the range, must less than dateEnd
                  example: '2024-01-01'
                dateEnd:
                  type: string
                  format: date-time
                  description: End date of the range, must greater than dateStart
                  example: '2024-02-01'
              required:
                - format
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Orders
  /v2/orders/{orderId}:
    get:
      tags:
        - Orders
      description: Getter for a specific order by id
      security:
        - oAuth: []
      operationId: GET_v2-orders-order
      parameters:
        - required: true
          description: Numeric Order Id
          in: path
          name: orderId
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: Unique order identifier
                    example: 9d6ca7ce-4b71-46bf-aa5e-a0727eca880z
                  invoiceRequired:
                    type: boolean
                    description: This flag means that invoice is required for the Order
                    example: false
                  id:
                    type: integer
                    description: Unique numeric order identifier
                    example: 1111
                  regionId:
                    type: string
                    description: Regions order identifier
                    example: 2222-2
                  sellerId:
                    type: integer
                    description: Seller identifier
                    example: 222
                  number:
                    type: string
                    description: Order number given by the seller
                    example: MY-111143
                  customer:
                    type: object
                    description: Customer name
                    properties:
                      firstName:
                        type: string
                        description: First name
                        example: John
                        nullable: true
                      lastName:
                        type: string
                        description: Last name
                        example: Doe
                        nullable: true
                  address:
                    type: object
                    description: Order address
                    properties:
                      billing:
                        type: object
                        nullable: true
                        description: >-
                          Info about customer address with restricted access to
                          certain fields
                        properties:
                          firstName:
                            type: string
                            description: Customer first name
                            example: John
                            nullable: true
                          lastName:
                            type: string
                            description: Customer last name
                            example: Doe
                            nullable: true
                          phone:
                            type: array
                            items:
                              type: string
                            example:
                              - '#####'
                          address:
                            type: array
                            items:
                              type: string
                            description: 5 rows to show the address
                            example:
                              - Johannisstr. 20
                              - ''
                              - ''
                              - ''
                              - ''
                          email:
                            type: string
                            description: Customer email
                            example: '#####'
                          city:
                            type: string
                            description: Customer city
                            example: Berlin
                          ward:
                            type: string
                            example: ''
                          region:
                            type: string
                            description: Customer region
                            example: ''
                          postCode:
                            type: string
                            description: Customer post code
                            example: '10117'
                          country:
                            type: string
                            description: Customer country
                            example: Germany
                      shipping:
                        type: object
                        nullable: true
                        description: >-
                          Info about customer address with restricted access to
                          certain fields
                        properties:
                          firstName:
                            type: string
                            description: Customer first name
                            example: John
                            nullable: true
                          lastName:
                            type: string
                            description: Customer last name
                            example: Doe
                            nullable: true
                          phone:
                            type: array
                            items:
                              type: string
                            example:
                              - '#####'
                          address:
                            type: array
                            items:
                              type: string
                            description: 5 rows to show the address
                            example:
                              - Johannisstr. 20
                              - ''
                              - ''
                              - ''
                              - ''
                          email:
                            type: string
                            description: Customer email
                            example: '#####'
                          city:
                            type: string
                            description: Customer city
                            example: Berlin
                          ward:
                            type: string
                            example: ''
                          region:
                            type: string
                            description: Customer region
                            example: ''
                          postCode:
                            type: string
                            description: Customer post code
                            example: '10117'
                          country:
                            type: string
                            description: Customer country
                            example: Germany
                    required:
                      - billing
                      - shipping
                  nationalRegistrationNumber:
                    type: string
                    nullable: true
                    description: It is the registration number of the customer
                    example: '11114389'
                  payoutPending:
                    type: boolean
                    description: >-
                      Flag that specifies whether the order will generate
                      transactions or put them on hold until other requirements
                      are met
                    example: false
                  gift:
                    type: object
                    properties:
                      option:
                        type: boolean
                        description: Gift option
                        example: false
                      message:
                        description: Gift message
                        example: msg
                    required:
                      - option
                      - message
                  voucher:
                    type: object
                    properties:
                      code:
                        type: string
                        description: Voucher code
                        example: code
                      type:
                        type: string
                        description: Voucher type
                        example: type
                    required:
                      - code
                      - type
                  deliveryInfo:
                    type: string
                    description: Additional info about delivery
                    example: 1 D
                  paymentMethod:
                    type: string
                    description: Order payment method
                    example: NpsPayment
                  currency:
                    type: string
                    description: Currency
                    example: ARS
                  remarks:
                    type: string
                    description: Additional info about order
                    example: ''
                  createdAt:
                    type: string
                    format: datetime
                    description: Date and time when the order was created
                    example: '2021-09-22T23:21:42.123456Z'
                  updatedAt:
                    type: string
                    format: datetime
                    description: >-
                      Date and time when the order was updated. The dates
                      returned will follow the same format as in the example
                    example: '2021-09-22T23:21:42.123456Z'
                  addressUpdatedAt:
                    type: string
                    format: datetime
                    description: >-
                      Date and time when address was updated last time. The
                      dates returned will follow the same format as in the
                      example
                    example: '2021-09-22T23:21:42.123456Z'
                  exchangeByOrderId:
                    type: string
                    description: >-
                      It indicates that current order is exchange order for
                      other order. This field contains a new order ID
                    nullable: true
                    example: null
                  exchangeForOrderId:
                    type: string
                    description: >-
                      It indicates that current order is exchange order for
                      other order. This field contains an old order ID
                    nullable: true
                    example: null
                  extraAttributes:
                    type: string
                    description: Additional attributes set by the seller.
                    example: null
                  statusList:
                    type: object
                    description: >-
                      Status list from order items as keys with count of items
                      with particular status as a value
                    example:
                      pending: 2
                      canceled: 1
                  source:
                    type: string
                    description: Order source
                    nullable: true
                    example: Zalora MY
                  itemCount:
                    type: integer
                    description: Amount of items in order
                    example: 1
                  unitPriceSumWithFees:
                    type: number
                    format: float
                    description: Sum of unit prices from items with fees
                    example: 10200.5
                  shippingFeeSstSum:
                    type: number
                    format: float
                    description: Sum of shipping fee SST tax
                    example: 10.5
                  grandTotal:
                    type: number
                    format: float
                    description: Sum of paid prices from items with fees
                    example: 100.5
                  targetToShip:
                    type: string
                    description: >-
                      Promised shipment date. It works only if Promised Shipping
                      Date Feature is Enabled. The dates returned will follow
                      the same format as in the example
                    nullable: true
                    example: '2022-12-23T05:36:23.123456Z'
                  shipmentProviderType:
                    type: string
                    description: Calculated shipment provider type across all order items
                    nullable: true
                    enum:
                      - express
                      - standard
                      - economy
                      - digital
                      - air
                      - surface
                      - mixed
                      - sameday
                    example: standard
                  shipmentProviderPreSelected:
                    type: boolean
                    description: Information if the shipment provider has been pre-selected
                    example: true
                  packedItemsCount:
                    type: integer
                    description: Amount of packed order items
                    example: 3
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    description: Ids of the order items in the order
                    example:
                      - 1111
                  items:
                    type: array
                    description: Order items
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Unique numeric identifier
                          example: 1111
                        srcId:
                          type: string
                          description: Order item src ID
                          example: MY-32022990
                        sellerId:
                          type: integer
                          description: Seller ID
                          example: 11112
                        orderId:
                          type: integer
                          description: Order ID
                          example: 111134
                        uuid:
                          type: string
                          description: Unique string ID
                          example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
                        status:
                          type: string
                          description: |
                            Order Item status.
                          example: pending
                          enum:
                            - pending
                            - shipped
                            - canceled
                            - returned
                            - failed
                            - delivered
                            - ready_to_ship
                            - return_shipped_by_customer
                            - return_waiting_for_approval
                            - return_rejected
                            - return_delivered
                            - payment_pending
                        isProcessable:
                          type: boolean
                          description: >-
                            It's true if order item shipment type is not
                            `consignment` and src_status is not
                            `awaiting_fulfillment`
                          example: true
                        failureReason:
                          type: object
                          properties:
                            type:
                              type: string
                              description: |
                                Failure reason type.
                              nullable: true
                              example: null
                              enum:
                                - canceled
                                - returned
                                - failed
                                - return_rejected
                                - canceled_system
                            name:
                              type: string
                              description: Reason name
                              nullable: true
                              example: null
                            description:
                              type: string
                              description: Reason description
                              nullable: true
                              example: null
                            details:
                              type: string
                              description: Reason details
                              example: ''
                          required:
                            - type
                            - name
                            - description
                            - details
                        shipment:
                          type: object
                          properties:
                            type:
                              type: string
                              description: Shipment type.
                              example: crossdocking
                              enum:
                                - warehouse
                                - dropshipping
                                - crossdocking
                                - dropshipping_crossdocking
                                - crossdocking_dropshipping
                            crossdockingDeliveryType:
                              type: string
                              description: Crossdocking delivery type
                              nullable: true
                              example: null
                              enum:
                                - send_to_warehouse
                                - pickup
                            method:
                              type: string
                              description: >-
                                Shipment method received from the Shop. It is
                                intended to indicate where the order should be
                                send to. Possible options are "home", "pickup",
                                "address", "none"
                              example: home
                              enum:
                                - home
                                - pickup
                                - address
                                - none
                            preProvider:
                              nullable: true
                              description: Pre-defined shipment provider
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  nullable: true
                                  example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                                name:
                                  type: string
                                  description: Shipment provider name
                                  example: DafitiCarrier
                                default:
                                  type: boolean
                                  description: True if it is the default shipment provider
                                  example: true
                                digitalType:
                                  type: string
                                  description: Digital type
                                  nullable: true
                                  example: null
                                trackingUrl:
                                  type: string
                                  description: Tracking URL
                                  nullable: true
                                  example: https://example.com/tracking/
                              required:
                                - uuid
                                - name
                                - isDefault
                                - digitalType
                                - trackingUrl
                            provider:
                              nullable: true
                              description: Shipment provider
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  nullable: true
                                  example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                                name:
                                  type: string
                                  description: Shipment provider name
                                  example: DafitiCarrier
                                default:
                                  type: boolean
                                  description: True if it is the default shipment provider
                                  example: true
                                digitalType:
                                  type: string
                                  description: Digital type
                                  nullable: true
                                  example: null
                                trackingUrl:
                                  type: string
                                  description: Tracking URL
                                  nullable: true
                                  example: https://example.com/tracking/
                              required:
                                - uuid
                                - name
                                - isDefault
                                - digitalType
                                - trackingUrl
                            providerPreselected:
                              type: boolean
                              description: Is shipment provider preselected
                              example: false
                            providerProduct:
                              type: string
                              example: ''
                            providerType:
                              type: string
                              description: Shipment provider type
                              nullable: true
                              example: null
                              enum:
                                - express
                                - standard
                                - economy
                                - digital
                                - air
                                - surface
                                - sameday
                            weight:
                              type: number
                              format: float
                              description: Weight
                              example: 0.5
                            trackingCode:
                              type: string
                              description: Tracking code
                              example: '123'
                            preTrackingCode:
                              type: string
                              description: PRE tracking code
                              nullable: true
                              example: null
                          required:
                            - type
                            - crossdockingDeliveryType
                            - method
                            - preProvider
                            - provider
                            - providerPreselected
                            - providerProduct
                            - providerType
                            - weight
                            - trackingCode
                            - preTrackingCode
                        invoiceNumber:
                          type: string
                          description: Invoice Number
                          nullable: true
                          example: 123re
                        invoiceAccesskey:
                          type: string
                          description: Invoice Access Key
                          nullable: true
                          example: null
                        inTransit:
                          type: boolean
                          description: Order item is in transit
                          example: false
                        premium:
                          type: boolean
                          description: >-
                            The flag indicates if the order item is premium or
                            not
                          example: false
                        targetToShipAt:
                          type: string
                          description: >-
                            Promised shipment date. It works only if Promised
                            Shipping Date Feature is Enabled. The dates returned
                            will follow the same format as in the example
                          nullable: true
                          example: '2022-12-23T05:36:23.123456Z'
                        product:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Product name.
                              example: Short de Baño Azul Topper Slim
                            sku:
                              type: string
                              description: Product SKU
                              example: TO076AT24RKHAR-2474097
                            variation:
                              type: string
                              description: Variation value as received from the Shop
                              nullable: true
                              example: '-'
                            sellerSku:
                              type: string
                              description: Seller SKU
                              example: 164097_L
                          required:
                            - name
                            - sku
                            - variation
                            - sellerSku
                        unitPrice:
                          type: number
                          format: float
                          description: Order item price
                          example: 2499
                        taxAmount:
                          type: number
                          format: float
                          description: Tax amount for the order item
                          example: 433.71
                        taxPercent:
                          type: number
                          format: float
                          description: Tax percent for the order item
                          example: 21
                        paidPrice:
                          type: number
                          format: float
                          description: Paid price
                          example: 2499
                        paidCommission:
                          type: number
                          format: float
                          description: Paid commission
                          nullable: true
                          example: null
                        shippingFee:
                          type: number
                          format: float
                          description: Shipping fee
                          example: 0
                        shippingServiceCost:
                          type: number
                          format: float
                          description: Shipping service cost
                          nullable: true
                          example: null
                        walletCredits:
                          type: number
                          format: float
                          description: >-
                            Indicated that the customer used wallet as payment
                            aside from possible voucher
                          example: 0
                        storeCredits:
                          type: number
                          format: float
                          description: Store credits
                          example: 0
                        shippingVoucherAmount:
                          type: number
                          format: float
                          description: Shipping voucher amount
                          example: 0
                        priceAfterDiscount:
                          type: number
                          format: float
                          description: Price after discount
                          example: 0
                        salesDueAmount:
                          type: number
                          format: float
                          description: Sales due amount
                          example: 245
                        itemSerialNumber:
                          type: string
                          description: Serial number
                          nullable: true
                          example: null
                        abatementRate:
                          type: string
                          description: Abatement rate
                          nullable: true
                          example: null
                        exciseRate:
                          type: string
                          description: Excise rate
                          nullable: true
                          example: null
                        hsnCode:
                          type: string
                          description: HSN code
                          nullable: true
                          example: null
                        codCollectableAmount:
                          type: string
                          description: Cod collectable amount
                          nullable: true
                          example: null
                        purchase:
                          type: object
                          properties:
                            orderSrcId:
                              type: integer
                              description: Order src ID
                              nullable: true
                              example: 555
                            orderNumber:
                              type: string
                              description: Order number
                              nullable: true
                              example: MPDS-D1405061201
                            deliveryInfo:
                              type: string
                              description: Delivery info
                              nullable: true
                              example: null
                          required:
                            - orderSrcId
                            - orderNumber
                            - deliveryInfo
                        createdAt:
                          type: string
                          format: datetime
                          description: Date and time when the order item was created
                          example: '2021-09-22T23:21:42.123456Z'
                        updatedAt:
                          type: string
                          format: datetime
                          nullable: true
                          description: >-
                            Date and time when the order item was updated. The
                            dates returned will follow the same format as in the
                            example
                          example: '2021-09-22T23:21:42.123456Z'
                        lastStatusChangedAt:
                          type: string
                          format: datetime
                          nullable: true
                          description: >
                            Date when the order item status was updated.

                            Not every Order Item update changes its status. This
                            is the difference between this field and updated_at.
                            The dates returned will follow the same format as in
                            the example
                          example: '2021-09-22T23:21:42.123456Z'
                        warehouseName:
                          type: string
                          description: Warehouse name
                          nullable: true
                          example: null
                        extraAttributes:
                          type: object
                          description: >-
                            Extra attributes which were passed to SellerCenter
                            on getMarketPlaceOrders call.
                          nullable: true
                          properties:
                            installment_fee:
                              type: number
                              format: float
                              description: Installment fee
                              example: 20.5
                            delivery_type:
                              type: string
                              description: Delivery type
                              example: standard
                            has_transfer_shipping_flat_fee:
                              type: boolean
                              description: >-
                                Indicates, whether the order item has transfer
                                shipping flat fee
                              example: false
                            price_excluded_tax:
                              type: number
                              format: float
                              description: Price excluded tax
                              example: 24.99
                            sales_service_tax:
                              type: number
                              format: float
                              description: Sales service tax
                              example: 433.71
                            gst_free:
                              type: string
                              description: Indicates, whether the order item is GST free
                              example: '0'
                            shipping_fee_sst:
                              type: number
                              format: float
                              description: Shipping fee SST
                              example: 10.5
                        isHybrid:
                          type: boolean
                          description: >-
                            Indicates, whether the product is a hybrid product
                            for the Hybrid Depth / Size Fill feature.
                          example: false
                        isOutlet:
                          type: boolean
                          description: Indicates, whether the order item has "outlet" flag.
                          example: false
                        actions:
                          type: array
                          description: Possible next actions for order item
                          example:
                            - status_set_to_shipped
                            - status_set_to_cancelled
                          items:
                            type: string
                            enum:
                              - create_manifest
                              - create_pickup_request
                              - generate_checklist
                              - generate_picklist
                              - generate_invoice
                              - generate_shipping_label
                              - generate_shipping_parcel
                              - generate_export_invoice
                              - generate_manifest
                              - generate_carrier_manifest
                              - generate_credit_note
                              - set_invoice_number
                              - set_invoice_access_key
                              - set_tracking_code
                              - set_shipment_provider
                              - status_set_to_delivered
                              - status_set_to_shipped
                              - status_set_to_canceled
                              - status_set_to_packed_by_marketplace
                              - status_set_to_ready_to_ship
                              - status_set_to_returned
                              - status_set_to_rejected
                              - status_set_to_return_rejected
                              - status_set_to_failed_delivery
                              - status_set_to_payment_pending
                              - status_set_to_return_delivered
                              - status_set_to_return_waiting_for_approval
                              - status_set_to_return_shipped_by_customer
                        vouchers:
                          type: array
                          description: Discount list
                          items:
                            type: object
                            properties:
                              code:
                                type: string
                                description: Discount code
                                example: AAA
                              amount:
                                type: number
                                format: float
                                description: Discount amount
                                example: 14.5
                              cashbackPercentage:
                                type: integer
                                description: >-
                                  Promotion defined percentage value for
                                  cashback
                                example: 0
                              voucherSellerShare:
                                type: number
                                format: float
                                description: >-
                                  Promotion defined percentage value for the
                                  voucher, which is covered/funded by the seller
                                example: 0
                              cashbackSellerShare:
                                type: number
                                format: float
                                description: >-
                                  Promotion defined percentage value for the
                                  cashback, which is covered/funded by the
                                  seller
                                example: 0
                              amountFundedBySeller:
                                type: number
                                format: float
                                description: >-
                                  Actual calculated amount based on the voucher
                                  seller share percentage and the discount
                                  amount
                                example: 0
                              cashbackAmountFundedBySeller:
                                type: string
                                description: >-
                                  Actual calculated amount based on the cashback
                                  seller share percentage and the discount
                                  amount
                                example: 0
                            required:
                              - code
                              - amount
                              - cashbackPercentage
                              - voucherSellerShare
                              - cashbackSellerShare
                              - amountFundedBySeller
                              - cashbackAmountFundedBySeller
                        manifestStatus:
                          example: forward_ready_to_ship
                          type: string
                          description: Manifest status
                          nullable: true
                          enum:
                            - forward_ready_to_ship
                            - forward_received
                            - forward_shipped
                            - return_ready_to_ship
                            - return_received
                            - return_shipped
                        isPickupRequestSent:
                          type: boolean
                          example: false
                          description: >-
                            The flag shows if Pickup Request has been sent for
                            the item
                        discountAmount:
                          type: number
                          format: float
                          description: Discount value
                          example: 0
                      required:
                        - id
                        - srcId
                        - sellerId
                        - orderId
                        - uuid
                        - status
                        - isProcessable
                        - failureReason
                        - shipment
                        - invoiceNumber
                        - invoiceAccesskey
                        - inTransit
                        - premium
                        - targetToShipAt
                        - product
                        - unitPrice
                        - taxAmount
                        - taxPercent
                        - paidPrice
                        - paidCommission
                        - shippingFee
                        - shippingServiceCost
                        - walletCredits
                        - storeCredits
                        - shippingVoucherAmount
                        - priceAfterDiscount
                        - salesDueAmount
                        - itemSerialNumber
                        - abatementRate
                        - exciseRate
                        - hsnCode
                        - codCollectableAmount
                        - purchase
                        - createdAt
                        - updatedAt
                        - lastStatusChangedAt
                        - warehouseName
                        - extraAttributes
                        - isHybrid
                        - isOutlet
                        - actions
                        - vouchers
                required:
                  - uuid
                  - invoiceRequired
                  - id
                  - sellerId
                  - number
                  - customer
                  - address
                  - nationalRegistrationNumber
                  - payoutPending
                  - gift
                  - voucher
                  - deliveryInfo
                  - paymentMethod
                  - currency
                  - remarks
                  - createdAt
                  - updatedAt
                  - addressUpdatedAt
                  - exchangeByOrderId
                  - extraAttributes
                  - statusList
                  - source
                  - itemCount
                  - unitPriceSumWithFees
                  - targetToShip
                  - shipmentProviderPreSelected
                  - packedItemsCount
                  - orderItemIds
                  - items
                  - shippingFeeSstSum
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-delivered:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to delivered.  Items (and orders) must be in
        "shipped" or "delivered" status. For "digital" items this transition is
        also allowed from status "pending". Change is only applicable to
        dropshipping. If manifest feature is enabled for your seller and is not
        applicable for given shipment type, then this status change is not
        possible.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItemIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 123456
                    - 654321
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-shipped:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to shipped. All order items must belong to
        same order. Items (and orders) must be in "ready to ship" status.  When
        "blocked order states" feature is enabled, status transition to this may
        be blocked for some shipment providers. In this case error "E028: It is
        not possible to set the order to the status ..." will happen. If any of
        order items has shipment type CrossDocking, then this status transition
        is not possible. If manifest feature is enabled for your seller and is
        not applicable for given shipment type, then this status change is not
        possible.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItemIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 123456
                    - 654321
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-return-received:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to return received. Items (and orders) must be
        in "Return Shipped By Customer" status. If manifest feature is enabled
        for your seller and is not applicable for given shipment type, then this
        status change is not possible.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItemIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 123456
                    - 654321
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        orderItemId:
                          type: integer
                          description: |
                            Id of the order item
                          example: 1
                        detail:
                          type: string
                          description: >
                            A human readable explanation specific to this
                            occurrence of the problem that is helpful to locate
                            the problem and give advice on how to proceed.
                            Written in English and readable for engineers,
                            usually not suited for non technical stakeholders
                            and not localized.
                          example: Order item contains not allowed shipment type
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-return-approved:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to return approved. Items (and orders) must be
        in "Return Waiting For Approval" status. Returns From Warehouse setting
        is disabled for your seller then this status change is not possible.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItemIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 123456
                    - 654321
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        orderItemId:
                          type: integer
                          description: |
                            Id of the order item
                          example: 1
                        detail:
                          type: string
                          description: >
                            A human readable explanation specific to this
                            occurrence of the problem that is helpful to locate
                            the problem and give advice on how to proceed.
                            Written in English and readable for engineers,
                            usually not suited for non technical stakeholders
                            and not localized.
                          example: Order item contains not allowed shipment type
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-cancelled:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to cancelled. Only orders items on statuses
        pending or ready to ship can be cancelled Digital items cancellation is
        possible only for pending.  Cancellation reason should be valid,
        otherwise there will be validation error. Cancelling one item can lead
        to cancel whole package.
      security:
        - oAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - orderItemIds
                  properties:
                    orderItemIds:
                      type: array
                      items:
                        type: integer
                      example:
                        - 123456
                        - 654321
                - type: object
                  required:
                    - reason
                  properties:
                    reason:
                      type: string
                      description: >-
                        Failure reason. The list of reasons you can find
                        /v2/orders-failure-reasons.
                      example: Not reachable
                    reasonDetail:
                      type: string
                      description: Additional information
                      example: Details
                      nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-ready-to-ship:
    post:
      tags:
        - Orders
      description: >
        Order items must be from the same order. All order items must have
        status pending. Serial Numbers apply only if feature is enabled. It must
        fit the format *'/^[a-zA-Z0-9]{1,26}$/'*. In some categories the serial
        number is required. You can't set tracking number to multiple packages.
        If you have not set a tracking number, then delivery type should be
        'pick up'. Tracking number must be unique. Provider must be from the
        list set by the seller.
      security:
        - oAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - orderItems
                - trackingNumber
              properties:
                orderItems:
                  type: array
                  items:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: integer
                        example: 1
                      serialNumber:
                        type: string
                        example: de312312351234
                trackingNumber:
                  type: string
                  example: de312312351234
                  description: >-
                    For shipment providers which have api integration 
                    (apiIntegrationAvailable = true of geShipmentProvider API
                    call) the tracking number is optional otherwise tracking
                    number is mandatory.
                deliveryType:
                  type: string
                  enum:
                    - dropship
                    - pickup
                    - send_to_warehouse
                  description: >-
                    One of the following: 'dropship' - The seller will send out
                    the package on his own; 'pickup' -  Shop should pick up the
                    item from the seller (cross-docking); 'send_to_warehouse' - 
                    The seller will send the item to the warehouse
                    (crossdocking).
                  example: dropship
                shippingProvider:
                  example: DHL
                  type: string
                accessKey:
                  example: access_key
                  type: string
                documentUrl:
                  example: http://doc.com/my_doc
                  type: string
                invoiceEncodedXml:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/admin-change-status:
    post:
      tags:
        - Orders
      description: |
        Set Order Item Status. Only available for admin users.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItems:
                  type: array
                  items:
                    type: object
                    required:
                      - orderItemId
                    properties:
                      orderItemId:
                        type: integer
                      status:
                        type: string
                      reason:
                        type: string
                  example:
                    - orderItemId: 12
                      status: canceled
                      reason: defect
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-packed-by-marketplace:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to *"packed by marketplace"*. Only orders
        items on statuses *"pending"* can be packed by marketplace Serial number
        only applicable if serial number feature has been enabled for platform
        and seller. For some categories of products serial number may be
        required. In that case you have to provide it. Serial numbers must be
        unique with one order. Serial number can be from 1 to 26 characters long
        and can contain latin letters and/or digits. Order Items should not be
        digital. Tracking Code is required only if there is no API integration
        available for the selected shipment provider and has to be valid and
        unique. It cannot be set for Order Items in different packages. the
        value has to be same for items in the same package.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - orderItems
                - deliveryType
              properties:
                orderItems:
                  type: array
                  items:
                    type: object
                    required:
                      - orderItemId
                    properties:
                      orderItemId:
                        type: integer
                      serialNumber:
                        description: >-
                          Only applicable if serial number feature has been
                          enabled for platform and seller.  Unique serial number
                          for tracking order items. Can be specified as
                          comma-separated list of serials or JSON array,  in
                          which case there must be exactly as many serials as
                          there are OrderItemIds.  Can also be specified as a
                          JSON object where keys are order item ids and values
                          are corresponding serial numbers;  in this case the
                          order item id from OMS will be used as serial for
                          items where it has not been explicitly specified.
                        type: string
                  example:
                    - orderItemId: 12
                      serialNumber: NVFXXXRT
                deliveryType:
                  type: string
                  enum:
                    - dropship
                    - pickup
                    - send_to_warehouse
                  description: >-
                    One of the following: 'dropship' - The seller will send out
                    the package on his own; 'pickup' -  Shop should pick up the
                    item from the seller (cross-docking); 'send_to_warehouse' - 
                    The seller will send the item to the warehouse
                    (crossdocking).
                  example: dropship
                shippingProvider:
                  type: string
                  description: >-
                    Valid shipment provider name as looked up via
                    v2/orders-shipment-providers.  Mandatory always
                    drop-shipping and mandatory of cross-docking when
                    DeliveryType 'send_to_warehouse' is used
                  example: Aramax
                trackingNumber:
                  type: string
                  description: >-
                    The actual tracking number, needs to be provided when passed
                    shippingProvider does not have API integration enabled
                  example: '123'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-return-rejected:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to return rejected.  Order items must be in
        "waiting for approval" status. Feature 'enable returns from warehouse'
        must be set as 'Seller can receive returned items from customer'. 
      security:
        - oAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - orderItemIds
                  properties:
                    orderItemIds:
                      type: array
                      items:
                        type: integer
                      example:
                        - 123456
                        - 654321
                - type: object
                  required:
                    - reason
                  properties:
                    reason:
                      type: string
                      description: >-
                        Failure reason. The list of reasons you can find
                        /v2/orders-failure-reasons.
                      example: Not reachable
                    reasonDetail:
                      type: string
                      description: Additional information
                      example: Details
                      nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-returned:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to returned. Order items must be in
        "delivered" status.
      security:
        - oAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - orderItemIds
                  properties:
                    orderItemIds:
                      type: array
                      items:
                        type: integer
                      example:
                        - 123456
                        - 654321
                - type: object
                  properties:
                    reason:
                      type: string
                      example: Changed mind
                      nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: |
            - E021: OMS Api Error Occurred
            - E023: Invalid Order Item IDs
            - E073: All order items must have status Delivered.
            - E450: You are not allowed to set order item to returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/statuses/set-to-delivery-failed:
    post:
      tags:
        - Orders
      description: >
        Set orders items statuses to delivery failed. Order items must be in
        "shipped" status.
      security:
        - oAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  required:
                    - orderItemIds
                  properties:
                    orderItemIds:
                      type: array
                      items:
                        type: integer
                      example:
                        - 123456
                        - 654321
                - type: object
                  required:
                    - reason
                  properties:
                    reason:
                      type: string
                      description: >-
                        Failure reason. The list of reasons you can find
                        /v2/orders-failure-reasons.
                      example: Not reachable
                    reasonDetail:
                      type: string
                      description: Additional information
                      example: Details
                      nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order-items:
    get:
      tags:
        - Orders
      description: >
        Get order items by given order items ids or order ids.


        `PackageId` and `PackageSrcId` which were available in old version of
        the API are now returned in method: `/v2/order-items/packages`


        `Currency`: was moved to `v2/orders` method


        Please set the `includeVoucherDetails` parameter to true if you want to
        receive information about voucher details

        in the response (applicable only to orders with a voucher code). The
        default value is false, and no voucher 

        details will be fetched.
      security:
        - oAuth: []
      operationId: GET_v2-order-items-get
      parameters:
        - required: false
          description: Array of numeric Order Item Ids
          in: query
          name: orderItemIds[]
          schema:
            type: array
            items:
              type: integer
        - required: false
          description: Array of numeric Order Ids
          in: query
          name: orderIds[]
          schema:
            type: array
            items:
              type: integer
        - name: X-Context
          in: header
          required: false
          schema:
            type: string
            enum:
              - admin
              - seller
            example: seller
        - name: orderNumbers[]
          in: query
          description: Order numbers
          schema:
            type: array
            items:
              type: string
        - name: createdAtStart
          in: query
          description: Filter by Created At range
          schema:
            type: string
            format: date-time
        - name: createdAtEnd
          in: query
          description: Filter by Created At range
          schema:
            type: string
            format: date-time
        - name: updatedAtStart
          in: query
          description: Filter by Updated At range
          schema:
            type: string
            format: date-time
        - name: updatedAtEnd
          in: query
          description: Filter by Updated At range
          schema:
            type: string
            format: date-time
        - name: status[]
          in: query
          description: Filter by status
          schema:
            type: array
            items:
              type: string
              enum:
                - pending
                - ready_to_ship
                - shipped
                - delivered
                - failed
                - returned
                - canceled
                - return_rejected
                - return_waiting_for_approval
                - return_delivered
                - return_shipped_by_customer
        - name: returnedBy
          in: query
          description: Returned by
          schema:
            type: string
            enum:
              - seller
              - region
        - name: srcIds[]
          in: query
          description: Filter by srcId
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: Sorting field
          schema:
            type: string
            enum:
              - updatedAt
        - name: sortDir
          in: query
          description: Sorting direction
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: includeVoucherDetails
          in: query
          description: >-
            Include voucher details in response (only for orders with voucher)
            default: false
          schema:
            type: boolean
        - in: query
          required: false
          name: shipmentType
          description: |
            Search by shipment type
          schema:
            type: string
            enum:
              - warehouse
              - dropshipping
              - crossdocking
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Unique numeric identifier
                          example: 1111
                        srcId:
                          type: string
                          description: Order item src ID
                          example: MY-32022990
                        sellerId:
                          type: integer
                          description: Seller ID
                          example: 11112
                        orderId:
                          type: integer
                          description: Order ID
                          example: 111134
                        uuid:
                          type: string
                          description: Unique string ID
                          example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
                        status:
                          type: string
                          description: |
                            Order Item status.
                          example: pending
                          enum:
                            - pending
                            - shipped
                            - canceled
                            - returned
                            - failed
                            - delivered
                            - ready_to_ship
                            - return_shipped_by_customer
                            - return_waiting_for_approval
                            - return_rejected
                            - return_delivered
                            - payment_pending
                        isProcessable:
                          type: boolean
                          description: >-
                            It's true if order item shipment type is not
                            `consignment` and src_status is not
                            `awaiting_fulfillment`
                          example: true
                        failureReason:
                          type: object
                          properties:
                            type:
                              type: string
                              description: |
                                Failure reason type.
                              nullable: true
                              example: null
                              enum:
                                - canceled
                                - returned
                                - failed
                                - return_rejected
                                - canceled_system
                            name:
                              type: string
                              description: Reason name
                              nullable: true
                              example: null
                            description:
                              type: string
                              description: Reason description
                              nullable: true
                              example: null
                            details:
                              type: string
                              description: Reason details
                              example: ''
                          required:
                            - type
                            - name
                            - description
                            - details
                        shipment:
                          type: object
                          properties:
                            type:
                              type: string
                              description: Shipment type.
                              example: crossdocking
                              enum:
                                - warehouse
                                - dropshipping
                                - crossdocking
                                - dropshipping_crossdocking
                                - crossdocking_dropshipping
                            crossdockingDeliveryType:
                              type: string
                              description: Crossdocking delivery type
                              nullable: true
                              example: null
                              enum:
                                - send_to_warehouse
                                - pickup
                            method:
                              type: string
                              description: >-
                                Shipment method received from the Shop. It is
                                intended to indicate where the order should be
                                send to. Possible options are "home", "pickup",
                                "address", "none"
                              example: home
                              enum:
                                - home
                                - pickup
                                - address
                                - none
                            preProvider:
                              nullable: true
                              description: Pre-defined shipment provider
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  nullable: true
                                  example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                                name:
                                  type: string
                                  description: Shipment provider name
                                  example: DafitiCarrier
                                default:
                                  type: boolean
                                  description: True if it is the default shipment provider
                                  example: true
                                digitalType:
                                  type: string
                                  description: Digital type
                                  nullable: true
                                  example: null
                                trackingUrl:
                                  type: string
                                  description: Tracking URL
                                  nullable: true
                                  example: https://example.com/tracking/
                              required:
                                - uuid
                                - name
                                - isDefault
                                - digitalType
                                - trackingUrl
                            provider:
                              nullable: true
                              description: Shipment provider
                              type: object
                              properties:
                                uuid:
                                  type: string
                                  nullable: true
                                  example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                                name:
                                  type: string
                                  description: Shipment provider name
                                  example: DafitiCarrier
                                default:
                                  type: boolean
                                  description: True if it is the default shipment provider
                                  example: true
                                digitalType:
                                  type: string
                                  description: Digital type
                                  nullable: true
                                  example: null
                                trackingUrl:
                                  type: string
                                  description: Tracking URL
                                  nullable: true
                                  example: https://example.com/tracking/
                              required:
                                - uuid
                                - name
                                - isDefault
                                - digitalType
                                - trackingUrl
                            providerPreselected:
                              type: boolean
                              description: Is shipment provider preselected
                              example: false
                            providerProduct:
                              type: string
                              example: ''
                            providerType:
                              type: string
                              description: Shipment provider type
                              nullable: true
                              example: null
                              enum:
                                - express
                                - standard
                                - economy
                                - digital
                                - air
                                - surface
                                - sameday
                            weight:
                              type: number
                              format: float
                              description: Weight
                              example: 0.5
                            trackingCode:
                              type: string
                              description: Tracking code
                              example: '123'
                            preTrackingCode:
                              type: string
                              description: PRE tracking code
                              nullable: true
                              example: null
                          required:
                            - type
                            - crossdockingDeliveryType
                            - method
                            - preProvider
                            - provider
                            - providerPreselected
                            - providerProduct
                            - providerType
                            - weight
                            - trackingCode
                            - preTrackingCode
                        invoiceNumber:
                          type: string
                          description: Invoice Number
                          nullable: true
                          example: 123re
                        invoiceAccesskey:
                          type: string
                          description: Invoice Access Key
                          nullable: true
                          example: null
                        inTransit:
                          type: boolean
                          description: Order item is in transit
                          example: false
                        premium:
                          type: boolean
                          description: >-
                            The flag indicates if the order item is premium or
                            not
                          example: false
                        targetToShipAt:
                          type: string
                          description: >-
                            Promised shipment date. It works only if Promised
                            Shipping Date Feature is Enabled. The dates returned
                            will follow the same format as in the example
                          nullable: true
                          example: '2022-12-23T05:36:23.123456Z'
                        product:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Product name.
                              example: Short de Baño Azul Topper Slim
                            sku:
                              type: string
                              description: Product SKU
                              example: TO076AT24RKHAR-2474097
                            variation:
                              type: string
                              description: Variation value as received from the Shop
                              nullable: true
                              example: '-'
                            sellerSku:
                              type: string
                              description: Seller SKU
                              example: 164097_L
                          required:
                            - name
                            - sku
                            - variation
                            - sellerSku
                        unitPrice:
                          type: number
                          format: float
                          description: Order item price
                          example: 2499
                        taxAmount:
                          type: number
                          format: float
                          description: Tax amount for the order item
                          example: 433.71
                        taxPercent:
                          type: number
                          format: float
                          description: Tax percent for the order item
                          example: 21
                        paidPrice:
                          type: number
                          format: float
                          description: Paid price
                          example: 2499
                        paidCommission:
                          type: number
                          format: float
                          description: Paid commission
                          nullable: true
                          example: null
                        shippingFee:
                          type: number
                          format: float
                          description: Shipping fee
                          example: 0
                        shippingServiceCost:
                          type: number
                          format: float
                          description: Shipping service cost
                          nullable: true
                          example: null
                        walletCredits:
                          type: number
                          format: float
                          description: >-
                            Indicated that the customer used wallet as payment
                            aside from possible voucher
                          example: 0
                        storeCredits:
                          type: number
                          format: float
                          description: Store credits
                          example: 0
                        shippingVoucherAmount:
                          type: number
                          format: float
                          description: Shipping voucher amount
                          example: 0
                        priceAfterDiscount:
                          type: number
                          format: float
                          description: Price after discount
                          example: 0
                        salesDueAmount:
                          type: number
                          format: float
                          description: Sales due amount
                          example: 245
                        itemSerialNumber:
                          type: string
                          description: Serial number
                          nullable: true
                          example: null
                        abatementRate:
                          type: string
                          description: Abatement rate
                          nullable: true
                          example: null
                        exciseRate:
                          type: string
                          description: Excise rate
                          nullable: true
                          example: null
                        hsnCode:
                          type: string
                          description: HSN code
                          nullable: true
                          example: null
                        codCollectableAmount:
                          type: string
                          description: Cod collectable amount
                          nullable: true
                          example: null
                        purchase:
                          type: object
                          properties:
                            orderSrcId:
                              type: integer
                              description: Order src ID
                              nullable: true
                              example: 555
                            orderNumber:
                              type: string
                              description: Order number
                              nullable: true
                              example: MPDS-D1405061201
                            deliveryInfo:
                              type: string
                              description: Delivery info
                              nullable: true
                              example: null
                          required:
                            - orderSrcId
                            - orderNumber
                            - deliveryInfo
                        createdAt:
                          type: string
                          format: datetime
                          description: Date and time when the order item was created
                          example: '2021-09-22T23:21:42.123456Z'
                        updatedAt:
                          type: string
                          format: datetime
                          nullable: true
                          description: >-
                            Date and time when the order item was updated. The
                            dates returned will follow the same format as in the
                            example
                          example: '2021-09-22T23:21:42.123456Z'
                        lastStatusChangedAt:
                          type: string
                          format: datetime
                          nullable: true
                          description: >
                            Date when the order item status was updated.

                            Not every Order Item update changes its status. This
                            is the difference between this field and updated_at.
                            The dates returned will follow the same format as in
                            the example
                          example: '2021-09-22T23:21:42.123456Z'
                        warehouseName:
                          type: string
                          description: Warehouse name
                          nullable: true
                          example: null
                        extraAttributes:
                          type: object
                          description: >-
                            Extra attributes which were passed to SellerCenter
                            on getMarketPlaceOrders call.
                          nullable: true
                          properties:
                            installment_fee:
                              type: number
                              format: float
                              description: Installment fee
                              example: 20.5
                            delivery_type:
                              type: string
                              description: Delivery type
                              example: standard
                            has_transfer_shipping_flat_fee:
                              type: boolean
                              description: >-
                                Indicates, whether the order item has transfer
                                shipping flat fee
                              example: false
                            price_excluded_tax:
                              type: number
                              format: float
                              description: Price excluded tax
                              example: 24.99
                            sales_service_tax:
                              type: number
                              format: float
                              description: Sales service tax
                              example: 433.71
                            gst_free:
                              type: string
                              description: Indicates, whether the order item is GST free
                              example: '0'
                            shipping_fee_sst:
                              type: number
                              format: float
                              description: Shipping fee SST
                              example: 10.5
                        isHybrid:
                          type: boolean
                          description: >-
                            Indicates, whether the product is a hybrid product
                            for the Hybrid Depth / Size Fill feature.
                          example: false
                        isOutlet:
                          type: boolean
                          description: Indicates, whether the order item has "outlet" flag.
                          example: false
                        actions:
                          type: array
                          description: Possible next actions for order item
                          example:
                            - status_set_to_shipped
                            - status_set_to_cancelled
                          items:
                            type: string
                            enum:
                              - create_manifest
                              - create_pickup_request
                              - generate_checklist
                              - generate_picklist
                              - generate_invoice
                              - generate_shipping_label
                              - generate_shipping_parcel
                              - generate_export_invoice
                              - generate_manifest
                              - generate_carrier_manifest
                              - generate_credit_note
                              - set_invoice_number
                              - set_invoice_access_key
                              - set_tracking_code
                              - set_shipment_provider
                              - status_set_to_delivered
                              - status_set_to_shipped
                              - status_set_to_canceled
                              - status_set_to_packed_by_marketplace
                              - status_set_to_ready_to_ship
                              - status_set_to_returned
                              - status_set_to_rejected
                              - status_set_to_return_rejected
                              - status_set_to_failed_delivery
                              - status_set_to_payment_pending
                              - status_set_to_return_delivered
                              - status_set_to_return_waiting_for_approval
                              - status_set_to_return_shipped_by_customer
                        vouchers:
                          type: array
                          description: Discount list
                          items:
                            type: object
                            properties:
                              code:
                                type: string
                                description: Discount code
                                example: AAA
                              amount:
                                type: number
                                format: float
                                description: Discount amount
                                example: 14.5
                              cashbackPercentage:
                                type: integer
                                description: >-
                                  Promotion defined percentage value for
                                  cashback
                                example: 0
                              voucherSellerShare:
                                type: number
                                format: float
                                description: >-
                                  Promotion defined percentage value for the
                                  voucher, which is covered/funded by the seller
                                example: 0
                              cashbackSellerShare:
                                type: number
                                format: float
                                description: >-
                                  Promotion defined percentage value for the
                                  cashback, which is covered/funded by the
                                  seller
                                example: 0
                              amountFundedBySeller:
                                type: number
                                format: float
                                description: >-
                                  Actual calculated amount based on the voucher
                                  seller share percentage and the discount
                                  amount
                                example: 0
                              cashbackAmountFundedBySeller:
                                type: string
                                description: >-
                                  Actual calculated amount based on the cashback
                                  seller share percentage and the discount
                                  amount
                                example: 0
                            required:
                              - code
                              - amount
                              - cashbackPercentage
                              - voucherSellerShare
                              - cashbackSellerShare
                              - amountFundedBySeller
                              - cashbackAmountFundedBySeller
                        manifestStatus:
                          example: forward_ready_to_ship
                          type: string
                          description: Manifest status
                          nullable: true
                          enum:
                            - forward_ready_to_ship
                            - forward_received
                            - forward_shipped
                            - return_ready_to_ship
                            - return_received
                            - return_shipped
                        isPickupRequestSent:
                          type: boolean
                          example: false
                          description: >-
                            The flag shows if Pickup Request has been sent for
                            the item
                        discountAmount:
                          type: number
                          format: float
                          description: Discount value
                          example: 0
                      required:
                        - id
                        - srcId
                        - sellerId
                        - orderId
                        - uuid
                        - status
                        - isProcessable
                        - failureReason
                        - shipment
                        - invoiceNumber
                        - invoiceAccesskey
                        - inTransit
                        - premium
                        - targetToShipAt
                        - product
                        - unitPrice
                        - taxAmount
                        - taxPercent
                        - paidPrice
                        - paidCommission
                        - shippingFee
                        - shippingServiceCost
                        - walletCredits
                        - storeCredits
                        - shippingVoucherAmount
                        - priceAfterDiscount
                        - salesDueAmount
                        - itemSerialNumber
                        - abatementRate
                        - exciseRate
                        - hsnCode
                        - codCollectableAmount
                        - purchase
                        - createdAt
                        - updatedAt
                        - lastStatusChangedAt
                        - warehouseName
                        - extraAttributes
                        - isHybrid
                        - isOutlet
                        - actions
                        - vouchers
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order-item/{orderItemId}/tracking-code:
    post:
      tags:
        - Orders
      description: >
        Updates the tracking number for an order item that is in the ready to
        ship status. Shipping information will be changed for all items in the
        same package.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                trackingCode:
                  type: string
                  example: ASDF123
      parameters:
        - required: true
          description: Numeric Order Item Id
          in: path
          name: orderItemId
          schema:
            type: integer
      responses:
        '200':
          description: Tracking number provider updated successfully.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order-item/{orderItemId}/shipping-provider:
    post:
      tags:
        - Orders
      description: >
        Updates the shipping provider for an order item that is in the ready to
        ship status. Shipping information will be changed for all items in the
        same package.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - shippingProvider
              properties:
                shippingProvider:
                  type: string
                  example: DafitiCarrier
                trackingCode:
                  type: string
                  example: ASDF123
      parameters:
        - required: true
          description: Numeric Order Item Id
          in: path
          name: orderItemId
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique numeric identifier
                    example: 1111
                  srcId:
                    type: string
                    description: Order item src ID
                    example: MY-32022990
                  sellerId:
                    type: integer
                    description: Seller ID
                    example: 11112
                  orderId:
                    type: integer
                    description: Order ID
                    example: 111134
                  uuid:
                    type: string
                    description: Unique string ID
                    example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
                  status:
                    type: string
                    description: |
                      Order Item status.
                    example: pending
                    enum:
                      - pending
                      - shipped
                      - canceled
                      - returned
                      - failed
                      - delivered
                      - ready_to_ship
                      - return_shipped_by_customer
                      - return_waiting_for_approval
                      - return_rejected
                      - return_delivered
                      - payment_pending
                  isProcessable:
                    type: boolean
                    description: >-
                      It's true if order item shipment type is not `consignment`
                      and src_status is not `awaiting_fulfillment`
                    example: true
                  failureReason:
                    type: object
                    properties:
                      type:
                        type: string
                        description: |
                          Failure reason type.
                        nullable: true
                        example: null
                        enum:
                          - canceled
                          - returned
                          - failed
                          - return_rejected
                          - canceled_system
                      name:
                        type: string
                        description: Reason name
                        nullable: true
                        example: null
                      description:
                        type: string
                        description: Reason description
                        nullable: true
                        example: null
                      details:
                        type: string
                        description: Reason details
                        example: ''
                    required:
                      - type
                      - name
                      - description
                      - details
                  shipment:
                    type: object
                    properties:
                      type:
                        type: string
                        description: Shipment type.
                        example: crossdocking
                        enum:
                          - warehouse
                          - dropshipping
                          - crossdocking
                          - dropshipping_crossdocking
                          - crossdocking_dropshipping
                      crossdockingDeliveryType:
                        type: string
                        description: Crossdocking delivery type
                        nullable: true
                        example: null
                        enum:
                          - send_to_warehouse
                          - pickup
                      method:
                        type: string
                        description: >-
                          Shipment method received from the Shop. It is intended
                          to indicate where the order should be send to.
                          Possible options are "home", "pickup", "address",
                          "none"
                        example: home
                        enum:
                          - home
                          - pickup
                          - address
                          - none
                      preProvider:
                        nullable: true
                        description: Pre-defined shipment provider
                        type: object
                        properties:
                          uuid:
                            type: string
                            nullable: true
                            example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                          name:
                            type: string
                            description: Shipment provider name
                            example: DafitiCarrier
                          default:
                            type: boolean
                            description: True if it is the default shipment provider
                            example: true
                          digitalType:
                            type: string
                            description: Digital type
                            nullable: true
                            example: null
                          trackingUrl:
                            type: string
                            description: Tracking URL
                            nullable: true
                            example: https://example.com/tracking/
                        required:
                          - uuid
                          - name
                          - isDefault
                          - digitalType
                          - trackingUrl
                      provider:
                        nullable: true
                        description: Shipment provider
                        type: object
                        properties:
                          uuid:
                            type: string
                            nullable: true
                            example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                          name:
                            type: string
                            description: Shipment provider name
                            example: DafitiCarrier
                          default:
                            type: boolean
                            description: True if it is the default shipment provider
                            example: true
                          digitalType:
                            type: string
                            description: Digital type
                            nullable: true
                            example: null
                          trackingUrl:
                            type: string
                            description: Tracking URL
                            nullable: true
                            example: https://example.com/tracking/
                        required:
                          - uuid
                          - name
                          - isDefault
                          - digitalType
                          - trackingUrl
                      providerPreselected:
                        type: boolean
                        description: Is shipment provider preselected
                        example: false
                      providerProduct:
                        type: string
                        example: ''
                      providerType:
                        type: string
                        description: Shipment provider type
                        nullable: true
                        example: null
                        enum:
                          - express
                          - standard
                          - economy
                          - digital
                          - air
                          - surface
                          - sameday
                      weight:
                        type: number
                        format: float
                        description: Weight
                        example: 0.5
                      trackingCode:
                        type: string
                        description: Tracking code
                        example: '123'
                      preTrackingCode:
                        type: string
                        description: PRE tracking code
                        nullable: true
                        example: null
                    required:
                      - type
                      - crossdockingDeliveryType
                      - method
                      - preProvider
                      - provider
                      - providerPreselected
                      - providerProduct
                      - providerType
                      - weight
                      - trackingCode
                      - preTrackingCode
                  invoiceNumber:
                    type: string
                    description: Invoice Number
                    nullable: true
                    example: 123re
                  invoiceAccesskey:
                    type: string
                    description: Invoice Access Key
                    nullable: true
                    example: null
                  inTransit:
                    type: boolean
                    description: Order item is in transit
                    example: false
                  premium:
                    type: boolean
                    description: The flag indicates if the order item is premium or not
                    example: false
                  targetToShipAt:
                    type: string
                    description: >-
                      Promised shipment date. It works only if Promised Shipping
                      Date Feature is Enabled. The dates returned will follow
                      the same format as in the example
                    nullable: true
                    example: '2022-12-23T05:36:23.123456Z'
                  product:
                    type: object
                    properties:
                      name:
                        type: string
                        description: Product name.
                        example: Short de Baño Azul Topper Slim
                      sku:
                        type: string
                        description: Product SKU
                        example: TO076AT24RKHAR-2474097
                      variation:
                        type: string
                        description: Variation value as received from the Shop
                        nullable: true
                        example: '-'
                      sellerSku:
                        type: string
                        description: Seller SKU
                        example: 164097_L
                    required:
                      - name
                      - sku
                      - variation
                      - sellerSku
                  unitPrice:
                    type: number
                    format: float
                    description: Order item price
                    example: 2499
                  taxAmount:
                    type: number
                    format: float
                    description: Tax amount for the order item
                    example: 433.71
                  taxPercent:
                    type: number
                    format: float
                    description: Tax percent for the order item
                    example: 21
                  paidPrice:
                    type: number
                    format: float
                    description: Paid price
                    example: 2499
                  paidCommission:
                    type: number
                    format: float
                    description: Paid commission
                    nullable: true
                    example: null
                  shippingFee:
                    type: number
                    format: float
                    description: Shipping fee
                    example: 0
                  shippingServiceCost:
                    type: number
                    format: float
                    description: Shipping service cost
                    nullable: true
                    example: null
                  walletCredits:
                    type: number
                    format: float
                    description: >-
                      Indicated that the customer used wallet as payment aside
                      from possible voucher
                    example: 0
                  storeCredits:
                    type: number
                    format: float
                    description: Store credits
                    example: 0
                  shippingVoucherAmount:
                    type: number
                    format: float
                    description: Shipping voucher amount
                    example: 0
                  priceAfterDiscount:
                    type: number
                    format: float
                    description: Price after discount
                    example: 0
                  salesDueAmount:
                    type: number
                    format: float
                    description: Sales due amount
                    example: 245
                  itemSerialNumber:
                    type: string
                    description: Serial number
                    nullable: true
                    example: null
                  abatementRate:
                    type: string
                    description: Abatement rate
                    nullable: true
                    example: null
                  exciseRate:
                    type: string
                    description: Excise rate
                    nullable: true
                    example: null
                  hsnCode:
                    type: string
                    description: HSN code
                    nullable: true
                    example: null
                  codCollectableAmount:
                    type: string
                    description: Cod collectable amount
                    nullable: true
                    example: null
                  purchase:
                    type: object
                    properties:
                      orderSrcId:
                        type: integer
                        description: Order src ID
                        nullable: true
                        example: 555
                      orderNumber:
                        type: string
                        description: Order number
                        nullable: true
                        example: MPDS-D1405061201
                      deliveryInfo:
                        type: string
                        description: Delivery info
                        nullable: true
                        example: null
                    required:
                      - orderSrcId
                      - orderNumber
                      - deliveryInfo
                  createdAt:
                    type: string
                    format: datetime
                    description: Date and time when the order item was created
                    example: '2021-09-22T23:21:42.123456Z'
                  updatedAt:
                    type: string
                    format: datetime
                    nullable: true
                    description: >-
                      Date and time when the order item was updated. The dates
                      returned will follow the same format as in the example
                    example: '2021-09-22T23:21:42.123456Z'
                  lastStatusChangedAt:
                    type: string
                    format: datetime
                    nullable: true
                    description: >
                      Date when the order item status was updated.

                      Not every Order Item update changes its status. This is
                      the difference between this field and updated_at. The
                      dates returned will follow the same format as in the
                      example
                    example: '2021-09-22T23:21:42.123456Z'
                  warehouseName:
                    type: string
                    description: Warehouse name
                    nullable: true
                    example: null
                  extraAttributes:
                    type: object
                    description: >-
                      Extra attributes which were passed to SellerCenter on
                      getMarketPlaceOrders call.
                    nullable: true
                    properties:
                      installment_fee:
                        type: number
                        format: float
                        description: Installment fee
                        example: 20.5
                      delivery_type:
                        type: string
                        description: Delivery type
                        example: standard
                      has_transfer_shipping_flat_fee:
                        type: boolean
                        description: >-
                          Indicates, whether the order item has transfer
                          shipping flat fee
                        example: false
                      price_excluded_tax:
                        type: number
                        format: float
                        description: Price excluded tax
                        example: 24.99
                      sales_service_tax:
                        type: number
                        format: float
                        description: Sales service tax
                        example: 433.71
                      gst_free:
                        type: string
                        description: Indicates, whether the order item is GST free
                        example: '0'
                      shipping_fee_sst:
                        type: number
                        format: float
                        description: Shipping fee SST
                        example: 10.5
                  isHybrid:
                    type: boolean
                    description: >-
                      Indicates, whether the product is a hybrid product for the
                      Hybrid Depth / Size Fill feature.
                    example: false
                  isOutlet:
                    type: boolean
                    description: Indicates, whether the order item has "outlet" flag.
                    example: false
                  actions:
                    type: array
                    description: Possible next actions for order item
                    example:
                      - status_set_to_shipped
                      - status_set_to_cancelled
                    items:
                      type: string
                      enum:
                        - create_manifest
                        - create_pickup_request
                        - generate_checklist
                        - generate_picklist
                        - generate_invoice
                        - generate_shipping_label
                        - generate_shipping_parcel
                        - generate_export_invoice
                        - generate_manifest
                        - generate_carrier_manifest
                        - generate_credit_note
                        - set_invoice_number
                        - set_invoice_access_key
                        - set_tracking_code
                        - set_shipment_provider
                        - status_set_to_delivered
                        - status_set_to_shipped
                        - status_set_to_canceled
                        - status_set_to_packed_by_marketplace
                        - status_set_to_ready_to_ship
                        - status_set_to_returned
                        - status_set_to_rejected
                        - status_set_to_return_rejected
                        - status_set_to_failed_delivery
                        - status_set_to_payment_pending
                        - status_set_to_return_delivered
                        - status_set_to_return_waiting_for_approval
                        - status_set_to_return_shipped_by_customer
                  vouchers:
                    type: array
                    description: Discount list
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                          description: Discount code
                          example: AAA
                        amount:
                          type: number
                          format: float
                          description: Discount amount
                          example: 14.5
                        cashbackPercentage:
                          type: integer
                          description: Promotion defined percentage value for cashback
                          example: 0
                        voucherSellerShare:
                          type: number
                          format: float
                          description: >-
                            Promotion defined percentage value for the voucher,
                            which is covered/funded by the seller
                          example: 0
                        cashbackSellerShare:
                          type: number
                          format: float
                          description: >-
                            Promotion defined percentage value for the cashback,
                            which is covered/funded by the seller
                          example: 0
                        amountFundedBySeller:
                          type: number
                          format: float
                          description: >-
                            Actual calculated amount based on the voucher seller
                            share percentage and the discount amount
                          example: 0
                        cashbackAmountFundedBySeller:
                          type: string
                          description: >-
                            Actual calculated amount based on the cashback
                            seller share percentage and the discount amount
                          example: 0
                      required:
                        - code
                        - amount
                        - cashbackPercentage
                        - voucherSellerShare
                        - cashbackSellerShare
                        - amountFundedBySeller
                        - cashbackAmountFundedBySeller
                  manifestStatus:
                    example: forward_ready_to_ship
                    type: string
                    description: Manifest status
                    nullable: true
                    enum:
                      - forward_ready_to_ship
                      - forward_received
                      - forward_shipped
                      - return_ready_to_ship
                      - return_received
                      - return_shipped
                  isPickupRequestSent:
                    type: boolean
                    example: false
                    description: >-
                      The flag shows if Pickup Request has been sent for the
                      item
                  discountAmount:
                    type: number
                    format: float
                    description: Discount value
                    example: 0
                required:
                  - id
                  - srcId
                  - sellerId
                  - orderId
                  - uuid
                  - status
                  - isProcessable
                  - failureReason
                  - shipment
                  - invoiceNumber
                  - invoiceAccesskey
                  - inTransit
                  - premium
                  - targetToShipAt
                  - product
                  - unitPrice
                  - taxAmount
                  - taxPercent
                  - paidPrice
                  - paidCommission
                  - shippingFee
                  - shippingServiceCost
                  - walletCredits
                  - storeCredits
                  - shippingVoucherAmount
                  - priceAfterDiscount
                  - salesDueAmount
                  - itemSerialNumber
                  - abatementRate
                  - exciseRate
                  - hsnCode
                  - codCollectableAmount
                  - purchase
                  - createdAt
                  - updatedAt
                  - lastStatusChangedAt
                  - warehouseName
                  - extraAttributes
                  - isHybrid
                  - isOutlet
                  - actions
                  - vouchers
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order-items/packages:
    get:
      tags:
        - Orders
      description: |
        Gets package ids for given order items ids.
      security:
        - oAuth: []
      parameters:
        - required: false
          description: Array of numeric Order Item Ids
          in: query
          name: orderItemIds[]
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      nullable: false
                      example: 123
                    srcId:
                      type: string
                      description: Package src ID
                      nullable: true
                      example: MY-32022990
                    orderItemIds:
                      type: array
                      description: Order items ids within package
                      example:
                        - 144
                        - 152
                      items:
                        type: integer
                  required:
                    - id
                    - orderItemIds
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order-items/{orderItemId}/return:
    get:
      tags:
        - Orders
      description: |
        Get return information of order item
      security:
        - oAuth: []
      parameters:
        - required: true
          description: Numeric Order Item Id
          in: path
          name: orderItemId
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderItemId:
                    type: integer
                    nullable: false
                    description: Order Item Id
                  returnComment:
                    type: string
                    nullable: true
                    description: Return comment
                  shipmentProvider:
                    type: string
                    nullable: true
                    description: Shipment Provider
                  srcId:
                    type: string
                    nullable: true
                    description: Src Id
                  trackingCode:
                    type: string
                    nullable: true
                    description: Tracking code
                required:
                  - orderItemId
                  - returnComment
                  - shipmentProvider
                  - srcId
                  - trackingCode
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order-items/returns:
    get:
      tags:
        - Orders
      description: |
        Get return information for given order items ids
      security:
        - oAuth: []
      parameters:
        - required: false
          description: Array of numeric Order Item Ids
          in: query
          name: orderItemIds[]
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: Collection of Return objects for given Order Items Ids
                items:
                  type: object
                  properties:
                    orderItemId:
                      type: integer
                      nullable: false
                      description: Order Item Id
                    returnComment:
                      type: string
                      nullable: true
                      description: Return comment
                    shipmentProvider:
                      type: string
                      nullable: true
                      description: Shipment Provider
                    srcId:
                      type: string
                      nullable: true
                      description: Src Id
                    trackingCode:
                      type: string
                      nullable: true
                      description: Tracking code
                  required:
                    - orderItemId
                    - returnComment
                    - shipmentProvider
                    - srcId
                    - trackingCode
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order-item-tags:
    get:
      tags:
        - Orders
      description: Get all order items tags
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: List of all available order item tags
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 309
                      nullable: false
                    name:
                      type: string
                      nullable: false
                      example: Order for Cancellation
        '401':
          description: Unauthorized error
  /v2/order-item-tags/assigned:
    get:
      tags:
        - Orders
      description: Get order items tags assigned to specified order items
      security:
        - oAuth: []
      parameters:
        - required: false
          description: Array of numeric Order Item Ids
          in: query
          name: orderItemIds[]
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: List of tags assigned to specific order item id
                items:
                  type: object
                  properties:
                    orderItemId:
                      type: integer
                      example: 420690
                      nullable: false
                    tags:
                      type: array
                      nullable: false
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 42
                            nullable: false
                          name:
                            type: string
                            nullable: false
                            example: Order for Cancellation
                          dueAt:
                            type: string
                            description: Date when tag will be removed from the order item
                            format: date-time
                            nullable: true
                            example: '2023-03-28T04:00:00+00:00'
        '401':
          description: Unauthorized error
  /v2/order/{orderId}/history:
    get:
      tags:
        - Orders
      description: Shows status change history for all order items of the specific order
      security:
        - oAuth: []
      operationId: GET_v2-orders-history
      parameters:
        - required: true
          description: Numeric Order Id
          in: path
          name: orderId
          schema:
            type: integer
        - required: false
          description: Array of numeric Order Item Ids
          in: query
          name: orderItemIds[]
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    orderItemId:
                      type: integer
                      description: Order item identifier
                      example: 1111
                    shopSku:
                      type: string
                      description: Shop SKU
                      example: 164097_L
                    status:
                      type: string
                      description: |
                        Order Item status.
                      example: pending
                      enum:
                        - pending
                        - shipped
                        - canceled
                        - returned
                        - failed
                        - delivered
                        - ready_to_ship
                        - return_shipped_by_customer
                        - return_waiting_for_approval
                        - return_rejected
                        - return_delivered
                        - payment_pending
                    note:
                      type: string
                      description: Additional information
                    createdAt:
                      type: string
                      description: Date when change occurred
                      example: '2021-09-22T23:21:42.123456Z'
                    editor:
                      type: string
                      description: Author of the change
                      example: admin@sellercenter.net
                  required:
                    - orderItemId
                    - shopSku
                    - status
                    - createdAt
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/order/{orderId}/finance:
    get:
      tags:
        - Orders
      description: Get order finance info
      security:
        - oAuth: []
      parameters:
        - required: true
          description: Numeric Order Id
          in: path
          name: orderId
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                    description: Order Id
                    example: 1
                  currency:
                    type: string
                    description: Order currency
                    example: USD
                  shippingFeeItems:
                    type: number
                    format: float
                    description: Sum of Order Item shipping fee.
                    example: 23.43
                  shippingServiceCostItems:
                    type: number
                    format: float
                    description: Sum of Order Item shipping service cost.
                    example: 43.43
                  voucherTotal:
                    type: number
                    format: float
                    description: Sum of Order Item vouchers.
                    example: 150.3
                  grandTotal:
                    type: number
                    format: float
                    description: Total price
                    example: 250.23
                  unitPrice:
                    type: number
                    format: float
                    description: Order price
                    example: 2499
                  taxAmount:
                    type: number
                    format: float
                    description: Tax amount
                    example: 433.71
                  paidPrice:
                    type: number
                    format: float
                    description: Paid price
                    example: 2499
                  walletCredits:
                    type: number
                    format: float
                    description: >-
                      Indicated that the customer used wallet as payment aside
                      from possible voucher
                    example: 0
                  storeCredits:
                    type: number
                    format: float
                    description: Store credits
                    example: 0
                  shippingVoucherAmount:
                    type: number
                    format: float
                    description: Shipping voucher amount
                    example: 0
                  transactionSummary:
                    type: array
                    description: Calculated transaction data for Order
                    items:
                      type: object
                      properties:
                        transactionTypeId:
                          type: integer
                          description: Transaction Type Id
                          example: 22
                        description:
                          type: string
                          description: >-
                            The description is taken from the TRE group or from
                            the description of the transaction type.
                          example: Commission
                        amount:
                          type: number
                          format: float
                          description: Amount
                          example: 54.43
                        currency:
                          type: string
                          description: Currency
                          example: USD
                      required:
                        - transactionTypeId
                        - description
                        - amount
                        - currency
                  installmentFee:
                    type: number
                    format: float
                    description: Installment fee
                    example: 20.5
                  numberOfInstallments:
                    type: integer
                    description: Number of installments
                    example: 3
                  shippingFeeSstSum:
                    type: number
                    format: float
                    description: Sum of shipping fee SST tax
                    example: 10.5
                required:
                  - orderId
                  - currency
                  - shippingFeeItems
                  - shippingServiceCostItems
                  - voucherTotal
                  - grandTotal
                  - unitPrice
                  - taxAmount
                  - paidPrice
                  - walletCredits
                  - storeCredits
                  - shippingVoucherAmount
                  - transactionSummary
                  - installmentFee
                  - numberOfInstallments
                  - shippingFeeSstSum
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/export-document:
    post:
      tags:
        - Orders
      description: "Creates a task to export an order document in PDF or HTML format.\nAvailable options:\n- allDocuments\n- invoice\n- exportInvoice\n- shippingLabel\n- shippingParcel\n- carrierManifest\n- serialNumber\n- picklist\n- checklist\n- creditNote\n- manifest\n\n| Status                               \t| Print Actions                                                                             \t|\n|--------------------------------------\t|-------------------------------------------------------------------------------------------\t|\n| pending                              \t| allDocuments                                                                          \t    |\n|                                   \t| checklist                                                                           \t        |\n|                                      \t| picklist                                                                                   \t|\n|                                      \t| invoice                                                                                   \t|\n|                                      \t| shippingLabel / shippingParcel * (depending whether shipping_parcel_generation is enabled)  \t|\n|                                      \t| exportInvoice                                                                                 |\n| ready to ship                      \t| allDocuments                                                                           \t    |\n|                                   \t| checklist                                                                                  \t|\n|                                      \t| picklist                                                                                   \t|\n|                                      \t| invoice                                                                                   \t|\n|                                      \t| shippingLabel / shippingParcel * (depending whether shipping_parcel_generation is enabled)  \t|\n|                                      \t| exportInvoice                                                                              \t|\n|                                      \t| manifest (if manifest-feature is enabled)                                        \t            |\n|                                      \t| carrierManifest (if manifest-feature is enabled)                                              |\n| shipped                           \t| allDocuments                                                            \t                    |\n|                                    \t| checklist                                                               \t                    |\n|                                      \t| picklist                                                                                      |\n|                                      \t| invoice                                                                                       |\n|                                      \t| exportInvoice                                                                                 |\n|                                      \t| shippingLabel / shippingParcel * (depending whether  shipping_parcel_generation is enabled) \t|\n| delivered                            \t| allDocuments                                                                                 \t|\n|                                   \t| checklist                                                                                 \t|\n|                                      \t| picklist                                                                                   \t|\n|                                      \t| shippingLabel                                                                                \t|\n|                                      \t| invoice                                                                                   \t|\n|                                      \t| exportInvoice                                                                                \t|\n| cancelled                            \t| allDocuments                                                                                  |\n|                                   \t| checklist                                                                                     |\n|                                      \t| picklist                                                                                   \t|\n|                                      \t| invoice                                                                                   \t|\n| failed delivery                      \t| allDocuments                                                                                  |\n|                                   \t| checklist                                                                                     |\n|                                      \t| picklist                                                                                   \t|\n|                                      \t| invoice                                                                                   \t|\n|                                      \t| exportInvoice                                                                                \t|\n| return* (any sub-states for returns) \t| allDocuments                                                                             \t    |\n|                                       | checklist                                                                             \t    |\n|                                      \t| picklist                                                                                   \t|\n|                                      \t| invoice                                                                                   \t|  \t\n|                                      \t| creditNote                                                                                    |   \n|                                      \t|             * if manifest-feature is enabled                                                  |\n|                                      \t|             * only when a return manifest has been created                         \t        |\n|                                      \t|             * lvg tax applied                                                  \t            |\n| pending awaiting payment             \t| checklist                                                                           \t        | \n\nAvailable formats: PDF, HTML\n\nCredit Note Document is available only in Returned Status for Manifested and LVG Tax applied Orders.\n"
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - documentType
              properties:
                orderIds:
                  type: array
                  description: Order ids. Either orderIds or orderItemIds must be set.
                  items:
                    type: integer
                  example:
                    - 123456
                    - 654321
                orderItemIds:
                  type: array
                  description: Order item ids. Either orderIds or orderItemIds must be set.
                  items:
                    type: integer
                  example:
                    - 1234
                    - 1235
                documentType:
                  type: string
                  description: >-
                    Document type - see available options, multiple can be used
                    at once (comma separated)
                  enum:
                    - all_documents
                    - invoice
                    - exportInvoice
                    - shippingLabel
                    - shippingParcel
                    - carrierManifest
                    - serialNumber
                    - picklist
                    - checklist
                    - creditNote
                    - manifest
                  example: invoice,shippingLabel
                format:
                  type: string
                  description: Requested document format (extension)
                  default: pdf
                  example: pdf
                  enum:
                    - pdf
                    - html
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    example: 524
                    type: integer
                    description: >
                      ID of user who triggered export. When you request exports
                      you can see also exports

                      which were created by another users from the same Seller
                  sellerId:
                    example: 4089
                    type: integer
                  status:
                    type: string
                    enum:
                      - Finished
                      - Processing
                      - Error
                      - Queued
                      - Expired
                  isDeleted:
                    type: boolean
                    description: >
                      Export files has limited time of storage and after it they
                      are deleted. This

                      flag indicates that physical was already deleted and if
                      you need to download

                      this export then you will need to generate it again.
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  expiresAt:
                    type: string
                    format: date-time
                    description: datetime when this export file scheduled for deletion
                  requestedFormats:
                    type: array
                    description: formats which were requested for export
                    items:
                      type: string
                      enum:
                        - csv
                        - xlsx
                  downloadLinks:
                    type: array
                    items:
                      type: string
                    description: >
                      list of relative links to download export files. For some
                      types of

                      export files are generated in several formats, therefore
                      you may

                      have several links to download files.
                  exportContent:
                    example: Products - Shoes
                    type: string
                    description: >
                      short description of export file to distinguish between
                      different export items
                  uuid:
                    example: a8fd052d-f29a-471a-b92b-52bb0d2c0be4
                    type: string
                    description: >
                      Unique identifier of file. You can use it to download
                      file.
                  note:
                    type: string
                    description: >
                      Note on export item. It can be used to store some
                      additional information eg. failure reason
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/import:
    post:
      summary: Import files for a bulk action
      description: >-
        The import file is being processed in the background. This means that
        your request to trigger import API will return to you the data about the
        scheduled job. Depending on the size of the imported file import can
        take from milliseconds up to some minutes.
      security:
        - oAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: Type of Import
                  enum:
                    - ready-to-ship
                    - create-forward-manifest
                    - update-manifest-status
                    - to-shipped
                    - to-delivered
                    - invoice-access-key
                    - to-returned
                    - to-received
                    - to-return-approved
                    - to-return-rejected
                file1:
                  type: string
                  format: binary
              required:
                - type
      responses:
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: >-
                      <b>File has been successfully uploaded.</b> Please be
                      patient while data is being processed.
                  errorMessages:
                    type: array
                    items:
                      type: string
                      example: >-
                        There is no data in uploaded file or all records were
                        invalid and have been ignored.
                  warningMessages:
                    type: array
                    items:
                      type: string
                      example: 'Unknown field: Country'
                  feedId:
                    type: integer
                    example: 7
                  feedUuid:
                    type: string
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Orders
  /v2/payment-methods:
    get:
      tags:
        - Payment Method
      description: >
        Returns the list of Payment Methods from settings and previously created
        orders.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: BankTransfer
                    displayName:
                      type: string
                      example: Bank Transfer
        '401':
          description: Unauthorized error
  /v2/products/{productId}/consignment-stocks:
    get:
      summary: Get consignment stock information by product
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Numeric Id of Product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Identifier
                    type: integer
                    readOnly: true
                  productId:
                    description: Product identifier
                    type: integer
                    readOnly: true
                  received:
                    type: integer
                    readOnly: true
                  quarantined:
                    type: integer
                    readOnly: true
                  defective:
                    type: integer
                    readOnly: true
                  canceled:
                    type: integer
                    readOnly: true
                  returned:
                    type: integer
                    readOnly: true
                  failed:
                    type: integer
                    readOnly: true
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product-sets:
    get:
      summary: Get list of ProductSets
      security:
        - oAuth: []
      description: >
        For given search and filtering criteria return list of ProductSets.
        Maximum limit is 100 (even if a bigger value is provided).


        Note: The search keyword is used only in 'starts with' queries and only
        if its length is greater or equals 3.


        Please, don't use this endpoint for repetitive searches for same
        criteria. Please, use the cache mechanism  on your side to store the
        results and avoid unnecessary requests to API or store permanently IDs
        of products and product sets on your side.


        If you need to get information about certain product set, please use the
        endpoints  `/v2/product-set/parent-sku/{parentSku}`,
        `/v2/product-set/config-sku/{configSku}`.  If you happen to use search
        by keywords anyway, please store  information on your end and  not send
        repeated request.
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          required: false
          name: status
          description: >
            Sections of product. 


            "all" returns all product sets without filtering.


            "active" will return product sets in active categories, with active
            brand, with at least one product  with stock, with price, synced
            with shop system, with at least one not-deleted image, with at least
            one product with "active" status.


            "inactive-all" - will return product sets where all products has
            status "inactive".


            "deleted-all" - will return product sets where all products has
            status "deleted".


            "image-missing" - will return product sets without images or with
            all images deleted.


            "pending" - return product sets with at least one active product
            with QC status "pending" (product sets which are waiting to be
            Quality Controlled).


            "rejected" - return product sets with at least one active product
            with QC status "rejected" (product sets which are rejected during
            Quality Controlled). You need to update products and fix issues
            found during Quality Control.


            "disapproved" - same as "rejected" but without Not-Authorized
            products.


            "sold-out" - will return product sets with 0 stock (product sets
            with all products have 0 stock).


            "not-authorized" - will return not authorized product sets.
          schema:
            type: string
            enum:
              - all
              - active
              - inactive-all
              - deleted-all
              - image-missing
              - pending
              - rejected
              - disapproved
              - sold-out
              - not-authorized
        - in: query
          required: false
          name: keyword
          description: >
            Search by product name / product sku / seller sku / parent sku. You
            can either use it as a single

            parameter (?keyword=searchTerm) or multiple one
            (?keyword[]=searchTerm1&keyword[]=searchTerm2). You 

            can specify up to 5 keywords at once.
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: createDateStart
          description: >
            Filter by creation date of product set. It should be less than
            createDateEnd. Date should be given in Y-m-d

            format, for example 2021-01-20.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: createDateEnd
          description: >
            Filter by date of creation of product set. It should be greater than
            createDateStart. Date should be given in Y-m-d

            format, for example 2021-02-14.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: updateDateStart
          description: >
            Filter by update date of product set. It should be less than
            updateDateEnd. Date should be given in Y-m-d

            format, for example 2021-01-20.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: updateDateEnd
          description: >
            Filter by update date of product set. It should be greater than
            updateDateStart. Date should be given in Y-m-d

            format, for example 2021-02-14.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: brandIds[]
          description: Search by brand IDs
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: tags[]
          description: Search by tag ids or names
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: visibility
          description: Search by visibility status
          schema:
            type: string
            enum:
              - Syncing
        - in: query
          required: false
          name: inStock
          description: If it sets true, the API will only return products that have stock.
          schema:
            type: boolean
        - in: query
          required: false
          name: reserved
          description: >-
            If it sets true, the API will only return products that have
            reserve.
          schema:
            type: boolean
        - in: query
          required: false
          name: categoryIds[]
          description: Search by category ids
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: onlyWithTags
          description: If it sets true, the API will only return products that have tags.
          schema:
            type: boolean
        - in: query
          required: false
          name: parentSku
          description: Search by parent sku
          schema:
            type: string
        - in: query
          required: false
          name: productSetUuids[]
          description: Search by product set uuids
          schema:
            type: array
            items:
              type: string
        - name: productSetIds[]
          in: query
          description: List of ProductSet IDs
          required: false
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: group
          description: Search by product group
          schema:
            type: string
        - name: orderBy
          in: query
          required: false
          description: >
            When "orderBy" is set, you should also provide "orderDirection"
            parameter.
          schema:
            type: string
            example: createdAt
            enum:
              - createdAt
        - name: orderDirection
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
            example: ASC
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 7865
                        uuid:
                          type: string
                          example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
                        srcId:
                          description: >-
                            ID of image in Shop system. If empty means that
                            image was not yet syncronized with Shop and is not
                            visible to end customers.
                          example: '94345'
                          type: string
                          nullable: true
                        name:
                          type: string
                          example: Block Shell Jacket
                        parentSku:
                          type: string
                          description: >-
                            SKU of product, which acts as "main" one for
                            ProductSet. Using this value you can add new
                            products to ProductSet using XLS files. If feature
                            of "parentSku" is disabled, then you should use SKU
                            of first product in ProductSet when you work with
                            XLS import files.
                          example: NHGB93523-12
                          nullable: true
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        description:
                          type: string
                          nullable: true
                          description: >-
                            Description which will be visible by end customers.
                            Depending on settings of your seller and general
                            configuration, there could be limit of minimum and
                            maximum length of the description. Also, depending
                            on configuration, description should be plain text
                            or may contain HTML markup.
                          example: >-
                            Experience the ultimate expression of functionality
                            at BrandName with the Women's Block Shell Jacket.
                            Our model is wearing size *. She usually wears a
                            size 8 and is 177cm tall.
                        brandId:
                          description: >-
                            Please, note that not every brand can be used
                            without prior aproval. Also, there are some
                            brand-specific limitation for variations (for
                            example, for brand A it is possible to use only
                            sizes 34, 35, 36, 37, 38, 39, 40, but size 35.5 or
                            33 will lead to validation error).
                          type: integer
                          example: 78
                        primaryCategoryId:
                          description: >-
                            Please, note that there could limitation for certain
                            sellers in which categories seller allowed to create
                            ProductSets. Also, in cource of time categories can
                            be marked as inactive (for example when category A
                            is splitted to categories B and C).
                          type: integer
                          example: 309
                        attributeSetId:
                          description: >-
                            Different categories has different AttributeSets. It
                            means that for Shoes there is one set of attributes
                            applied and for Hats another one. AttributeSet is
                            defined by primary category of product set. In very
                            rare cases attribute set of category can be changed
                            to another one. In this case in order to
                            successfully save ProductSet you will need to pass
                            all required attributes for new AttributeSet. This
                            value represent AttributeSet which was set for
                            primary category of ProductSet during last save.
                          type: integer
                          example: 2
                        sellerId:
                          type: integer
                          example: 5623
                        categories:
                          description: >-
                            ProductSet can be listed in multiple additional
                            categories. There is a seller-specific limit
                            regarding maximum count of additional categories
                          type: array
                          example:
                            - 421
                            - 567
                          items:
                            type: integer
                        attributes:
                          type: object
                          description: >-
                            Array of attributes' values. Key is attribute ID and
                            value depends on type of attribute. It can be one
                            of: string (for "free text attributes" like
                            "Warranty duration"), integer (for attributes with
                            list of options, for example "Material" can have
                            some set of fixed options), array of integers (for
                            attributes with multiple choise of predefined
                            options), null (when you didn't provide value for
                            optional attribute), array of strings for attributes
                            which allow multiple values with free text.
                          example:
                            '421': string value
                            '533':
                              - 4
                              - 5
                            '567': 123
                            '721':
                              - string1
                              - string2
                            '854': null
                        sizeSystem:
                          description: >
                            Nullable field with same value as attribute that
                            represents "size system". Please, read description
                            of

                            "GET /v2/brands/{brandId}/attributes" for more
                            detailed explanation. This field will be removed in
                            future

                            versions of this endpoint and "size system" will be
                            passed only in array of attributes.
                          type: integer
                          example: 5
                        browseNodes:
                          type: array
                          example:
                            - 421
                            - 567
                          items:
                            type: integer
                        sellerSku:
                          type: string
                          example: 68040427550-1
                          description: >-
                            SKU from seller's side. Should be unique across
                            products of seller.
                        status:
                          type: string
                          nullable: false
                          enum:
                            - active
                            - inactive
                            - deleted
                        sin:
                          description: |
                            if not null indicates that product set is Hybrid
                          type: string
                          example: KMPWJ5
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/product-set:
    post:
      summary: Create ProductSet
      security:
        - oAuth: []
      description: >
        Use this endpoint to create a product set and at the same time a
        product.<br> When creating a product set, you must send some attributes
        about the product. Attributes can be grouped into 2 types: system and
        non-system (you can read more about them in the 'get Category
        attributes' endpoint). Here system attributes are passed directly in the
        request body root using their feed name as field, while the non-system
        ones are passed in the "attributes" field using id of the attribute as
        the field name.<br> "Variation" is a special attribute - if category has
        an attribute with "feedName": "Variation" then it must be added as a
        system attribute (variation will never be added to the attributes field)
        based on its input type.


        Along with creation of product set there will be one product (size,
        variation) created. For this reason you need to provide price, seller
        SKU, status, variation and product identifier (EAN) in the call.  In
        future versions of API this behaviour will be changed and there will be
        possibility to  create product set separately from creating products in
        it.


        Please, note that when "automatic nomenclature" is enabled for category
        where you want to create product set, then it will be (re)calculated
        during save of product set. For example, if "automatic nomenclature" is
        enabled and value of its formula is "attr.Brand attr.Category
        attr.Color" and you send as name value "my new name", then it will be
        overwritten with "Moretti T-Shirt Blue".

            
        Please note that this endpoint ignores non-existent attributes. It is
        user's responsibility to check the created product set using <em>GET
        /v2/product-set/{productSetId}</em>.


        The response is a combination of the product set and variation created.


        <strong>Warning</strong>: It is impossible to create a product with
        status deleted.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - sellerSku
                - brandId
                - primaryCategoryId
                - attributes
              properties:
                name:
                  type: string
                  example: Block Shell Jacket
                  description: Name of a productSet. Doesn't have to be unique.
                price:
                  type: number
                  format: float
                  minimum: 0
                  exclusiveMinimum: true
                  description: Price of a product, has to be higher than 0.
                  example: 100.1
                status:
                  type: string
                  description: >-
                    Status of first product which will be created in product
                    set. Can be active or inactive.
                  enum:
                    - active
                    - inactive
                  example: active
                sellerSku:
                  type: string
                  description: >-
                    This value has to be unique across products of seller. It is
                    string identifier of your product. Usually it is bar code,
                    your internal identifier of SKU or string like
                    "NameOfModel-Size". Together with  creation of product set
                    there will be first product created in this product set with
                    given sellerSku.
                  example: 68040427550-1
                parentSku:
                  type: string
                  example: '68040427550'
                  description: >-
                    Parent SKU is text identifier for your product set used in
                    exports and imports. When you want to add new size to
                    existing product set through importing file, you will
                    provide Parent SKU for that new size and  it will be added
                    to product set with given Parent SKU. You may omit providing
                    Parent SKU, in this  case it will be autogenerated: we will
                    take Seller SKU of first product within product set and it
                    will be used as Parent SKU.
                description:
                  type: string
                  description: >-
                    Description which will be visible by end customers.
                    Depending on settings of your seller and general
                    configuration, there could be limit of minimum and maximum
                    length of the description. Also, depending on configuration,
                    description should be plain text or may contain HTML markup.


                    Description may be required or not required depending on
                    configuration of attribute with name "Description" that you
                    can get by getting attributes for desired category. If
                    description is not mandatory but you send it anyway, then it
                    will be validated according to attribute validation rules
                    (for example, there can be minimum length restriction
                    applied).
                  example: >-
                    Experience the ultimate expression of functionality at
                    BrandName with the Women's Block Shell Jacket. Our model is
                    wearing size *. She usually wears a size 8 and is 177cm
                    tall.
                brandId:
                  type: integer
                  description: >-
                    Please, note that not every brand can be used without prior
                    approval. Also, there are some brand-specific limitation for
                    variations (for example, for brand A it is possible to use
                    only sizes 34, 35, 36, 37, 38, 39, 40, but size 35.5 or 33
                    will lead to validation error).
                  example: 78
                primaryCategoryId:
                  type: integer
                  description: >-
                    Please, note that there could limitation for certain sellers
                    in which categories seller allowed to create ProductSets.
                    Also, in course of time categories can be marked as inactive
                    (for example when category A is splitted to categories B and
                    C).
                  example: 309
                categories:
                  type: array
                  items:
                    type: integer
                  description: >-
                    ProductSet can be listed in multiple additional categories.
                    There is a seller-specific limit regarding maximum count of
                    additional categories. Those categories are within one
                    branch of the category tree, where the primary category is
                    located.
                  example:
                    - 421
                    - 567
                attributes:
                  type: object
                  description: >-
                    Array of attributes' values. Key is attribute ID and value
                    depends on type of attribute. It can be one of: string (for
                    "free text attributes" like "Warranty duration"), integer
                    (for attributes with list of options, for example "Material"
                    can have some set of fixed options), array of integers (for
                    attributes with multiple choice of predefined options), null
                    (when you didn't provide value for optional attribute),
                    array of strings for attributes which allow multiple values
                    with free text.
                  example:
                    '421': string value
                    '533':
                      - 4
                      - 5
                    '567': 123
                    '721':
                      - string1
                      - string2
                    '854': null
                sizeSystem:
                  description: >
                    Nullable field with same value as attribute that represents
                    "size system". Please, read description of

                    "GET /v2/brands/{brandId}/attributes" for more detailed
                    explanation. This field will be removed in future

                    versions of this endpoint and "size system" will be passed
                    only in array of attributes.
                  type: integer
                  example: 5
                browseNodes:
                  type: array
                  items:
                    type: integer
                  example:
                    - 421
                    - 567
                  default: []
                  description: >-
                    -> Any other category of the category tree, where you think
                    the product shall fit also besides main 'categories', so it
                    gets listed in the catalog under those categories as well.
                variation:
                  type: string
                  description: >
                    When the category has this variation attribute as a dropdown
                    choice, one option must be entered here.  Otherwise it can
                    be user generated or even omitted. In some categories
                    ("shoes" as example) you can  create products only with
                    given options for variation like "36, 38, 40" or "S, M, L,
                    XL". In other categories ("hand made" for example) variation
                    can be free text: continuing with "hand made" it can be like
                    product set "hand made leather bag" with products/variation
                    "black", "brown" and "white" in this product set.

                    **Please, note that value is string here.** That means
                    instead of providing ID of option (like 5342), you need to
                    provide string value for size (like "XL" or "42"). Reason
                    for this is that in some  categories variation can be
                    selected from list of predefined options, but in other
                    categories it is free text as mentioned in previous
                    paragraph.
                  nullable: true
                  example: Talle único
                shipmentTypeId:
                  type: integer
                  description: >-
                    The type of the product shipment. Can be one of 3 types:
                    Cross Docking, Drop Shipping and  Fulfillment
                    by/Consignment. Also 2 types can be used together: Default
                    Drop Shipping allow Cross docking and  Default Cross Docking
                    allow Drop Shipping. Available options depend on the
                    configuration and enabled  shipping models.
                  nullable: true
                  example: 1
                productIdentifier:
                  type: string
                  description: >
                    EAN/GTIN or BarCode of product. Please, note that even if
                    you have it with only numbers, parameter type is string,
                    because we support different types of them and in some cases
                    they are not numeric. Parameter is  optional, when not
                    provided first product withing product set will be created
                    with empty product identifier. At any time in future you can
                    update/change it.
                  nullable: true
                  example: '46023216444'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 7865
                  uuid:
                    type: string
                    example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
                  srcId:
                    description: >-
                      ID of image in Shop system. If empty means that image was
                      not yet syncronized with Shop and is not visible to end
                      customers.
                    example: '94345'
                    type: string
                    nullable: true
                  name:
                    type: string
                    example: Block Shell Jacket
                  parentSku:
                    type: string
                    description: >-
                      SKU of product, which acts as "main" one for ProductSet.
                      Using this value you can add new products to ProductSet
                      using XLS files. If feature of "parentSku" is disabled,
                      then you should use SKU of first product in ProductSet
                      when you work with XLS import files.
                    example: NHGB93523-12
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  description:
                    type: string
                    nullable: true
                    description: >-
                      Description which will be visible by end customers.
                      Depending on settings of your seller and general
                      configuration, there could be limit of minimum and maximum
                      length of the description. Also, depending on
                      configuration, description should be plain text or may
                      contain HTML markup.
                    example: >-
                      Experience the ultimate expression of functionality at
                      BrandName with the Women's Block Shell Jacket. Our model
                      is wearing size *. She usually wears a size 8 and is 177cm
                      tall.
                  brandId:
                    description: >-
                      Please, note that not every brand can be used without
                      prior aproval. Also, there are some brand-specific
                      limitation for variations (for example, for brand A it is
                      possible to use only sizes 34, 35, 36, 37, 38, 39, 40, but
                      size 35.5 or 33 will lead to validation error).
                    type: integer
                    example: 78
                  primaryCategoryId:
                    description: >-
                      Please, note that there could limitation for certain
                      sellers in which categories seller allowed to create
                      ProductSets. Also, in cource of time categories can be
                      marked as inactive (for example when category A is
                      splitted to categories B and C).
                    type: integer
                    example: 309
                  attributeSetId:
                    description: >-
                      Different categories has different AttributeSets. It means
                      that for Shoes there is one set of attributes applied and
                      for Hats another one. AttributeSet is defined by primary
                      category of product set. In very rare cases attribute set
                      of category can be changed to another one. In this case in
                      order to successfully save ProductSet you will need to
                      pass all required attributes for new AttributeSet. This
                      value represent AttributeSet which was set for primary
                      category of ProductSet during last save.
                    type: integer
                    example: 2
                  sellerId:
                    type: integer
                    example: 5623
                  categories:
                    description: >-
                      ProductSet can be listed in multiple additional
                      categories. There is a seller-specific limit regarding
                      maximum count of additional categories
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
                  attributes:
                    type: object
                    description: >-
                      Array of attributes' values. Key is attribute ID and value
                      depends on type of attribute. It can be one of: string
                      (for "free text attributes" like "Warranty duration"),
                      integer (for attributes with list of options, for example
                      "Material" can have some set of fixed options), array of
                      integers (for attributes with multiple choise of
                      predefined options), null (when you didn't provide value
                      for optional attribute), array of strings for attributes
                      which allow multiple values with free text.
                    example:
                      '421': string value
                      '533':
                        - 4
                        - 5
                      '567': 123
                      '721':
                        - string1
                        - string2
                      '854': null
                  sizeSystem:
                    description: >
                      Nullable field with same value as attribute that
                      represents "size system". Please, read description of

                      "GET /v2/brands/{brandId}/attributes" for more detailed
                      explanation. This field will be removed in future

                      versions of this endpoint and "size system" will be passed
                      only in array of attributes.
                    type: integer
                    example: 5
                  browseNodes:
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
                  sellerSku:
                    type: string
                    example: 68040427550-1
                    description: >-
                      SKU from seller's side. Should be unique across products
                      of seller.
                  status:
                    type: string
                    nullable: false
                    enum:
                      - active
                      - inactive
                      - deleted
                  sin:
                    description: |
                      if not null indicates that product set is Hybrid
                    type: string
                    example: KMPWJ5
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/product-sets/sample-payload/{categoryId}:
    get:
      tags:
        - ProductSet
      summary: Sample request to create a ProductSet
      security:
        - oAuth: []
      description: >
        Sample request to create a ProductSet. This will not pass validation,
        but it will provide some guiding alongside the 'Category Attributes'
        endpoint. If a category does not exist a 422 error code will triggered.
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
          description: Numeric Id of Category
        - name: showFull
          in: query
          required: false
          schema:
            type: integer
            example: 0
          allowEmptyValue: true
          description: >
            When set to 0 only the mandatory attributes will be shown. If not
            set at all it defaults to 0, only the value of 1 will display all
            the attributes.
        - name: hideComments
          in: query
          required: false
          schema:
            type: integer
            example: 1
          allowEmptyValue: true
          description: When set to 1 the comments about the attributes are not displayed.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  primaryCategoryId:
                    type: integer
                    example: 2369
                  __comment_primaryCategoryId:
                    type: string
                    example: Id of primary category in our database
                  name:
                    type: string
                    example: Nikon Wide Angle Camera 10 MP black
                  __comment_name:
                    type: string
                    example: Some descriptive product name
                  brandId:
                    type: integer
                    example: 1
                  __comment_brandId:
                    type: string
                    example: Id of a brand in our database
                  price:
                    type: number
                    format: float
                    example: 1.99
                  __comment_price:
                    type: string
                    example: Some float value
                  description:
                    type: string
                    example: >-
                      It's been the king of football games for years now. FIFA
                      Soccer 12 delivers an authentic Match Day experience,
                      faster and easier navigation, and over 500 officially
                      licensed clubs.  FIFA Soccer 12 brings to the pitch the
                      game-changing new Player Impact En
                  __comment_description:
                    type: string
                    example: Some descriptive text
                  sellerSku:
                    type: string
                    example: XMPL1
                  __comment_sellerSku:
                    type: string
                    example: Unique text field in our database
                  variation:
                    type: string
                    example: M
                  __comment_variation:
                    type: string
                    nullable: true
                    example: >-
                      Depending on input type - value from our database or a
                      user-defined value. Rarely can be null
                  attributes:
                    type: object
                    properties:
                      '74':
                        type: integer
                        example: 307
                      '131':
                        type: string
                        example: >-
                          Best experience ever - super fast and easy navigation
                          - better control
                      __comment_74:
                        type: string
                        example: >-
                          Id of attribute (PackageType) with id of attribute
                          option (eg Parcel)
                      __comment_131:
                        type: string
                        example: Id of attribute (ShortDescription) with some text area
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/product-set/{productSetId}:
    get:
      summary: Get ProductSet entity by Id
      security:
        - oAuth: []
      description: >
        Return common information about single ProductSet. Products in
        SellerCenter are grouped by ProductSets. ProductSet contains all common
        information: brand, category, description, etc. Products represent
        sizes/variations/sellable units/SKU. For example, when you want to sell
        some shoe with size 36, 38, 40, 42, then ProductSet will contain all
        basic information common for all sizes like: brand, material,
        description, country of origin, etc. And each product will represent one
        size of given shoe. In this example there will 4 products one for each
        size.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 7865
                  uuid:
                    type: string
                    example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
                  srcId:
                    description: >-
                      ID of image in Shop system. If empty means that image was
                      not yet syncronized with Shop and is not visible to end
                      customers.
                    example: '94345'
                    type: string
                    nullable: true
                  name:
                    type: string
                    example: Block Shell Jacket
                  parentSku:
                    type: string
                    description: >-
                      SKU of product, which acts as "main" one for ProductSet.
                      Using this value you can add new products to ProductSet
                      using XLS files. If feature of "parentSku" is disabled,
                      then you should use SKU of first product in ProductSet
                      when you work with XLS import files.
                    example: NHGB93523-12
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  description:
                    type: string
                    nullable: true
                    description: >-
                      Description which will be visible by end customers.
                      Depending on settings of your seller and general
                      configuration, there could be limit of minimum and maximum
                      length of the description. Also, depending on
                      configuration, description should be plain text or may
                      contain HTML markup.
                    example: >-
                      Experience the ultimate expression of functionality at
                      BrandName with the Women's Block Shell Jacket. Our model
                      is wearing size *. She usually wears a size 8 and is 177cm
                      tall.
                  brandId:
                    description: >-
                      Please, note that not every brand can be used without
                      prior aproval. Also, there are some brand-specific
                      limitation for variations (for example, for brand A it is
                      possible to use only sizes 34, 35, 36, 37, 38, 39, 40, but
                      size 35.5 or 33 will lead to validation error).
                    type: integer
                    example: 78
                  primaryCategoryId:
                    description: >-
                      Please, note that there could limitation for certain
                      sellers in which categories seller allowed to create
                      ProductSets. Also, in cource of time categories can be
                      marked as inactive (for example when category A is
                      splitted to categories B and C).
                    type: integer
                    example: 309
                  attributeSetId:
                    description: >-
                      Different categories has different AttributeSets. It means
                      that for Shoes there is one set of attributes applied and
                      for Hats another one. AttributeSet is defined by primary
                      category of product set. In very rare cases attribute set
                      of category can be changed to another one. In this case in
                      order to successfully save ProductSet you will need to
                      pass all required attributes for new AttributeSet. This
                      value represent AttributeSet which was set for primary
                      category of ProductSet during last save.
                    type: integer
                    example: 2
                  sellerId:
                    type: integer
                    example: 5623
                  categories:
                    description: >-
                      ProductSet can be listed in multiple additional
                      categories. There is a seller-specific limit regarding
                      maximum count of additional categories
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
                  attributes:
                    type: object
                    description: >-
                      Array of attributes' values. Key is attribute ID and value
                      depends on type of attribute. It can be one of: string
                      (for "free text attributes" like "Warranty duration"),
                      integer (for attributes with list of options, for example
                      "Material" can have some set of fixed options), array of
                      integers (for attributes with multiple choise of
                      predefined options), null (when you didn't provide value
                      for optional attribute), array of strings for attributes
                      which allow multiple values with free text.
                    example:
                      '421': string value
                      '533':
                        - 4
                        - 5
                      '567': 123
                      '721':
                        - string1
                        - string2
                      '854': null
                  sizeSystem:
                    description: >
                      Nullable field with same value as attribute that
                      represents "size system". Please, read description of

                      "GET /v2/brands/{brandId}/attributes" for more detailed
                      explanation. This field will be removed in future

                      versions of this endpoint and "size system" will be passed
                      only in array of attributes.
                    type: integer
                    example: 5
                  browseNodes:
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
                  sellerSku:
                    type: string
                    example: 68040427550-1
                    description: >-
                      SKU from seller's side. Should be unique across products
                      of seller.
                  status:
                    type: string
                    nullable: false
                    enum:
                      - active
                      - inactive
                      - deleted
                  sin:
                    description: |
                      if not null indicates that product set is Hybrid
                    type: string
                    example: KMPWJ5
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
    put:
      summary: Update Product Set level attributes.
      security:
        - oAuth: []
      description: >
        Update a product set. You can not update product (variation) level
        attributes (eg. sellerSku, status, variation, price) here. The endpoint
        returns the product set after the update operation.


        <strong>Important:</strong> If all products (variations) in the product
        set are deleted, the endpoint return an error. Please use 
        <code>/v2/product-set/{productSetId}/products/{productId}/status</code>
        to un-deleted a product before re-trying this endpoint.


        <strong><em>Note:</em></strong> If you try to change attributes that are
        unchangeable or you do not have permission to change, they will be
        discarded.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Block Shell Jacket
                description:
                  type: string
                  description: >-
                    Description which will be visible by end customers.
                    Depending on settings of your seller and general
                    configuration, there could be limit of minimum and maximum
                    length of the description. Also, depending on configuration,
                    description should be plain text or may contain HTML markup.
                  example: >-
                    Experience the ultimate expression of functionality at
                    BrandName with the Women's Block Shell Jacket. Our model is
                    wearing size *. She usually wears a size 8 and is 177cm
                    tall.
                parentSku:
                  type: string
                  example: '68040427550'
                  description: >-
                    Parent SKU is text identifier for your product set used in
                    exports and imports. When you want to add new size to
                    existing product set through importing file, you will
                    provide Parent SKU for that new size and  it will be added
                    to product set with given Parent SKU. You may omit providing
                    Parent SKU, in this  case it will be autogenerated: we will
                    take Seller SKU of first product within product set and it
                    will be used as Parent SKU.
                brandId:
                  type: integer
                  description: >-
                    Please, note that not every brand can be used without prior
                    approval. Also, there are some brand-specific limitation for
                    variations (for example, for brand A it is possible to use
                    only sizes 34, 35, 36, 37, 38, 39, 40, but size 35.5 or 33
                    will lead to validation error).
                  example: 78
                primaryCategoryId:
                  type: integer
                  description: >-
                    Please, note that there could limitation for certain sellers
                    in which categories seller allowed to create ProductSets.
                    Also, in cource of time categories can be marked as inactive
                    (for example when category A is splitted to categories B and
                    C).
                  example: 309
                categories:
                  type: array
                  items:
                    type: integer
                  description: >-
                    ProductSet can be listed in multiple additional categories.
                    There is a seller-specific limit regarding maximum count of
                    additional categories. Those categories are within one
                    branch of the category tree, where the primary category is
                    located.
                  example:
                    - 421
                    - 567
                attributes:
                  type: object
                  description: >-
                    Array of attributes' values. Key is attribute ID and value
                    depends on type of attribute. It can be one of: string (for
                    "free text attributes" like "Warranty duration"), integer
                    (for attributes with list of options, for example "Material"
                    can have some set of fixed options), array of integers (for
                    attributes with multiple choise of predefined options), null
                    (when you didn't provide value for optional attribute),
                    array of strings for attributes which allow multiple values
                    with free text.
                  example:
                    '421': string value
                    '533':
                      - 4
                      - 5
                    '567': 123
                    '721':
                      - string1
                      - string2
                    '854': null
                sizeSystem:
                  description: >
                    Represents the id of the attribute option that can represent
                    for ex a country (AU). The values depend on the

                    attribute mappings for sizeSystem. When creating the
                    productSet this field can be null.
                  type: integer
                  example: 5
                browseNodes:
                  type: array
                  items:
                    type: integer
                  example:
                    - 421
                    - 567
                  default: []
                  description: >-
                    -> Any other category of the category tree, where you think
                    the product shall fit also besides main 'categories', so it
                    gets listed in the catalog under those categories as well.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 7865
                  uuid:
                    type: string
                    example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
                  srcId:
                    description: >-
                      ID of image in Shop system. If empty means that image was
                      not yet syncronized with Shop and is not visible to end
                      customers.
                    example: '94345'
                    type: string
                    nullable: true
                  name:
                    type: string
                    example: Block Shell Jacket
                  parentSku:
                    type: string
                    description: >-
                      SKU of product, which acts as "main" one for ProductSet.
                      Using this value you can add new products to ProductSet
                      using XLS files. If feature of "parentSku" is disabled,
                      then you should use SKU of first product in ProductSet
                      when you work with XLS import files.
                    example: NHGB93523-12
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  description:
                    type: string
                    nullable: true
                    description: >-
                      Description which will be visible by end customers.
                      Depending on settings of your seller and general
                      configuration, there could be limit of minimum and maximum
                      length of the description. Also, depending on
                      configuration, description should be plain text or may
                      contain HTML markup.
                    example: >-
                      Experience the ultimate expression of functionality at
                      BrandName with the Women's Block Shell Jacket. Our model
                      is wearing size *. She usually wears a size 8 and is 177cm
                      tall.
                  brandId:
                    description: >-
                      Please, note that not every brand can be used without
                      prior aproval. Also, there are some brand-specific
                      limitation for variations (for example, for brand A it is
                      possible to use only sizes 34, 35, 36, 37, 38, 39, 40, but
                      size 35.5 or 33 will lead to validation error).
                    type: integer
                    example: 78
                  primaryCategoryId:
                    description: >-
                      Please, note that there could limitation for certain
                      sellers in which categories seller allowed to create
                      ProductSets. Also, in cource of time categories can be
                      marked as inactive (for example when category A is
                      splitted to categories B and C).
                    type: integer
                    example: 309
                  attributeSetId:
                    description: >-
                      Different categories has different AttributeSets. It means
                      that for Shoes there is one set of attributes applied and
                      for Hats another one. AttributeSet is defined by primary
                      category of product set. In very rare cases attribute set
                      of category can be changed to another one. In this case in
                      order to successfully save ProductSet you will need to
                      pass all required attributes for new AttributeSet. This
                      value represent AttributeSet which was set for primary
                      category of ProductSet during last save.
                    type: integer
                    example: 2
                  sellerId:
                    type: integer
                    example: 5623
                  categories:
                    description: >-
                      ProductSet can be listed in multiple additional
                      categories. There is a seller-specific limit regarding
                      maximum count of additional categories
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
                  attributes:
                    type: object
                    description: >-
                      Array of attributes' values. Key is attribute ID and value
                      depends on type of attribute. It can be one of: string
                      (for "free text attributes" like "Warranty duration"),
                      integer (for attributes with list of options, for example
                      "Material" can have some set of fixed options), array of
                      integers (for attributes with multiple choise of
                      predefined options), null (when you didn't provide value
                      for optional attribute), array of strings for attributes
                      which allow multiple values with free text.
                    example:
                      '421': string value
                      '533':
                        - 4
                        - 5
                      '567': 123
                      '721':
                        - string1
                        - string2
                      '854': null
                  sizeSystem:
                    description: >
                      Nullable field with same value as attribute that
                      represents "size system". Please, read description of

                      "GET /v2/brands/{brandId}/attributes" for more detailed
                      explanation. This field will be removed in future

                      versions of this endpoint and "size system" will be passed
                      only in array of attributes.
                    type: integer
                    example: 5
                  browseNodes:
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/product-set/parent-sku/{parentSku}:
    get:
      summary: Get ProductSet by Parent Sku
      description: >
        Get single ProductSet with parent sku. ParentSku is human-readable
        unique identifier of product set, which is  used in file imports and
        exports. Depending on configuration of system for you, it may be either
        manually set or sku of first product in product set will be used as
        ParentSku. 


        <br><strong>Note</strong> Ideally sellers should save mapping of parent
        sku on their side so that they don’t need  to request API endpoint.</br>
      security:
        - oAuth: []
      parameters:
        - in: path
          name: parentSku
          required: true
          schema:
            type: string
          description: ParentSku of ProductSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 7865
                  uuid:
                    type: string
                    example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
                  srcId:
                    description: >-
                      ID of image in Shop system. If empty means that image was
                      not yet syncronized with Shop and is not visible to end
                      customers.
                    example: '94345'
                    type: string
                    nullable: true
                  name:
                    type: string
                    example: Block Shell Jacket
                  parentSku:
                    type: string
                    description: >-
                      SKU of product, which acts as "main" one for ProductSet.
                      Using this value you can add new products to ProductSet
                      using XLS files. If feature of "parentSku" is disabled,
                      then you should use SKU of first product in ProductSet
                      when you work with XLS import files.
                    example: NHGB93523-12
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  description:
                    type: string
                    nullable: true
                    description: >-
                      Description which will be visible by end customers.
                      Depending on settings of your seller and general
                      configuration, there could be limit of minimum and maximum
                      length of the description. Also, depending on
                      configuration, description should be plain text or may
                      contain HTML markup.
                    example: >-
                      Experience the ultimate expression of functionality at
                      BrandName with the Women's Block Shell Jacket. Our model
                      is wearing size *. She usually wears a size 8 and is 177cm
                      tall.
                  brandId:
                    description: >-
                      Please, note that not every brand can be used without
                      prior aproval. Also, there are some brand-specific
                      limitation for variations (for example, for brand A it is
                      possible to use only sizes 34, 35, 36, 37, 38, 39, 40, but
                      size 35.5 or 33 will lead to validation error).
                    type: integer
                    example: 78
                  primaryCategoryId:
                    description: >-
                      Please, note that there could limitation for certain
                      sellers in which categories seller allowed to create
                      ProductSets. Also, in cource of time categories can be
                      marked as inactive (for example when category A is
                      splitted to categories B and C).
                    type: integer
                    example: 309
                  attributeSetId:
                    description: >-
                      Different categories has different AttributeSets. It means
                      that for Shoes there is one set of attributes applied and
                      for Hats another one. AttributeSet is defined by primary
                      category of product set. In very rare cases attribute set
                      of category can be changed to another one. In this case in
                      order to successfully save ProductSet you will need to
                      pass all required attributes for new AttributeSet. This
                      value represent AttributeSet which was set for primary
                      category of ProductSet during last save.
                    type: integer
                    example: 2
                  sellerId:
                    type: integer
                    example: 5623
                  categories:
                    description: >-
                      ProductSet can be listed in multiple additional
                      categories. There is a seller-specific limit regarding
                      maximum count of additional categories
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
                  attributes:
                    type: object
                    description: >-
                      Array of attributes' values. Key is attribute ID and value
                      depends on type of attribute. It can be one of: string
                      (for "free text attributes" like "Warranty duration"),
                      integer (for attributes with list of options, for example
                      "Material" can have some set of fixed options), array of
                      integers (for attributes with multiple choise of
                      predefined options), null (when you didn't provide value
                      for optional attribute), array of strings for attributes
                      which allow multiple values with free text.
                    example:
                      '421': string value
                      '533':
                        - 4
                        - 5
                      '567': 123
                      '721':
                        - string1
                        - string2
                      '854': null
                  sizeSystem:
                    description: >
                      Nullable field with same value as attribute that
                      represents "size system". Please, read description of

                      "GET /v2/brands/{brandId}/attributes" for more detailed
                      explanation. This field will be removed in future

                      versions of this endpoint and "size system" will be passed
                      only in array of attributes.
                    type: integer
                    example: 5
                  browseNodes:
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/product-set/config-sku/{configSku}:
    get:
      summary: Get ProductSet by its ConfigSku
      description: >
        Get single ProductSet by its ConfigSku. ProductSet consist of many
        products (sizes). Each of them has sku  defined by seller and during
        syncronization with shop system each of products get also SKU from shop
        system  assigned to them. Those SKUs have same pattern:
        "commonPart-someRandomCharacters1",  "commonPart-someRandomCharacters2".
        This "commonPart" is so called ConfigSku. 


        This endpoint is used in some flows of bulk image uploads in order to
        get information to which product set certain image file you get from
        photo shooting belongs. 


        <br><strong>Note</strong> Ideally sellers should save mapping of shop
        sku on their side so that they don’t need  to request API endpoint.</br>
      security:
        - oAuth: []
      parameters:
        - in: path
          name: configSku
          required: true
          schema:
            type: string
          description: >
            String ConfigSku of ProductSet. Please, refer to description of
            endpoint to get more information about

            what this parameter is. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 7865
                  uuid:
                    type: string
                    example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
                  srcId:
                    description: >-
                      ID of image in Shop system. If empty means that image was
                      not yet syncronized with Shop and is not visible to end
                      customers.
                    example: '94345'
                    type: string
                    nullable: true
                  name:
                    type: string
                    example: Block Shell Jacket
                  parentSku:
                    type: string
                    description: >-
                      SKU of product, which acts as "main" one for ProductSet.
                      Using this value you can add new products to ProductSet
                      using XLS files. If feature of "parentSku" is disabled,
                      then you should use SKU of first product in ProductSet
                      when you work with XLS import files.
                    example: NHGB93523-12
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  description:
                    type: string
                    nullable: true
                    description: >-
                      Description which will be visible by end customers.
                      Depending on settings of your seller and general
                      configuration, there could be limit of minimum and maximum
                      length of the description. Also, depending on
                      configuration, description should be plain text or may
                      contain HTML markup.
                    example: >-
                      Experience the ultimate expression of functionality at
                      BrandName with the Women's Block Shell Jacket. Our model
                      is wearing size *. She usually wears a size 8 and is 177cm
                      tall.
                  brandId:
                    description: >-
                      Please, note that not every brand can be used without
                      prior aproval. Also, there are some brand-specific
                      limitation for variations (for example, for brand A it is
                      possible to use only sizes 34, 35, 36, 37, 38, 39, 40, but
                      size 35.5 or 33 will lead to validation error).
                    type: integer
                    example: 78
                  primaryCategoryId:
                    description: >-
                      Please, note that there could limitation for certain
                      sellers in which categories seller allowed to create
                      ProductSets. Also, in cource of time categories can be
                      marked as inactive (for example when category A is
                      splitted to categories B and C).
                    type: integer
                    example: 309
                  attributeSetId:
                    description: >-
                      Different categories has different AttributeSets. It means
                      that for Shoes there is one set of attributes applied and
                      for Hats another one. AttributeSet is defined by primary
                      category of product set. In very rare cases attribute set
                      of category can be changed to another one. In this case in
                      order to successfully save ProductSet you will need to
                      pass all required attributes for new AttributeSet. This
                      value represent AttributeSet which was set for primary
                      category of ProductSet during last save.
                    type: integer
                    example: 2
                  sellerId:
                    type: integer
                    example: 5623
                  categories:
                    description: >-
                      ProductSet can be listed in multiple additional
                      categories. There is a seller-specific limit regarding
                      maximum count of additional categories
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
                  attributes:
                    type: object
                    description: >-
                      Array of attributes' values. Key is attribute ID and value
                      depends on type of attribute. It can be one of: string
                      (for "free text attributes" like "Warranty duration"),
                      integer (for attributes with list of options, for example
                      "Material" can have some set of fixed options), array of
                      integers (for attributes with multiple choise of
                      predefined options), null (when you didn't provide value
                      for optional attribute), array of strings for attributes
                      which allow multiple values with free text.
                    example:
                      '421': string value
                      '533':
                        - 4
                        - 5
                      '567': 123
                      '721':
                        - string1
                        - string2
                      '854': null
                  sizeSystem:
                    description: >
                      Nullable field with same value as attribute that
                      represents "size system". Please, read description of

                      "GET /v2/brands/{brandId}/attributes" for more detailed
                      explanation. This field will be removed in future

                      versions of this endpoint and "size system" will be passed
                      only in array of attributes.
                    type: integer
                    example: 5
                  browseNodes:
                    type: array
                    example:
                      - 421
                      - 567
                    items:
                      type: integer
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/product-set/count-by-attribute-set:
    get:
      summary: Get count of ProductSets grouped by AttributeSet
      security:
        - oAuth: []
      description: >
        For given search and filtering criteria return list of ProductSets.


        Note: The search keyword is used only in 'starts with' queries and only
        if its length is greater or equals 3.
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          required: false
          name: status
          description: >
            Sections of product. 


            "all" returns all product sets without filtering.


            "active" will return product sets in active categories, with active
            brand, with at least one product  with stock, with price, synced
            with shop system, with at least one not-deleted image, with at least
            one product with "active" status.


            "inactive-all" - will return product sets where all products has
            status "inactive".


            "deleted-all" - will return product sets where all products has
            status "deleted".


            "image-missing" - will return product sets without images or with
            all images deleted.


            "pending" - return product sets with at least one active product
            with QC status "pending" (product sets which are waiting to be
            Quality Controlled).


            "rejected" - return product sets with at least one active product
            with QC status "rejected" (product sets which are rejected during
            Quality Controlled). You need to update products and fix issues
            found during Quality Control.


            "disapproved" - same as "rejected" but without Not-Authorized
            products.


            "sold-out" - will return product sets with 0 stock (product sets
            with all products have 0 stock).


            "not-authorized" - will return not authorized product sets.
          schema:
            type: string
            enum:
              - all
              - active
              - inactive-all
              - deleted-all
              - image-missing
              - pending
              - rejected
              - disapproved
              - sold-out
              - not-authorized
        - in: query
          required: false
          name: keyword
          description: >
            Search by product name / product sku / seller sku / parent sku. The
            keyword might be a string or an array of strings.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - in: query
          required: false
          name: createDateStart
          description: >
            Filter by creation date of product set. It should be less than
            createDateEnd. Date should be given in Y-m-d

            format, for example 2021-01-20.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: createDateEnd
          description: >
            Filter by date of creation of product set. It should be greater than
            createDateStart. Date should be given in Y-m-d

            format, for example 2021-02-14.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: updateDateStart
          description: >
            Filter by update date of product set. It should be less than
            updateDateEnd. Date should be given in Y-m-d

            format, for example 2021-01-20.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: updateDateEnd
          description: >
            Filter by update date of product set. It should be greater than
            updateDateStart. Date should be given in Y-m-d

            format, for example 2021-02-14.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: brandIds[]
          description: Search by brand IDs
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: tags[]
          description: Search by tag ids or names
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: visibility
          description: Search by visibility status
          schema:
            type: string
            enum:
              - Syncing
        - in: query
          required: false
          name: inStock
          description: If it sets true, the API will only return products that have stock.
          schema:
            type: boolean
        - in: query
          required: false
          name: reserved
          description: >-
            If it sets true, the API will only return products that have
            reserve.
          schema:
            type: boolean
        - in: query
          required: false
          name: categoryIds[]
          description: Search by category ids
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: onlyWithTags
          description: If it sets true, the API will only return products that have tags.
          schema:
            type: boolean
        - in: query
          required: false
          name: parentSku
          description: Search by parent sku
          schema:
            type: string
        - in: query
          required: false
          name: group
          description: Search by product group
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    attributeSetId:
                      description: >-
                        Please, note that there could limitation for certain
                        sellers in which categories seller allowed to create
                        ProductSets. Also, in cource of time categories can be
                        marked as inactive (for example when category A is
                        splitted to categories B and C).
                      type: integer
                      example: 309
                    count:
                      type: integer
                      example: 43
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/product-set/{productSetId}/images:
    get:
      summary: Get a list of the product-set's images
      security:
        - oAuth: []
      description: >
        Only active (not-deleted) images are included. Please, do not use public
        URLs of images to serve content. Empty array can be returned if product
        set has no images. All images are returned (without pagination). Sorting
        images is based on position of images. You can create 1 image per
        request
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      readOnly: true
                      example: 7865
                    srcId:
                      description: >-
                        ID of image in Shop system. If empty means that image
                        was not yet synchronized with Shop and is not visible to
                        end customers.
                      example: '94345'
                      type: string
                      nullable: true
                      readOnly: true
                    productSetId:
                      type: integer
                      readOnly: true
                      example: 744
                    position:
                      description: >-
                        Contains information about desired order in which images
                        should be displayed to end customer. May contain gaps in
                        case if some image was deleted. Positions are usually
                        recalculated starting from 1 during any update operation
                        (adding new image, for example).
                      type: integer
                      example: 2
                    displayUrl:
                      description: Full public URL of image.
                      type: string
                      example: https://some.domain/path/image.jpg
                    createdAt:
                      type: string
                      readOnly: true
                      format: date-time
                    updatedAt:
                      type: string
                      readOnly: true
                      format: date-time
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Image
    post:
      summary: Add an image to the product-set
      security:
        - oAuth: []
      description: >
        The image may be sent as an URL or a binary file, please note that this
        endpoint can work with two content types and in documentation you can
        use dropdown and switch between application/json and 
        multipart/form-data to see how to send request for corresponding content
        type.


        Images of product set have positions which is number from 1 to 8. If in
        your request you don't include position then next available will be
        chosen. 


        Example: you have product set without images, you send POST request to
        add image without  specifying position. In this case new image will be
        added to position 1 and will be used as "main" image. 


        Another example: you have product set with three images. ImageA with
        position 1, ImageB with position 2 and  marked as "deleted" and ImageC
        with position 3. You send POST request to add image without specifying
        position.  In this case new image will be added to position 4.


        In case if you include position image will be always saved with position
        that you specied. Duplicated positions are allowed but in this case
        order of images that end user see will be not determined.


        Example: ImageA with position 1, ImageB with position 2, ImageC with
        position 2. For end user images will be  shown either in order "ImageA,
        ImageB, ImageC" or "ImageA, ImageC, ImageB". If you need exact order of
        your  images please specify distinct positions.


        Please note that adding image with position 1 will mark this image as
        "main". Example: you have ImageA  with position 1 (main image), ImageB
        with position 2. If you add new ImageC with position 1, then you will
        have following images: ImageC with position 1 (new "main"), ImageA with
        position 1, ImageC with position 2.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                position:
                  description: >-
                    Contains information about desired order in which images
                    should be displayed to end customer. May contain gaps in
                    case if some image was deleted. Positions are usually
                    recalculated starting from 1 during any update operation
                    (adding new image, for example).
                  type: integer
                  example: 2
                displayUrl:
                  description: Full public URL of image.
                  type: string
                  example: https://some.domain/path/image.jpg
                overwrite:
                  description: >
                    Indicates if the existing image at the specified position
                    should be replaced.  If set to true, the image currently at
                    the provided position will be overwritten  with the new
                    image. If false or not provided, the image will be added
                    without  replacing any existing image. Default is false.
                  type: boolean
                  example: false
                  default: false
          multipart/form-data:
            schema:
              allOf:
                - type: object
                  description: |
                    The field name 'file1' is temporary - it will be changed
                  required:
                    - file1
                  properties:
                    file1:
                      type: string
                      format: binary
                - type: object
                  properties:
                    position:
                      description: >-
                        Contains information about desired order in which images
                        should be displayed to end customer. May contain gaps in
                        case if some image was deleted. Positions are usually
                        recalculated starting from 1 during any update operation
                        (adding new image, for example).
                      type: integer
                      example: 2
                - type: object
                  properties:
                    overwrite:
                      description: >
                        Indicates if the existing image at the specified
                        position should be replaced.  If set to true, the image
                        currently at the provided position will be overwritten 
                        with the new image. If false or not provided, the image
                        will be added without  replacing any existing image.
                        Default is false.
                      type: boolean
                      example: false
                      default: false
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                    example: 7865
                  srcId:
                    description: >-
                      ID of image in Shop system. If empty means that image was
                      not yet synchronized with Shop and is not visible to end
                      customers.
                    example: '94345'
                    type: string
                    nullable: true
                    readOnly: true
                  productSetId:
                    type: integer
                    readOnly: true
                    example: 744
                  position:
                    description: >-
                      Contains information about desired order in which images
                      should be displayed to end customer. May contain gaps in
                      case if some image was deleted. Positions are usually
                      recalculated starting from 1 during any update operation
                      (adding new image, for example).
                    type: integer
                    example: 2
                  displayUrl:
                    description: Full public URL of image.
                    type: string
                    example: https://some.domain/path/image.jpg
                  createdAt:
                    type: string
                    readOnly: true
                    format: date-time
                  updatedAt:
                    type: string
                    readOnly: true
                    format: date-time
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Image
  /v2/product-set/{productSetId}/images/{imageId}:
    patch:
      summary: Update the image of the product-set
      security:
        - oAuth: []
      description: >
        The product set can have 2 images with the same position. When we update
        some image position to position 1 then this image should be marked as
        main. When we update position of image with current position 1, then
        another image (if any) with position 1 should be marked as main
        otherwise the image remain main.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
        - in: path
          name: imageId
          required: true
          schema:
            type: integer
          description: >-
            Numeric Id of Image (Id from /v2/product-set/{productSetId}/images
            endpoint)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                  example: 7865
                srcId:
                  description: >-
                    ID of image in Shop system. If empty means that image was
                    not yet synchronized with Shop and is not visible to end
                    customers.
                  example: '94345'
                  type: string
                  nullable: true
                  readOnly: true
                productSetId:
                  type: integer
                  readOnly: true
                  example: 744
                position:
                  description: >-
                    Contains information about desired order in which images
                    should be displayed to end customer. May contain gaps in
                    case if some image was deleted. Positions are usually
                    recalculated starting from 1 during any update operation
                    (adding new image, for example).
                  type: integer
                  example: 2
                displayUrl:
                  description: Full public URL of image.
                  type: string
                  example: https://some.domain/path/image.jpg
                createdAt:
                  type: string
                  readOnly: true
                  format: date-time
                updatedAt:
                  type: string
                  readOnly: true
                  format: date-time
          multipart/form-data:
            schema:
              allOf:
                - type: object
                  description: |
                    The field name 'file1' is temporary - it will be changed
                  required:
                    - file1
                  properties:
                    file1:
                      type: string
                      format: binary
                - type: object
                  properties:
                    position:
                      description: >-
                        Contains information about desired order in which images
                        should be displayed to end customer. May contain gaps in
                        case if some image was deleted. Positions are usually
                        recalculated starting from 1 during any update operation
                        (adding new image, for example).
                      type: integer
                      example: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                    example: 7865
                  srcId:
                    description: >-
                      ID of image in Shop system. If empty means that image was
                      not yet synchronized with Shop and is not visible to end
                      customers.
                    example: '94345'
                    type: string
                    nullable: true
                    readOnly: true
                  productSetId:
                    type: integer
                    readOnly: true
                    example: 744
                  position:
                    description: >-
                      Contains information about desired order in which images
                      should be displayed to end customer. May contain gaps in
                      case if some image was deleted. Positions are usually
                      recalculated starting from 1 during any update operation
                      (adding new image, for example).
                    type: integer
                    example: 2
                  displayUrl:
                    description: Full public URL of image.
                    type: string
                    example: https://some.domain/path/image.jpg
                  createdAt:
                    type: string
                    readOnly: true
                    format: date-time
                  updatedAt:
                    type: string
                    readOnly: true
                    format: date-time
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Image
    delete:
      summary: Delete the image of the product-set
      description: >
        When we remove image with current position 1 and main, then another
        image (if any) with position 1 should be marked as main. If no such
        image exists, a different image will be selected at random to become the
        new main image.  The removal of images does not trigger a reindexing of
        the remaining images.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
        - in: path
          name: imageId
          required: true
          schema:
            type: integer
          description: >-
            Numeric Id of Image (Id from /v2/product-set/{productSetId}/images
            endpoint)
      responses:
        '204':
          description: The image was successfully removed
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Image
  /v2/product-sets/cover-image:
    get:
      tags:
        - Product Image
      summary: Get the url of main images by product sets ids.
      security:
        - oAuth: []
      description: >
        Get the url of main images by product sets ids. If the product set does
        not exist or is from another seller the main url will be null. Maximum
        100 product sets ids. You are free to use this endpoint, but in this
        endpoint there could be breaking changes without notice.
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids
          required: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 3872
              - 549
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productSetId:
                      type: integer
                      example: 5
                    imageUrl:
                      type: string
                      nullable: true
                      example: https://example.com/image-1.jpg
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/product-sets/images:
    get:
      tags:
        - Product Image
      summary: Get the images by product sets ids.
      security:
        - oAuth: []
      description: >
        Get the urls of product sets by product sets ids. If the product set
        does not exist or is from another seller the list of urls will be empty.
        Maximum 100 product sets ids. You are free to use this endpoint, but in
        this endpoint there could be breaking changes without notice. The first
        image is always the cover image of the product set.
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids
          required: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 3872
              - 549
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productSetId:
                      type: integer
                      example: 5
                    images:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1357
                          displayUrl:
                            type: string
                            description: URL of the image
                            example: https://example.com/image-1.jpg
                          srcId:
                            type: string
                            nullable: true
                            description: >-
                              ID of image in Shop system. If null means that
                              image was not yet synchronized with Shop and is
                              not visible to end customers.
                            example: '39487664'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/product-sets/tags:
    get:
      tags:
        - Tags
      summary: Get the product tags of the products within given product sets ids.
      security:
        - oAuth: []
      description: >
        Get the product tags of the products within given product sets ids. Tags
        are assigned to products, but this endpoint groups them by productSetId
        for usage in UI.<br>If the product set does not exist or is from another
        seller there will be an entry added for it with a null tag. Maximum 100
        product sets ids.
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids
          required: true
          schema:
            type: array
            items:
              type: integer
            example:
              - 1
              - 32000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    tagId:
                      type: integer
                      nullable: true
                      example: 5
                    tagName:
                      type: string
                      nullable: true
                      example: Fresh products
                    productSetId:
                      type: integer
                      nullable: false
                      example: 5
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/product/shop-sku/{shopSku}:
    get:
      summary: Get product by Shop Sku
      description: >
        Get single product with shop sku.


        <br><strong>Note</strong> Ideally sellers should save mapping of
        sku/shop their side so that they don’t need to request API
        endpoint.</br>
      security:
        - oAuth: []
      parameters:
        - in: path
          name: shopSku
          required: true
          schema:
            type: string
          description: String shop sku of Product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Product identifier
                    type: integer
                    example: 7865
                    readOnly: true
                  uuid:
                    description: Product UUID identifier
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
                    type: string
                    readOnly: true
                  srcId:
                    description: >
                      ID of product in Shop system. If empty means that product
                      was not yet syncronized with Shop and is

                      not visible to end customers.
                    example: '94345'
                    type: string
                    nullable: true
                    readOnly: true
                  shopSku:
                    description: >
                      SKU on the shop's side. Usually it is visible to end
                      customer. If value is null, it means that product is not
                      yet

                      syncronized with shop and SKU was not assigned.
                    type: string
                    example: NI464AKLCEZ0
                    nullable: true
                    readOnly: true
                  sellerSku:
                    description: >-
                      SKU from seller's side. Should be unique across products
                      of seller.
                    type: string
                    example: shoe-123
                  sin:
                    description: >
                      Sometimes several sellers are selling same product. In
                      this case products of different sellers can be displayed

                      using one single product card in shop. This parameter, if
                      set, identifies to which product in shop system this

                      product of seller belongs to.
                    type: string
                    example: KMPWJ5
                    readOnly: true
                  sellerId:
                    type: integer
                    example: 252
                    readOnly: true
                  productSetId:
                    type: integer
                    example: 744
                    readOnly: true
                  approvalStatus:
                    type: string
                    description: Product approval status
                    example: approved
                    readOnly: true
                    enum:
                      - pending
                      - approved
                      - rejected
                  updatedByUserId:
                    type: integer
                    example: 8732
                    readOnly: true
                  status:
                    description: Product status
                    type: string
                    example: active
                    enum:
                      - active
                      - inactive
                      - deleted
                  variation:
                    description: name of variation, usually size like XL, 39, 62.
                    type: string
                    example: '38'
                  taxClassId:
                    description: Tax class Id specific for this particular size.
                    type: integer
                    example: 1
                    readOnly: true
                  shipmentTypeId:
                    description: >-
                      Shipment type Id specific for this particular size. The
                      Value include 1 - warehouse; 2 - dropshipping; 3 -
                      crossdocking;  if the value is empty the variation will be
                      created with the default value of this endpoint
                      /v2/seller-settings with this parameter
                      product_default_shipment_type
                    type: integer
                    example: 1
                  productIdentifier:
                    description: Identifier like EAN, Code-39, etc
                    type: string
                    example: '460232163234'
                  duplicateGroupId:
                    type: integer
                    example: 51
                    readOnly: true
                  srcUpdatedAt:
                    type: string
                    description: >-
                      Datetime when product was last updated(synced) with shop
                      system.
                    format: date-time
                    nullable: true
                    readOnly: true
                  createdAt:
                    type: string
                    format: date-time
                    readOnly: true
                  updatedAt:
                    type: string
                    format: date-time
                    readOnly: true
                  name:
                    type: string
                    description: name of the product
                    example: '1600 Slim Brushed Chrome '
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product/seller-sku/{sellerSku}:
    get:
      summary: Get product by Seller Sku
      description: >
        Get single product with seller sku.


        <br><strong>Note</strong> Ideally sellers should save mapping of
        sku/seller their side so that they don’t need to request API
        endpoint.</br>
      security:
        - oAuth: []
      parameters:
        - in: path
          name: sellerSku
          required: true
          schema:
            type: string
          description: String seller sku of Product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Product identifier
                    type: integer
                    example: 7865
                    readOnly: true
                  uuid:
                    description: Product UUID identifier
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
                    type: string
                    readOnly: true
                  srcId:
                    description: >
                      ID of product in Shop system. If empty means that product
                      was not yet syncronized with Shop and is

                      not visible to end customers.
                    example: '94345'
                    type: string
                    nullable: true
                    readOnly: true
                  shopSku:
                    description: >
                      SKU on the shop's side. Usually it is visible to end
                      customer. If value is null, it means that product is not
                      yet

                      syncronized with shop and SKU was not assigned.
                    type: string
                    example: NI464AKLCEZ0
                    nullable: true
                    readOnly: true
                  sellerSku:
                    description: >-
                      SKU from seller's side. Should be unique across products
                      of seller.
                    type: string
                    example: shoe-123
                  sin:
                    description: >
                      Sometimes several sellers are selling same product. In
                      this case products of different sellers can be displayed

                      using one single product card in shop. This parameter, if
                      set, identifies to which product in shop system this

                      product of seller belongs to.
                    type: string
                    example: KMPWJ5
                    readOnly: true
                  sellerId:
                    type: integer
                    example: 252
                    readOnly: true
                  productSetId:
                    type: integer
                    example: 744
                    readOnly: true
                  approvalStatus:
                    type: string
                    description: Product approval status
                    example: approved
                    readOnly: true
                    enum:
                      - pending
                      - approved
                      - rejected
                  updatedByUserId:
                    type: integer
                    example: 8732
                    readOnly: true
                  status:
                    description: Product status
                    type: string
                    example: active
                    enum:
                      - active
                      - inactive
                      - deleted
                  variation:
                    description: name of variation, usually size like XL, 39, 62.
                    type: string
                    example: '38'
                  taxClassId:
                    description: Tax class Id specific for this particular size.
                    type: integer
                    example: 1
                    readOnly: true
                  shipmentTypeId:
                    description: >-
                      Shipment type Id specific for this particular size. The
                      Value include 1 - warehouse; 2 - dropshipping; 3 -
                      crossdocking;  if the value is empty the variation will be
                      created with the default value of this endpoint
                      /v2/seller-settings with this parameter
                      product_default_shipment_type
                    type: integer
                    example: 1
                  productIdentifier:
                    description: Identifier like EAN, Code-39, etc
                    type: string
                    example: '460232163234'
                  duplicateGroupId:
                    type: integer
                    example: 51
                    readOnly: true
                  srcUpdatedAt:
                    type: string
                    description: >-
                      Datetime when product was last updated(synced) with shop
                      system.
                    format: date-time
                    nullable: true
                    readOnly: true
                  createdAt:
                    type: string
                    format: date-time
                    readOnly: true
                  updatedAt:
                    type: string
                    format: date-time
                    readOnly: true
                  name:
                    type: string
                    description: name of the product
                    example: '1600 Slim Brushed Chrome '
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product/seller-skus:
    get:
      summary: Get products by Seller Skus
      description: >
        Return products with seller skus. If a seller searches for a product
        that does not belong to them or if the product does not exist, the
        result will be an empty response. Maximum seller skus can search is 100
        items. <br><strong>Note</strong> Ideally sellers should save mapping of
        sku/seller their side so that they don’t need to request API
        endpoint.</br>
      security:
        - oAuth: []
      parameters:
        - in: query
          name: sellerSkus[]
          required: true
          description: Array of string seller skus
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: Product identifier
                          type: integer
                          example: 7865
                          readOnly: true
                        uuid:
                          description: Product UUID identifier
                          example: 060cef12-08ef-4ae6-b15e-79398fedc774
                          type: string
                          readOnly: true
                        srcId:
                          description: >
                            ID of product in Shop system. If empty means that
                            product was not yet syncronized with Shop and is

                            not visible to end customers.
                          example: '94345'
                          type: string
                          nullable: true
                          readOnly: true
                        shopSku:
                          description: >
                            SKU on the shop's side. Usually it is visible to end
                            customer. If value is null, it means that product is
                            not yet

                            syncronized with shop and SKU was not assigned.
                          type: string
                          example: NI464AKLCEZ0
                          nullable: true
                          readOnly: true
                        sellerSku:
                          description: >-
                            SKU from seller's side. Should be unique across
                            products of seller.
                          type: string
                          example: shoe-123
                        sin:
                          description: >
                            Sometimes several sellers are selling same product.
                            In this case products of different sellers can be
                            displayed

                            using one single product card in shop. This
                            parameter, if set, identifies to which product in
                            shop system this

                            product of seller belongs to.
                          type: string
                          example: KMPWJ5
                          readOnly: true
                        sellerId:
                          type: integer
                          example: 252
                          readOnly: true
                        productSetId:
                          type: integer
                          example: 744
                          readOnly: true
                        approvalStatus:
                          type: string
                          description: Product approval status
                          example: approved
                          readOnly: true
                          enum:
                            - pending
                            - approved
                            - rejected
                        updatedByUserId:
                          type: integer
                          example: 8732
                          readOnly: true
                        status:
                          description: Product status
                          type: string
                          example: active
                          enum:
                            - active
                            - inactive
                            - deleted
                        variation:
                          description: name of variation, usually size like XL, 39, 62.
                          type: string
                          example: '38'
                        taxClassId:
                          description: Tax class Id specific for this particular size.
                          type: integer
                          example: 1
                          readOnly: true
                        shipmentTypeId:
                          description: >-
                            Shipment type Id specific for this particular size.
                            The Value include 1 - warehouse; 2 - dropshipping; 3
                            - crossdocking;  if the value is empty the variation
                            will be created with the default value of this
                            endpoint /v2/seller-settings with this parameter
                            product_default_shipment_type
                          type: integer
                          example: 1
                        productIdentifier:
                          description: Identifier like EAN, Code-39, etc
                          type: string
                          example: '460232163234'
                        duplicateGroupId:
                          type: integer
                          example: 51
                          readOnly: true
                        srcUpdatedAt:
                          type: string
                          description: >-
                            Datetime when product was last updated(synced) with
                            shop system.
                          format: date-time
                          nullable: true
                          readOnly: true
                        createdAt:
                          type: string
                          format: date-time
                          readOnly: true
                        updatedAt:
                          type: string
                          format: date-time
                          readOnly: true
                        name:
                          type: string
                          description: name of the product
                          example: '1600 Slim Brushed Chrome '
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/products:
    get:
      summary: Get list of product with filters
      security:
        - oAuth: []
      parameters:
        - in: query
          name: productUuids[]
          required: false
          description: Array of string product uuids
          schema:
            type: array
            items:
              type: string
        - in: query
          name: productIds[]
          required: false
          description: Array of int product ids
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: sellerId
          required: false
          schema:
            type: integer
          description: Numeric Id of Seller
        - in: query
          name: sku
          required: false
          schema:
            type: string
          description: Sku of product
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: Name of product
        - in: query
          name: sellerSku
          required: false
          schema:
            type: string
          description: String seller sku of Product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Product identifier
                      type: integer
                      example: 7865
                      readOnly: true
                    uuid:
                      description: Product UUID identifier
                      example: 060cef12-08ef-4ae6-b15e-79398fedc774
                      type: string
                      readOnly: true
                    srcId:
                      description: >
                        ID of product in Shop system. If empty means that
                        product was not yet syncronized with Shop and is

                        not visible to end customers.
                      example: '94345'
                      type: string
                      nullable: true
                      readOnly: true
                    shopSku:
                      description: >
                        SKU on the shop's side. Usually it is visible to end
                        customer. If value is null, it means that product is not
                        yet

                        syncronized with shop and SKU was not assigned.
                      type: string
                      example: NI464AKLCEZ0
                      nullable: true
                      readOnly: true
                    sellerSku:
                      description: >-
                        SKU from seller's side. Should be unique across products
                        of seller.
                      type: string
                      example: shoe-123
                    sin:
                      description: >
                        Sometimes several sellers are selling same product. In
                        this case products of different sellers can be displayed

                        using one single product card in shop. This parameter,
                        if set, identifies to which product in shop system this

                        product of seller belongs to.
                      type: string
                      example: KMPWJ5
                      readOnly: true
                    sellerId:
                      type: integer
                      example: 252
                      readOnly: true
                    productSetId:
                      type: integer
                      example: 744
                      readOnly: true
                    approvalStatus:
                      type: string
                      description: Product approval status
                      example: approved
                      readOnly: true
                      enum:
                        - pending
                        - approved
                        - rejected
                    updatedByUserId:
                      type: integer
                      example: 8732
                      readOnly: true
                    status:
                      description: Product status
                      type: string
                      example: active
                      enum:
                        - active
                        - inactive
                        - deleted
                    variation:
                      description: name of variation, usually size like XL, 39, 62.
                      type: string
                      example: '38'
                    taxClassId:
                      description: Tax class Id specific for this particular size.
                      type: integer
                      example: 1
                      readOnly: true
                    shipmentTypeId:
                      description: >-
                        Shipment type Id specific for this particular size. The
                        Value include 1 - warehouse; 2 - dropshipping; 3 -
                        crossdocking;  if the value is empty the variation will
                        be created with the default value of this endpoint
                        /v2/seller-settings with this parameter
                        product_default_shipment_type
                      type: integer
                      example: 1
                    productIdentifier:
                      description: Identifier like EAN, Code-39, etc
                      type: string
                      example: '460232163234'
                    duplicateGroupId:
                      type: integer
                      example: 51
                      readOnly: true
                    srcUpdatedAt:
                      type: string
                      description: >-
                        Datetime when product was last updated(synced) with shop
                        system.
                      format: date-time
                      nullable: true
                      readOnly: true
                    createdAt:
                      type: string
                      format: date-time
                      readOnly: true
                    updatedAt:
                      type: string
                      format: date-time
                      readOnly: true
                    name:
                      type: string
                      description: name of the product
                      example: '1600 Slim Brushed Chrome '
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product-set/{productSetId}/products:
    get:
      summary: Get list of product for a ProductSet
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Product identifier
                      type: integer
                      example: 7865
                      readOnly: true
                    uuid:
                      description: Product UUID identifier
                      example: 060cef12-08ef-4ae6-b15e-79398fedc774
                      type: string
                      readOnly: true
                    srcId:
                      description: >
                        ID of product in Shop system. If empty means that
                        product was not yet syncronized with Shop and is

                        not visible to end customers.
                      example: '94345'
                      type: string
                      nullable: true
                      readOnly: true
                    shopSku:
                      description: >
                        SKU on the shop's side. Usually it is visible to end
                        customer. If value is null, it means that product is not
                        yet

                        syncronized with shop and SKU was not assigned.
                      type: string
                      example: NI464AKLCEZ0
                      nullable: true
                      readOnly: true
                    sellerSku:
                      description: >-
                        SKU from seller's side. Should be unique across products
                        of seller.
                      type: string
                      example: shoe-123
                    sin:
                      description: >
                        Sometimes several sellers are selling same product. In
                        this case products of different sellers can be displayed

                        using one single product card in shop. This parameter,
                        if set, identifies to which product in shop system this

                        product of seller belongs to.
                      type: string
                      example: KMPWJ5
                      readOnly: true
                    sellerId:
                      type: integer
                      example: 252
                      readOnly: true
                    productSetId:
                      type: integer
                      example: 744
                      readOnly: true
                    approvalStatus:
                      type: string
                      description: Product approval status
                      example: approved
                      readOnly: true
                      enum:
                        - pending
                        - approved
                        - rejected
                    updatedByUserId:
                      type: integer
                      example: 8732
                      readOnly: true
                    status:
                      description: Product status
                      type: string
                      example: active
                      enum:
                        - active
                        - inactive
                        - deleted
                    variation:
                      description: name of variation, usually size like XL, 39, 62
                      type: string
                      nullable: true
                      example: '38'
                    taxClassId:
                      description: Tax class Id specific for this particular size.
                      type: integer
                      example: 1
                      readOnly: true
                    shipmentTypeId:
                      description: Shipment type Id specific for this particular size.
                      type: integer
                      example: 1
                      readOnly: true
                    productIdentifier:
                      description: Identifier like EAN, Code-39, etc
                      type: string
                      nullable: true
                      example: '460232163234'
                    duplicateGroupId:
                      type: integer
                      example: 51
                      readOnly: true
                    srcUpdatedAt:
                      type: string
                      description: >-
                        Datetime when product was last updated(synced) with shop
                        system.
                      format: date-time
                      nullable: true
                      readOnly: true
                    createdAt:
                      type: string
                      format: date-time
                      readOnly: true
                    updatedAt:
                      type: string
                      format: date-time
                      nullable: true
                      readOnly: true
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
    post:
      summary: Creates new product for product-set
      description: >
        The endpoint accepts <b>only 1 product</b>.  So if you want to create
        several products you need to call the endpoint several times.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Product identifier
                  type: integer
                  example: 7865
                  readOnly: true
                uuid:
                  description: Product UUID identifier
                  example: 060cef12-08ef-4ae6-b15e-79398fedc774
                  type: string
                  readOnly: true
                srcId:
                  description: >
                    ID of product in Shop system. If empty means that product
                    was not yet syncronized with Shop and is

                    not visible to end customers.
                  example: '94345'
                  type: string
                  nullable: true
                  readOnly: true
                shopSku:
                  description: >
                    SKU on the shop's side. Usually it is visible to end
                    customer. If value is null, it means that product is not yet

                    syncronized with shop and SKU was not assigned.
                  type: string
                  example: NI464AKLCEZ0
                  nullable: true
                  readOnly: true
                sellerSku:
                  description: >-
                    SKU from seller's side. Should be unique across products of
                    seller.
                  type: string
                  example: shoe-123
                sin:
                  description: >
                    Sometimes several sellers are selling same product. In this
                    case products of different sellers can be displayed

                    using one single product card in shop. This parameter, if
                    set, identifies to which product in shop system this

                    product of seller belongs to.
                  type: string
                  example: KMPWJ5
                  readOnly: true
                sellerId:
                  type: integer
                  example: 252
                  readOnly: true
                productSetId:
                  type: integer
                  example: 744
                  readOnly: true
                approvalStatus:
                  type: string
                  description: Product approval status
                  example: approved
                  readOnly: true
                  enum:
                    - pending
                    - approved
                    - rejected
                updatedByUserId:
                  type: integer
                  example: 8732
                  readOnly: true
                status:
                  description: Product status
                  type: string
                  example: active
                  enum:
                    - active
                    - inactive
                    - deleted
                variation:
                  description: name of variation, usually size like XL, 39, 62.
                  type: string
                  example: '38'
                taxClassId:
                  description: Tax class Id specific for this particular size.
                  type: integer
                  example: 1
                  readOnly: true
                shipmentTypeId:
                  description: >-
                    Shipment type Id specific for this particular size. The
                    Value include 1 - warehouse; 2 - dropshipping; 3 -
                    crossdocking;  if the value is empty the variation will be
                    created with the default value of this endpoint
                    /v2/seller-settings with this parameter
                    product_default_shipment_type
                  type: integer
                  example: 1
                productIdentifier:
                  description: Identifier like EAN, Code-39, etc
                  type: string
                  example: '460232163234'
                duplicateGroupId:
                  type: integer
                  example: 51
                  readOnly: true
                srcUpdatedAt:
                  type: string
                  description: >-
                    Datetime when product was last updated(synced) with shop
                    system.
                  format: date-time
                  nullable: true
                  readOnly: true
                createdAt:
                  type: string
                  format: date-time
                  readOnly: true
                updatedAt:
                  type: string
                  format: date-time
                  readOnly: true
                name:
                  type: string
                  description: name of the product
                  example: '1600 Slim Brushed Chrome '
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Product identifier
                    type: integer
                    example: 7865
                    readOnly: true
                  uuid:
                    description: Product UUID identifier
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
                    type: string
                    readOnly: true
                  srcId:
                    description: >
                      ID of product in Shop system. If empty means that product
                      was not yet syncronized with Shop and is

                      not visible to end customers.
                    example: '94345'
                    type: string
                    nullable: true
                    readOnly: true
                  shopSku:
                    description: >
                      SKU on the shop's side. Usually it is visible to end
                      customer. If value is null, it means that product is not
                      yet

                      syncronized with shop and SKU was not assigned.
                    type: string
                    example: NI464AKLCEZ0
                    nullable: true
                    readOnly: true
                  sellerSku:
                    description: >-
                      SKU from seller's side. Should be unique across products
                      of seller.
                    type: string
                    example: shoe-123
                  sin:
                    description: >
                      Sometimes several sellers are selling same product. In
                      this case products of different sellers can be displayed

                      using one single product card in shop. This parameter, if
                      set, identifies to which product in shop system this

                      product of seller belongs to.
                    type: string
                    example: KMPWJ5
                    readOnly: true
                  sellerId:
                    type: integer
                    example: 252
                    readOnly: true
                  productSetId:
                    type: integer
                    example: 744
                    readOnly: true
                  approvalStatus:
                    type: string
                    description: Product approval status
                    example: approved
                    readOnly: true
                    enum:
                      - pending
                      - approved
                      - rejected
                  updatedByUserId:
                    type: integer
                    example: 8732
                    readOnly: true
                  status:
                    description: Product status
                    type: string
                    example: active
                    enum:
                      - active
                      - inactive
                      - deleted
                  variation:
                    description: name of variation, usually size like XL, 39, 62.
                    type: string
                    example: '38'
                  taxClassId:
                    description: Tax class Id specific for this particular size.
                    type: integer
                    example: 1
                    readOnly: true
                  shipmentTypeId:
                    description: >-
                      Shipment type Id specific for this particular size. The
                      Value include 1 - warehouse; 2 - dropshipping; 3 -
                      crossdocking;  if the value is empty the variation will be
                      created with the default value of this endpoint
                      /v2/seller-settings with this parameter
                      product_default_shipment_type
                    type: integer
                    example: 1
                  productIdentifier:
                    description: Identifier like EAN, Code-39, etc
                    type: string
                    example: '460232163234'
                  duplicateGroupId:
                    type: integer
                    example: 51
                    readOnly: true
                  srcUpdatedAt:
                    type: string
                    description: >-
                      Datetime when product was last updated(synced) with shop
                      system.
                    format: date-time
                    nullable: true
                    readOnly: true
                  createdAt:
                    type: string
                    format: date-time
                    readOnly: true
                  updatedAt:
                    type: string
                    format: date-time
                    readOnly: true
                  name:
                    type: string
                    description: name of the product
                    example: '1600 Slim Brushed Chrome '
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product-set/search-hybrid:
    get:
      summary: Search results of Hybrid Products from Shop
      security:
        - oAuth: []
      parameters:
        - in: query
          name: query
          required: true
          schema:
            type: string
          description: Search query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sin:
                      description: >
                        Sometimes several sellers are selling same product. In
                        this case products of different sellers can be
                        displayed 

                        using one single product card in shop. This parameter,
                        if set, identifies to which product in shop system this 

                        product of seller belongs to.
                      type: string
                      nullable: false
                      example: KMPWJ5
                    sku:
                      description: >
                        SKU on the shop's side. Usually it is visible to end
                        customer. If value is null, it means that product is not
                        yet 

                        syncronized with shop and SKU was not assigned.
                      type: string
                      example: NI464AKLCEZ0
                      nullable: true
                    name:
                      type: string
                      example: Nike Shoes
                    description:
                      type: string
                      nullable: true
                      example: Men's shoes
                    productUrl:
                      description: >
                        For seller to be able to see how product looks like for
                        end user.
                      type: string
                      nullable: true
                      example: https://absolute-product-url
                    prices:
                      description: >-
                        Prices of product, it is an array of object consisting
                        of price , currency and country.
                      type: array
                      items:
                        type: object
                        properties:
                          price:
                            type: number
                            nullable: true
                            example: 123.56
                          currency:
                            type: string
                            nullable: true
                            example: HKD
                          country:
                            type: string
                            nullable: true
                            example: HK
                    images:
                      description: >-
                        Images of product, it is an array of object consisting
                        of imageId , displayUrl and position.
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          imageId:
                            type: integer
                            nullable: true
                            example: 11
                          displayUrl:
                            type: string
                            nullable: true
                            example: https://p/lamoda-nike-11111.jpg
                          position:
                            type: string
                            nullable: true
                            example: 1
                    brandName:
                      description: Brand name
                      type: string
                      example: Nike
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product-set/products/create-by-sin:
    post:
      summary: Create Products by SIN in Shop’s catalog
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sin:
                  description: SIN value of the product in Shop’s catalog
                  type: string
                  example: '1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  productSetId:
                    description: Product Set Id of created product set
                    type: integer
                    example: 123456789
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product-set/{productSetId}/products/{productId}/status:
    put:
      summary: Update Product status
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Numeric Id of Product
        - in: query
          required: false
          name: status
          description: Product status
          schema:
            type: string
            enum:
              - active
              - inactive
              - deleted
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product-set/{productSetId}/products/{productId}:
    get:
      summary: Get product by Id
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Numeric Id of Product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Product identifier
                    type: integer
                    example: 7865
                    readOnly: true
                  uuid:
                    description: Product UUID identifier
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
                    type: string
                    readOnly: true
                  srcId:
                    description: >
                      ID of product in Shop system. If empty means that product
                      was not yet syncronized with Shop and is

                      not visible to end customers.
                    example: '94345'
                    type: string
                    nullable: true
                    readOnly: true
                  shopSku:
                    description: >
                      SKU on the shop's side. Usually it is visible to end
                      customer. If value is null, it means that product is not
                      yet

                      syncronized with shop and SKU was not assigned.
                    type: string
                    example: NI464AKLCEZ0
                    nullable: true
                    readOnly: true
                  sellerSku:
                    description: >-
                      SKU from seller's side. Should be unique across products
                      of seller.
                    type: string
                    example: shoe-123
                  sin:
                    description: >
                      Sometimes several sellers are selling same product. In
                      this case products of different sellers can be displayed

                      using one single product card in shop. This parameter, if
                      set, identifies to which product in shop system this

                      product of seller belongs to.
                    type: string
                    example: KMPWJ5
                    readOnly: true
                  sellerId:
                    type: integer
                    example: 252
                    readOnly: true
                  productSetId:
                    type: integer
                    example: 744
                    readOnly: true
                  approvalStatus:
                    type: string
                    description: Product approval status
                    example: approved
                    readOnly: true
                    enum:
                      - pending
                      - approved
                      - rejected
                  updatedByUserId:
                    type: integer
                    example: 8732
                    readOnly: true
                  status:
                    description: Product status
                    type: string
                    example: active
                    enum:
                      - active
                      - inactive
                      - deleted
                  variation:
                    description: name of variation, usually size like XL, 39, 62.
                    type: string
                    example: '38'
                  taxClassId:
                    description: Tax class Id specific for this particular size.
                    type: integer
                    example: 1
                    readOnly: true
                  shipmentTypeId:
                    description: >-
                      Shipment type Id specific for this particular size. The
                      Value include 1 - warehouse; 2 - dropshipping; 3 -
                      crossdocking;  if the value is empty the variation will be
                      created with the default value of this endpoint
                      /v2/seller-settings with this parameter
                      product_default_shipment_type
                    type: integer
                    example: 1
                  productIdentifier:
                    description: Identifier like EAN, Code-39, etc
                    type: string
                    example: '460232163234'
                  duplicateGroupId:
                    type: integer
                    example: 51
                    readOnly: true
                  srcUpdatedAt:
                    type: string
                    description: >-
                      Datetime when product was last updated(synced) with shop
                      system.
                    format: date-time
                    nullable: true
                    readOnly: true
                  createdAt:
                    type: string
                    format: date-time
                    readOnly: true
                  updatedAt:
                    type: string
                    format: date-time
                    readOnly: true
                  name:
                    type: string
                    description: name of the product
                    example: '1600 Slim Brushed Chrome '
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
    put:
      summary: Update Product
      description: >
        Update a product (variation) of product set. Here you can modify
        variation, status, sellerSku, productIdentifier, shipmentType.  Other
        attributes will be discarded.


        <br><strong>Note</strong>: If you try to delete / undelete a product,
        all other attributes sent in the request will be ignored. You need to
        resend those after the first operation is successful.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Numeric Id of Product
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  description: Product identifier
                  type: integer
                  example: 7865
                  readOnly: true
                uuid:
                  description: Product UUID identifier
                  example: 060cef12-08ef-4ae6-b15e-79398fedc774
                  type: string
                  readOnly: true
                srcId:
                  description: >
                    ID of product in Shop system. If empty means that product
                    was not yet syncronized with Shop and is

                    not visible to end customers.
                  example: '94345'
                  type: string
                  nullable: true
                  readOnly: true
                shopSku:
                  description: >
                    SKU on the shop's side. Usually it is visible to end
                    customer. If value is null, it means that product is not yet

                    syncronized with shop and SKU was not assigned.
                  type: string
                  example: NI464AKLCEZ0
                  nullable: true
                  readOnly: true
                sellerSku:
                  description: >-
                    SKU from seller's side. Should be unique across products of
                    seller.
                  type: string
                  example: shoe-123
                sin:
                  description: >
                    Sometimes several sellers are selling same product. In this
                    case products of different sellers can be displayed

                    using one single product card in shop. This parameter, if
                    set, identifies to which product in shop system this

                    product of seller belongs to.
                  type: string
                  example: KMPWJ5
                  readOnly: true
                sellerId:
                  type: integer
                  example: 252
                  readOnly: true
                productSetId:
                  type: integer
                  example: 744
                  readOnly: true
                approvalStatus:
                  type: string
                  description: Product approval status
                  example: approved
                  readOnly: true
                  enum:
                    - pending
                    - approved
                    - rejected
                updatedByUserId:
                  type: integer
                  example: 8732
                  readOnly: true
                status:
                  description: Product status
                  type: string
                  example: active
                  enum:
                    - active
                    - inactive
                    - deleted
                variation:
                  description: name of variation, usually size like XL, 39, 62.
                  type: string
                  example: '38'
                taxClassId:
                  description: Tax class Id specific for this particular size.
                  type: integer
                  example: 1
                  readOnly: true
                shipmentTypeId:
                  description: >-
                    Shipment type Id specific for this particular size. The
                    Value include 1 - warehouse; 2 - dropshipping; 3 -
                    crossdocking;  if the value is empty the variation will be
                    created with the default value of this endpoint
                    /v2/seller-settings with this parameter
                    product_default_shipment_type
                  type: integer
                  example: 1
                productIdentifier:
                  description: Identifier like EAN, Code-39, etc
                  type: string
                  example: '460232163234'
                duplicateGroupId:
                  type: integer
                  example: 51
                  readOnly: true
                srcUpdatedAt:
                  type: string
                  description: >-
                    Datetime when product was last updated(synced) with shop
                    system.
                  format: date-time
                  nullable: true
                  readOnly: true
                createdAt:
                  type: string
                  format: date-time
                  readOnly: true
                updatedAt:
                  type: string
                  format: date-time
                  readOnly: true
                name:
                  type: string
                  description: name of the product
                  example: '1600 Slim Brushed Chrome '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Product identifier
                    type: integer
                    example: 7865
                    readOnly: true
                  uuid:
                    description: Product UUID identifier
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
                    type: string
                    readOnly: true
                  srcId:
                    description: >
                      ID of product in Shop system. If empty means that product
                      was not yet syncronized with Shop and is

                      not visible to end customers.
                    example: '94345'
                    type: string
                    nullable: true
                    readOnly: true
                  shopSku:
                    description: >
                      SKU on the shop's side. Usually it is visible to end
                      customer. If value is null, it means that product is not
                      yet

                      syncronized with shop and SKU was not assigned.
                    type: string
                    example: NI464AKLCEZ0
                    nullable: true
                    readOnly: true
                  sellerSku:
                    description: >-
                      SKU from seller's side. Should be unique across products
                      of seller.
                    type: string
                    example: shoe-123
                  sin:
                    description: >
                      Sometimes several sellers are selling same product. In
                      this case products of different sellers can be displayed

                      using one single product card in shop. This parameter, if
                      set, identifies to which product in shop system this

                      product of seller belongs to.
                    type: string
                    example: KMPWJ5
                    readOnly: true
                  sellerId:
                    type: integer
                    example: 252
                    readOnly: true
                  productSetId:
                    type: integer
                    example: 744
                    readOnly: true
                  approvalStatus:
                    type: string
                    description: Product approval status
                    example: approved
                    readOnly: true
                    enum:
                      - pending
                      - approved
                      - rejected
                  updatedByUserId:
                    type: integer
                    example: 8732
                    readOnly: true
                  status:
                    description: Product status
                    type: string
                    example: active
                    enum:
                      - active
                      - inactive
                      - deleted
                  variation:
                    description: name of variation, usually size like XL, 39, 62.
                    type: string
                    example: '38'
                  taxClassId:
                    description: Tax class Id specific for this particular size.
                    type: integer
                    example: 1
                    readOnly: true
                  shipmentTypeId:
                    description: >-
                      Shipment type Id specific for this particular size. The
                      Value include 1 - warehouse; 2 - dropshipping; 3 -
                      crossdocking;  if the value is empty the variation will be
                      created with the default value of this endpoint
                      /v2/seller-settings with this parameter
                      product_default_shipment_type
                    type: integer
                    example: 1
                  productIdentifier:
                    description: Identifier like EAN, Code-39, etc
                    type: string
                    example: '460232163234'
                  duplicateGroupId:
                    type: integer
                    example: 51
                    readOnly: true
                  srcUpdatedAt:
                    type: string
                    description: >-
                      Datetime when product was last updated(synced) with shop
                      system.
                    format: date-time
                    nullable: true
                    readOnly: true
                  createdAt:
                    type: string
                    format: date-time
                    readOnly: true
                  updatedAt:
                    type: string
                    format: date-time
                    readOnly: true
                  name:
                    type: string
                    description: name of the product
                    example: '1600 Slim Brushed Chrome '
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/product-set/{productSetId}/group:
    get:
      summary: Get group name of the product set.
      security:
        - oAuth: []
      description: >
        This endpoint return group name of the product set.


        <strong>Note:</strong> If 'product groups' feature is not enabled for
        the seller, an error will be thrown.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '200':
          description: Returns group name of product set.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
        '401':
          description: Unauthorized error
        '403':
          description: Feature is disabled or wrong seller.
        '404':
          description: Product Set not found
      tags:
        - ProductSet
    post:
      summary: Add product to group.
      security:
        - oAuth: []
      description: >
        Add product to group.


        <strong>Note:</strong> If 'product groups' feature is not enabled for
        the seller, an error will be thrown.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: group_name
      responses:
        '201':
          description: Added
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Feature is disabled or wrong seller.
        '404':
          description: Product Set not found
      tags:
        - ProductSet
    delete:
      summary: Remove product set from group.
      security:
        - oAuth: []
      description: >
        Remove product set from group.


        <strong>Note:</strong> If 'product groups' feature is not enabled for
        the seller, an error will be thrown.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '204':
          description: Removed
        '401':
          description: Unauthorized error
        '403':
          description: Feature is disabled or wrong seller.
        '404':
          description: Product Set not found
      tags:
        - ProductSet
  /v2/prices:
    get:
      summary: Get list of multiprices for all products within product set.
      security:
        - oAuth: []
      description: >
        Retrieve the list of prices for products within a specified product set.
        The available filters include `productSetIds`, `productIds`,
        `productUuids`, and `productName`. These filters are combined using the
        OR operator, meaning that any product matching at least one filter
        criterion will be included in the response. The `productName` filter is
        versatile: it searches within product names, product SKUs, and seller
        SKUs, and performs a contains search rather than an exact match.
        **Example:** - If `productSetIds` contains [3872] and `productIds`
        contains [1234], the response will include products that belong to
        either product set 3872 or have the product ID 1234. - If `productName`
        is set to "Sample", the response will include products with names, SKUs,
        or seller SKUs that contain the substring "Sample".
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids
          required: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 3872
              - 549
          allowEmptyValue: false
        - name: productIds[]
          in: query
          description: List of Product ids
          required: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 1234
              - 5678
          allowEmptyValue: false
        - name: productUuids[]
          in: query
          description: List of Product UUIDs
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
            example:
              - 550e8400-e29b-41d4-a716-446655440000
              - 550e8400-e29b-41d4-a716-446655440001
          allowEmptyValue: false
        - name: productName
          in: query
          description: Name of the Product
          required: false
          schema:
            type: string
            example: Sample Product
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productSetId:
                      type: integer
                      example: 432
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          productId:
                            type: integer
                            example: 3333
                          prices:
                            type: array
                            items:
                              type: object
                              properties:
                                price:
                                  type: number
                                  format: float
                                  example: 7.89
                                  description: >
                                    Price of a product.

                                    Might be restricted by maximum or minimum
                                    allowed category price.
                                salePrice:
                                  type: number
                                  format: float
                                  example: 6
                                  nullable: true
                                  description: >
                                    Sale price of a product. Can be added only
                                    if sale price feature is unlocked for the
                                    country.

                                    User settings may forbid user from changing
                                    it.

                                    Country settings may require minimum period
                                    of time product is active before sale price
                                    can be set.

                                    Must be lower than regular price.

                                    Might be restricted by maximum or minimum
                                    allowed category price and by allowed
                                    discount.
                                saleStartDate:
                                  type: string
                                  format: date-time
                                  nullable: true
                                  description: >
                                    Start date of a sale pricing. Can be added
                                    only if sale price feature is unlocked for
                                    the country.

                                    User settings may forbid user from changing
                                    it.

                                    Must be set after 2010-01-01.
                                saleEndDate:
                                  type: string
                                  format: date-time
                                  nullable: true
                                  description: >
                                    End date of a sale pricing. Can be added
                                    only if sale price feature is unlocked for
                                    the country.

                                    User settings may forbid user from changing
                                    it.

                                    Must be set in the future and be further in
                                    time than saleStartDate.
                                country:
                                  type: string
                                  example: ID
                                status:
                                  description: >-
                                    Indicates whether certain product should be
                                    sold in given country.
                                  type: string
                                  example: active
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Price
  /v2/product-set/{productSetId}/prices:
    get:
      summary: Get list of multi prices for all products within product set.
      security:
        - oAuth: []
      description: >
        Get list of multi prices for all products within product set. If the
        price for a product has not been set for a particular country that the
        seller is allowed to sell in, then that country will not be listed.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productSetId:
                      type: number
                      format: integer
                      example: 672
                    productId:
                      type: number
                      format: integer
                      example: 2223
                    price:
                      type: number
                      format: float
                      example: 7.89
                      description: >
                        Price of a product.

                        Might be restricted by maximum or minimum allowed
                        category price.
                    salePrice:
                      type: number
                      format: float
                      example: 6
                      nullable: true
                      description: >
                        Sale price of a product. Can be added only if sale price
                        feature is unlocked for the country.

                        User settings may forbid user from changing it.

                        Country settings may require minimum period of time
                        product is active before sale price can be set.

                        Must be lower than regular price.

                        Might be restricted by maximum or minimum allowed
                        category price and by allowed discount.
                    saleStartDate:
                      type: string
                      format: date-time
                      nullable: true
                      description: >
                        Start date of a sale pricing. Can be added only if sale
                        price feature is unlocked for the country.

                        User settings may forbid user from changing it.

                        Must be set after 2010-01-01.
                    saleEndDate:
                      type: string
                      format: date-time
                      nullable: true
                      description: >
                        End date of a sale pricing. Can be added only if sale
                        price feature is unlocked for the country.

                        User settings may forbid user from changing it.

                        Must be set in the future and be further in time than
                        saleStartDate.
                    country:
                      type: string
                      example: ID
                    status:
                      description: >-
                        Indicates whether certain product should be sold in
                        given country.
                      type: string
                      example: active
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Price
    put:
      summary: Update prices of a product set.
      security:
        - oAuth: []
      description: >
        Use this endpoint to update the prices of a product set. There is no
        need to add unchanged prices and we strongly advise against that.


        Be careful: you need to add an array of json objects here. Only
        `ProductId` and `country` are required in each object. Other values are
        not required, however if you leave them empty they all will be updated
        with null/empty values. The only difference is `status` which remains
        the same as it was originally. If price status is not configured, it
        will always be active.


        <strong>Note:</strong> It may happen that only a portion of the prices
        added are valid and actually updated. If you encounter errors please use
        <em>GET /v2/product-set/{productSetId}/prices</em> to know the values of
        the prices after using this endpoint.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                required:
                  - productId
                  - country
                properties:
                  productId:
                    description: Numeric id of the product
                    type: number
                    example: 5642
                    nullable: false
                  country:
                    description: Country the price should be available in.
                    type: string
                    example: DE
                    nullable: false
                  price:
                    type: number
                    format: float
                    example: 7.89
                    description: >
                      Price of a product.

                      Might be restricted by maximum or minimum allowed category
                      price.
                  salePrice:
                    type: number
                    format: float
                    example: 6
                    nullable: true
                    description: >
                      Sale price of a product. Can be added only if sale price
                      feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Country settings may require minimum period of time
                      product is active before sale price can be set.

                      Must be lower than regular price.

                      Might be restricted by maximum or minimum allowed category
                      price and by allowed discount.
                  saleStartDate:
                    type: string
                    format: date-time
                    nullable: true
                    description: >
                      Start date of a sale pricing. Can be added only if sale
                      price feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Must be set after 2010-01-01.
                  saleEndDate:
                    type: string
                    format: date-time
                    nullable: true
                    description: >
                      End date of a sale pricing. Can be added only if sale
                      price feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Must be set in the future and be further in time than
                      saleStartDate.

                      Also the end date cannot be more than 100 years from now.
                  status:
                    description: >
                      Indicates whether certain product should be sold in given
                      country. In use only in multi-country

                      SellerCenters where you may want to allow or not allow
                      certain product to be sold in certain

                      countries. For example, your catalog has shoes and jackets
                      and you are selling in TW and HK.

                      It can be that your warehouse capacity in TW allow you to
                      store only shoes in this case you

                      can set status to "inactive" for jackets in TW only.


                      In case if it is not present in request body it will be
                      considered as "active" by default.
                    type: string
                    nullable: false
                    default: active
                    enum:
                      - active
                      - inactive
                    example: active
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  productSetId:
                    type: number
                    format: integer
                    example: 672
                  productId:
                    type: number
                    format: integer
                    example: 2223
                  price:
                    type: number
                    format: float
                    example: 7.89
                    description: >
                      Price of a product.

                      Might be restricted by maximum or minimum allowed category
                      price.
                  salePrice:
                    type: number
                    format: float
                    example: 6
                    nullable: true
                    description: >
                      Sale price of a product. Can be added only if sale price
                      feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Country settings may require minimum period of time
                      product is active before sale price can be set.

                      Must be lower than regular price.

                      Might be restricted by maximum or minimum allowed category
                      price and by allowed discount.
                  saleStartDate:
                    type: string
                    format: date-time
                    nullable: true
                    description: >
                      Start date of a sale pricing. Can be added only if sale
                      price feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Must be set after 2010-01-01.
                  saleEndDate:
                    type: string
                    format: date-time
                    nullable: true
                    description: >
                      End date of a sale pricing. Can be added only if sale
                      price feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Must be set in the future and be further in time than
                      saleStartDate.
                  country:
                    type: string
                    example: ID
                  status:
                    description: >-
                      Indicates whether certain product should be sold in given
                      country.
                    type: string
                    example: active
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Price
  /v2/product/{productId}/prices/{country}:
    put:
      summary: Update Product Price for a given country
      description: >-
        No values are required here however if you leave them empty they all
        will be updated with null/empty values. The only difference is `status`
        which remains the same as it was originally. <p>If price status is not
        configured, it will always be active</p>
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Numeric Id of Product
        - in: path
          name: country
          required: true
          schema:
            type: string
          description: Country code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                price:
                  type: number
                  format: float
                  example: 7.89
                  description: >
                    Price of a product.

                    Might be restricted by maximum or minimum allowed category
                    price.
                salePrice:
                  type: number
                  format: float
                  example: 6
                  nullable: true
                  description: >
                    Sale price of a product. Can be added only if sale price
                    feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Country settings may require minimum period of time product
                    is active before sale price can be set.

                    Must be lower than regular price.

                    Might be restricted by maximum or minimum allowed category
                    price and by allowed discount.
                saleStartDate:
                  type: string
                  format: date-time
                  nullable: true
                  description: >
                    Start date of a sale pricing. Can be added only if sale
                    price feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Must be set after 2010-01-01.
                saleEndDate:
                  type: string
                  format: date-time
                  nullable: true
                  description: >
                    End date of a sale pricing. Can be added only if sale price
                    feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Must be set in the future and be further in time than
                    saleStartDate.

                    Also the end date cannot be more than 100 years from now.
                status:
                  description: >
                    Indicates whether certain product should be sold in given
                    country. In use only in multi-country

                    SellerCenters where you may want to allow or not allow
                    certain product to be sold in certain

                    countries. For example, your catalog has shoes and jackets
                    and you are selling in TW and HK.

                    It can be that your warehouse capacity in TW allow you to
                    store only shoes in this case you

                    can set status to "inactive" for jackets in TW only.


                    In case if it is not present in request body it will be
                    considered as "active" by default.
                  type: string
                  nullable: false
                  default: active
                  enum:
                    - active
                    - inactive
                  example: active
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  productSetId:
                    type: number
                    format: integer
                    example: 672
                  productId:
                    type: number
                    format: integer
                    example: 2223
                  price:
                    type: number
                    format: float
                    example: 7.89
                    description: >
                      Price of a product.

                      Might be restricted by maximum or minimum allowed category
                      price.
                  salePrice:
                    type: number
                    format: float
                    example: 6
                    nullable: true
                    description: >
                      Sale price of a product. Can be added only if sale price
                      feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Country settings may require minimum period of time
                      product is active before sale price can be set.

                      Must be lower than regular price.

                      Might be restricted by maximum or minimum allowed category
                      price and by allowed discount.
                  saleStartDate:
                    type: string
                    format: date-time
                    nullable: true
                    description: >
                      Start date of a sale pricing. Can be added only if sale
                      price feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Must be set after 2010-01-01.
                  saleEndDate:
                    type: string
                    format: date-time
                    nullable: true
                    description: >
                      End date of a sale pricing. Can be added only if sale
                      price feature is unlocked for the country.

                      User settings may forbid user from changing it.

                      Must be set in the future and be further in time than
                      saleStartDate.
                  country:
                    type: string
                    example: ID
                  status:
                    description: >-
                      Indicates whether certain product should be sold in given
                      country.
                    type: string
                    example: active
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Price
  /v2/product/{productId}/warehouse/{warehouseId}/stock:
    get:
      summary: Get warehouse stock by product Id and warehouse Id
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Numeric Id of Product
        - in: path
          name: warehouseId
          required: true
          schema:
            type: integer
          description: Numeric Id of Warehouse
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - quantity
                properties:
                  quantity:
                    type: integer
                    nullable: false
                    example: 144
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Warehouse Product Stock
    post:
      summary: Update warehouse stock by product Id and warehouse Id
      security:
        - oAuth: []
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Numeric Id of Product
        - in: path
          name: warehouseId
          required: true
          schema:
            type: integer
          description: Numeric Id of Warehouse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - quantity
              properties:
                quantity:
                  type: integer
                  nullable: false
                  example: 144
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - quantity
                properties:
                  quantity:
                    type: integer
                    nullable: false
                    example: 144
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Warehouse Product Stock
  /v2/product-quality-control/rejected:
    get:
      summary: Get information about rejected product sets.
      security:
        - oAuth: []
      description: >
        In cases if your product missing some required information, it may be
        automatically rejected until this information is provided. Also, your
        product set can have all required fields but can be rejected by person
        who is doing Quality Control.


        Examples of automatically rejection: images not uploaded, description is
        too short. Examples of manual rejection reasons: description is not
        original, paragraph spacing is incorrect.

        Using this endpoint you can receive information about reasons why
        certain product set was rejected.


        Please, note that if you request data about product set that you don't
        have permissions to view, then result will be 403 error.
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids.
          required: true
          schema:
            type: array
            items:
              type: integer
            example:
              - 54
              - 497
              - 698
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Rejected ProductSet
                  type: object
                  properties:
                    productSetId:
                      description: numeric ID of ProductSet
                      example: 68
                      type: integer
                    rejectedReasons:
                      description: >-
                        list of human-readable reasons why ProductSet was
                        rejected
                      example:
                        - Images missing
                        - Wrong category
                      type: array
                      items:
                        type: string
                    qcComment:
                      description: >-
                        It is possible, but not mandatory for the QC person to
                        add a comment on the rejection.
                      type: string
                      example: Some field was wrong
                  required:
                    - productSetId
                    - rejectedReasons
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/product-set/quality-control-status:
    get:
      summary: Get information about quality control status of the ProductSet
      security:
        - oAuth: []
      description: >
        Using this endpoint you can receive status for the specific set of
        ProductSet. Status can have 3 values: approved, rejected or pending.
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids
          required: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 3872
              - 549
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productSetId:
                      type: integer
                    status:
                      type: string
                      enum:
                        - approved
                        - rejected
                        - pending
                    createdAt:
                      type: string
                      format: date-time
                      nullable: false
                  example:
                    productSetId: 3872
                    status: pending
                    createdAt: '2023-04-12 13:34:12'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/product-set/images-by-sku:
    get:
      tags:
        - Product Image
      summary: Internal! Get the url of main images by product shop SKU or Seller SKU.
      security:
        - oAuth: []
      description: >
        Internal! Get the url of main images by product shop SKU or Seller SKU.
        If the SKU does not exist or is from another seller the main url will be
        null. Maximum 100 product SKUs. You are free to use this endpoint, but
        in this endpoint there could be breaking changes without notice.
      parameters:
        - name: productSkus[]
          in: query
          description: Search by product shop SKU or Seller SKU
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - TS123456
              - 3451TL
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productSetId:
                      type: integer
                      nullable: false
                      example: 5
                    shopSku:
                      description: >
                        SKU on the shop's side. Usually it is visible to end
                        customer. If value is null, it means that product is not
                        yet

                        synchronized with shop and SKU was not assigned.
                      type: string
                      example: NI464AKLCEZ0
                      nullable: false
                      readOnly: true
                    sellerSku:
                      description: >
                        SKU from seller's side. Should be unique across products
                        of seller.
                      type: string
                      example: shoe-123
                    mainImageUrl:
                      type: string
                      nullable: true
                      example: https://example.com/image-1.jpg
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/seller-rating:
    get:
      summary: Get Seller's rating
      security:
        - oAuth: []
      parameters:
        - in: query
          name: from
          required: false
          schema:
            type: string
            format: date-time
            example: '2020-01-01'
          description: Filter Seller Rating period from
        - in: query
          name: to
          required: false
          schema:
            type: string
            format: date-time
            example: '2023-01-01'
          description: Filter Seller Rating period to
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    overallScore:
                      description: Overall rating of seller
                      type: number
                      format: float
                      example: 10
                    endDate:
                      description: Seller rating's end date
                      type: string
                      format: date-time
                      example: '2022-05-22T23:59:59+00:00'
                    calculationDate:
                      description: Seller rating's calculation date
                      type: string
                      format: date-time
                      example: '2022-05-22T23:59:59+00:00'
                    kpis:
                      description: List of KPIs
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            description: name of the KPI
                            type: string
                            example: Average Business Delivery Time From Shipped
                          period:
                            description: calculation period of the KPI by day
                            type: integer
                            example: 30
                          kpiValue:
                            description: KPI value
                            type: number
                            format: float
                            example: 1
                          kpiUnit:
                            description: unit KPI value
                            type: string
                            example: hrs
                          rating:
                            description: KPI rating
                            type: string
                            example: Extremely Good
                          score:
                            description: KPI score
                            type: number
                            format: float
                            example: 1
                          weight:
                            description: KPI weight
                            type: number
                            format: float
                            example: 10
                          sellerRatingScore:
                            description: Actual score per KPI
                            type: number
                            format: float
                            example: 10
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller-statistics:
    get:
      summary: Get Seller's statistics
      description: >
        This endpoint can be used if you are using GetStatistics endpoint in old
        API. There is a plan to 

        have substitution for this endpoint which will provide you access to
        more detailed 

        reporting information.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    LastDataUpdate:
                      description: >-
                        As response is cached, this value informs you on
                        datetime when statistics were gathered.
                      type: string
                      format: date-time
                      example: '2022-05-22T23:59:59+00:00'
                    result:
                      description: Seller rating's end date
                      type: object
                      properties:
                        Products:
                          type: object
                          properties:
                            Total:
                              type: integer
                              description: Total number of products
                              example: 131
                            Status:
                              type: object
                              properties:
                                Active:
                                  description: Number of active products
                                  type: string
                                  example: 22
                                All:
                                  description: Number of all products
                                  type: string
                                  example: 32
                                Deleted:
                                  description: Number of deleted products
                                  type: string
                                  example: 2
                                ImageMissing:
                                  description: Number of products with image missing
                                  type: string
                                  example: 5
                                Inactive:
                                  description: Number of inactive products
                                  type: string
                                  example: 3
                                Live:
                                  description: Number of live products
                                  type: string
                                  example: 4
                                Pending:
                                  description: Number of product pending
                                  type: string
                                  example: 8
                                PoorQuality:
                                  description: Number of products with poor quality
                                  type: string
                                  example: 9
                                SoldOut:
                                  description: Number of sold out products
                                  type: string
                                  example: 15
                        Orders:
                          type: object
                          properties:
                            Status:
                              type: object
                              properties:
                                Canceled:
                                  description: Number of canceled orders
                                  type: integer
                                Delivered:
                                  description: Number of delivered orders
                                  type: integer
                                Digital:
                                  description: Number of digital orders
                                  type: integer
                                Economy:
                                  description: >-
                                    Number of Economy shipping type status
                                    orders
                                  type: integer
                                Express:
                                  description: >-
                                    Number of Express shipping type status
                                    orders
                                  type: integer
                                Failed:
                                  description: Number of failed orders
                                  type: integer
                                NoExtInvoiceKey:
                                  description: >-
                                    Number of orders with no external invoice
                                    key
                                  type: integer
                                NotPrintedPending:
                                  description: Number of not printed pending orders
                                  type: integer
                                NotPrintedReadyToShip:
                                  description: Number of not printed ready to ship orders
                                  type: integer
                                Pending:
                                  description: Number of pending orders
                                  type: integer
                                ReadyToShip:
                                  description: Number of ready to ship orders
                                  type: integer
                                ReturnRejected:
                                  description: Number of orders with return rejected
                                  type: integer
                                ReturnShippedByCustomer:
                                  description: Number of orders shipped by the customer
                                  type: integer
                                ReturnWaitingForApproval:
                                  description: >-
                                    Number of orders with return waiting for
                                    approval
                                  type: integer
                                Returned:
                                  description: Number of returned orders
                                  type: integer
                                Shipped:
                                  description: Number of shipped orders
                                  type: integer
                                Standard:
                                  description: Number of orders with Standard shipping type
                                  type: integer
                            Total:
                              type: integer
                              example: 12
                              description: Total number of orders
                        OrdersItemsPending:
                          type: object
                          properties:
                            Today:
                              description: Number of order items pending in the last 24h
                              type: integer
                            Yesterday:
                              description: Number of order items pending in the last 48h
                              type: integer
                            Older:
                              description: Number of order items pending for more than 48h
                              type: integer
                        AccountHealth:
                          type: object
                          properties:
                            Day:
                              type: object
                              properties:
                                TwoDaysShippedPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders shipped within 48h
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                ReturnPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders returned
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                CancellationPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of order canceled
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                            Week:
                              type: object
                              properties:
                                TwoDaysShippedPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders shipped within 48h
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                ReturnPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders returned
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                CancellationPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of order canceled
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                            Month:
                              type: object
                              properties:
                                TwoDaysShippedPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders shipped within 48h
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                ReturnPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders returned
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                CancellationPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of order canceled
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                            Alltime:
                              type: object
                              properties:
                                TwoDaysShippedPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders shipped within 48h
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                ReturnPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders returned
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                CancellationPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of order canceled
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                            Year:
                              type: object
                              properties:
                                TwoDaysShippedPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders shipped within 48h
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                ReturnPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of orders returned
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
                                CancellationPercentage:
                                  type: object
                                  properties:
                                    Percentage:
                                      description: Percent of order canceled
                                      type: number
                                      format: float
                                    Text:
                                      description: A text label for the percentage grade
                                      type: string
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller-metrics:
    get:
      summary: Get Seller's metrics
      description: >
        This endpoint can be used if you are using GetMetrics endpoint in old
        API. There is a plan to 

        have substitution for this endpoint which will provide you access to
        more detailed 

        reporting information.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    statistic_type:
                      type: string
                      enum:
                        - year
                        - month
                        - week
                        - day
                        - alltime
                    sku_number:
                      type: integer
                    sku_active_number:
                      type: integer
                    sales_total:
                      type: number
                      format: float
                    orders:
                      type: integer
                    commissions:
                      type: number
                      format: float
                    two_day_shipment_percentage:
                      type: number
                      format: float
                    returns_percentage:
                      type: number
                      format: float
                    cancellations_percentage:
                      type: number
                      format: float
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller-rating/custom-kpi:
    put:
      summary: Update seller custom KPIs
      security:
        - oAuth: []
      description: |
        Update seller custom KPIs for seller rating
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  externalKpiName:
                    type: string
                    example: Operational Score
                  sellerShortCode:
                    type: string
                    example: NG1003C
                  value:
                    type: number
                    format: float
                    example: 50
                    minimum: 0.01
                    maximum: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  externalKpiName:
                    type: string
                    example: Operational Score
                  sellerShortCode:
                    type: string
                    example: NG1003C
                  value:
                    type: number
                    format: float
                    example: 50
                    minimum: 0.01
                    maximum: 100
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller-settings:
    get:
      summary: Get seller's settings
      security:
        - oAuth: []
      description: >
        The response is the combination of configuration parameters and seller
        settings. Use this endpoint in case if you are developing some general
        integration solution with SellerCenter (integration for several sellers,
        own UI, mobile app).


        Please, keep in mind that settings and configuration is subject of
        change: new settings will be added in future, some settings may be
        removed (usually not used anymore or settings which are the same for all
        sellers).


        Values can be null, numeric, string, or array (numeric or string
        including JSON) depending on what was filled.

        - **enable_additional_browse_nodes:** 0/1; when enabled seller can
        manage "Browse nodes" in product sets.

        - **browse_nodes/amount:** integer; defines maximum amount of "Browse
        nodes" in product sets.

        - **enable_additional_categories_display** 0/1; when enabled you are
        able to set "additional categories" for product sets.

        - **enable_product_groups** 0/1; indicates whether "product groups"
        feature is enabled and whether section "Group" is displayed in UI of
        SellerCenter

        - **product_text_editor** 0/1/2; When value is 0 or 1 then WYSIWYG
        editor is displayed for product attributes of type "textarea". If 2 -
        plain text editor will be used.

        - **enable_mandatory_product_images** 0/1; indicates whether images for
        products are optional for this seller. When 0 - images are not
        mandatory; when 1 - images are mandatory. See also
        "without_images/feature_switch/enabled".

        - **product:without_images/feature_switch/enabled** 0/1; 0 - images are
        always mandatory across all sellers; 1 - mandatoryness of images can be
        set per seller.

        - **sale_price_block_period_days** - integer amount of days sale price
        is blocked. For example, you set special price to be from 05.12 till
        23.12 and settings sale_price_block_period_days is 5. Then until 10.12
        you won't be able to change special price.

        - **non_editable_attributes_edition_allowed** 0/1; some attributes of
        product sets has flag "is edition by seller blocked". It means that
        attribute can be set during creation of product set but can not be
        changed in future. If this setting is "1" and your user has access to
        ACL resource "non_editable_product_attributes_write", then you are able
        to edit those "non-editable attributes".

        - **product_sales_price_date_hour_toggle** 0/1; whether or not sale
        price for products can include hours and minutes.

        - **product_default_shipment_type** - 1 - warehouse; 2 - dropshipping; 3
        - crossdocking;

        - **core:product/allow_shipment_type_change/enabled** 0/1 - when
        disabled you are able to change shipment type only for products that
        were not synced with shop system yet.

        - **core:consignment/consignment_only_product/enabled** 0/1 - if
        "consignment only products" feature is disabled then edition of shipment
        type is not allowed at all.

        - **dropdown_options_sort_order** 0 - options for attributes should be
        displayed in alphabetical order; 1 - options should be displayed ordered
        by "position" of options.

        - **enable_product_price_level** 0/1; when enabled different prices can
        be set for products in same product set. When disabled, then same price
        applies to all products in products set. In this case when you change
        price for one product, prices for other products in same product set got
        changed automatically.

        - **catalog:attribute/groupname_order** - comma-separated list of
        attribute groups. This is useful when you implement own UI for
        SellerCenter and want to display product set attributes grouped. Order
        in which groups are presented in this config value represents desired
        way how they should be displayed for end user. If group is not included
        in this list, then this group should be displayed after groups listed in
        this value.

        - **core:category/min_level** - integer; minimum Category level on which
        you can add products. For example, when value is 2, you are not able to
        add product to root category and any direct successor of root.

        - **core:product/display_shop_link** - 0/1; this config is used when you
        want to display or get URL of product set that is visible to end users
        (shoppers). 0 means that providing link is not possible. 1 - link should
        be formed like `{{ shopUrl }}/{{ productSetSrcId }}.html`.

        - **core:content_score/enabled** - 0/1; whether or not "Content Score"
        feature enabled. Even if enabled, it depends on category configuration:
        when there is no configuration of content score for specific category,
        then content score is considered as maximum.

        - **core:product/combined_rejected_list/enabled** 0/1; enables combined
        view for products demanding attention from seller. It tell whether
        filters "Image Missing" and "Poor Quality" should be displayed
        separately or combined. You may use this setting if implement own UI for
        SellerCenter.

        - **allow_removal_of_sizes_for_hybrid_product_set** - 0/1; when disabled
        then you can not remove size from "Hybrid" ("Size refill") product sets,
        but you can mark them inactive or set stock to 0.

        - **enable_skipping_images_hybrid_products** - 0/1; when enabled, you
        don't require to upload any images for "Hybrid" ("Size refill") product
        sets

        - **product:decimal_prices_handling/enabled** - 0/1; When 0 - decimals
        are enabled with maximum 2 digits. Sending  price with more decimals
        will cause validation error. When 1 - see "enable_decimal_prices".

        - **enable_decimal_prices** - 1/2/3; 1 - decimal prices enabled with
        precision of 2 decimal signs. 2 - decimal prices enabled but are rounded
        mathematically to integers. 3 - decimal prices enabled but are rounded
        down to integers.

        - **core:brand/scale_mapping/enabled** - more details about this
        parameter can be found in documentation of
        "/v2/brands/{brandId}/attributes" endpoint.

        - **core:brand/scale_mapping/attribute** - more details about this
        parameter can be found in documentation of
        "/v2/brands/{brandId}/attributes" endpoint.

        - **image_min_height** - defining the minimum height of product images
        in pixels. If you try to upload image that does not satisfy this
        criteria there will be validation error thrown. In some countries it
        could be that requirements for minimum and maximum are the same, in this
        case only images with exact this height are allowed.

        - **image_max_height** - defining the maximum height of product images
        in pixels. If you try to upload image that does not satisfy this
        criteria there will be validation error thrown. In some countries it
        could be that requirements for minimum and maximum are the same, in this
        case only images with exact this height are allowed.

        - **image_min_width** - defining the minimum width of product images in
        pixels. If you try to upload image that does not satisfy this criteria
        there will be validation error thrown. In some countries it could be
        that requirements for minimum and maximum are the same, in this case
        only images with exact this width are allowed.

        - **image_max_width** - defining the maximum width of product images in
        pixels. If you try to upload image that does not satisfy this criteria
        there will be validation error thrown. In some countries it could be
        that requirements for minimum and maximum are the same, in this case
        only images with exact this width are allowed.

        - **core:allow_empty_price_product/enabled** - when enabled price can be
        empty when you edit or create products.

        - **core:price_update_csv/enabled** - when enabled price update csv
        download format is available.

        - **enable_seller_promotions** - seller can create promotions when
        setting is enabled. No impact on Admin created promotions!

        - **enable_multi_warehouse** - 0 - no; 1 - yes; When enabled we use
        multi warehouse feature in terms of stocks. Please take into
        consideration `core:seller/multi_warehouse/enabled` value which is the
        global feature switch for this feature. In case global value is disabled
        `enable_multi_warehouse` can still return 1 or 2 value so it's important
        to check also a global one. This setting can be also missing in the
        response once the main feature switch is disabled and no value for
        seller was ever set.

        - **core:seller/multi_warehouse/enabled** - 0 - disabled, 1 - enabled. A
        global switch to enable or disable multi warehouse feature.

        - **consignment_request_delivery_type** - defines for the seller, how
        they can send their products to the warehouse. Either someone picks it
        up at the seller's warehouse, or the products get send to $shopName
        warehouse.

        - **consignment_return_request_delivery_type** - defines for the seller,
        how they can return their products from the warehouse. Either someone
        picks it up at the seller's warehouse, or the products get send to
        $shopName warehouse.

        - **allow_shipping_label_generation** - 0 - no; 1 - yes; during order
        processing seller can print the shipping labels. Templates-generation is
        also based on this setting.

        - **allow_invoice_generation** - 0 - no; 1 - yes; during order
        processing Seller can print the invoices and also autogenerate them in
        the SC background. Templates-generation is also based on this setting

        - **enable_returns_from_warehouse** whether the seller can receive or
        not returned items directly from customer  or seller can ask the
        venture’s warehouse to return his items.  0 - None; 1 - Seller can
        return items from warehouse;  2 - Seller can receive returned items from
        customer;  3 - Seller can directly mark items as returned;

        - **order_invoice_access_key_enabled** - 0 - no; 1 - yes; adds the
        ability for the seller to upload the Invoice Access Key for his orders.

        - **mandatory_invoice_access_key** - 0 - no; 1 - yes; if enabled the
        usage of Invoice Access Key is mandatory.

        - **promise_shipping_time** -
        "none"/"shipping_speed"/"promise_shipping_time"; enables and decides
        which policy will be used to display and calculate the promised shipping
        time. These options will be shown on order management overview.

        - **enable_display_customer_phone_num** - 0 - no; 1 - yes; this setting
        enables the display of the customer phone number in order details or
        export of order details.

        - **order_allow_cancellation_in_ready_to_ship** - 0 - no; 1 - yes;
        select if it should be possible to cancel order items, in the status
        &quot;Ready to Ship&quot;

        - **enable_display_customer_email** - 0 - no; 1 - yes; this setting
        enables the display of the customer e-mail in order details or export of
        order details - on global level.

        - **enable_display_last_mile_shipping_provider** - 0 - no; 1 - yes; this
        setting enables the display of the last mile shipping provider in
        shipping label

        - **available_languages** - [{"id_language": int, "code": string,
        "name": string, "active": int}]; A list of languages that are available
        for the seller

        - **display_product_total** - 0 - no; 1 - yes; display of product total
        in the order details page.

        - **display_paid_price** - "0" - no; "1" - yes; displaying paid price
        field in order details page.

        - **manifest_enabled** - 0 - no; 1 - yes; seller create Manifest.

        - **manifest_dropshipping_enabled** - 0 - no; 1 - yes; seller can set
        Dropshipping Orders to be Manifested. (Allow Manifest Creation must be 1
        for this to apply)!

        - **milkrun_document_required** - 0 - no; 1 - yes; seller is required to
        upload agreement document that region can handle the shipment on behalf
        of the Seller.

        - **enable_sales_order_documents** - 0 - no; 1 - yes; seller can upload
        eDocument when setting is enabled.

        - **link_to_new_product_module_enabled** - temporary setting which
        defines whether current seller should see link to new Product UI. 0 -
        no, 1 - yes. Please, note that this setting will be removed in future.

        - **core:shop/url** - URL (domain) of shop. This may be useful if you
        want to generate links to your  products.

        - **product:shop_search_url** - URL (domain) of searching in shop. For
        opening products from products page in shop

        - **allow_seller_change_preselected_shipping_provider** - yes/no - Tells
        whether the Seller can change the Shipping Provider even if it has been
        preselected. For example, in the case that it has been accepted from OMS
        / WMS.

        - **order/blocked_states** - A comma separated list of order states that
        a seller should not be able to set an order to. Example:
        delivered,returned

        - **order/bulk_status_to_shipped/enabled** - 0 - off; 1 - on; enable
        bulk order status change to shipped.

        - **order/bulk_status_to_delivered/enabled** - 0 - off; 1 - on; enable
        bulk order status change to delivered.

        - **product_creation_template_type** - 1 - only "light" template is
        available for export.  2 - only "full" template is available for export.
        3 - both templates are available for export,  user can pass parameter
        "template_type" to choose which one to use.  If parameter is not passed,
        "full" template is used by default. When you develop UI for
        SellerCenter, in case if both templates are available you can either
        choose some default type or ask user to choose which one to use.

        - **hybrid_depth_search/enabled** - 0 - off; 1 - on; enable searching of
        SizeRefill products.

        - **transactions/include_wht_in_amount** - 0 - off; 1 - on; include
        Withholding Tax into transaction amount calculation.

        - **display_vat_on_payout_overview** - 0 - off; 1 - on; Displays the VAT
        amount as a separate line on Account Statement Overview.

        - **display_wht_on_payout_overview** - 0 - off; 1 - on; Displays the WHT
        amount as a separate line on Account Statement Overview.

        - **commissions_fees_visibility** - Choose fees/commission values from
        transaction rule engine that you want to configure to display to seller
        in Your Profile area.

        - **tax_invoice_template** - Account Statement Printed Document.

        - **fk_shipping_type** - Allowed shipping types for seller. 2 -
        Dropshipping, 3 - Cross docking, 23 - Default Dropshipping allow Cross
        docking, 32 - Default Cross docking allow Dropshipping

        - **new_ui_cut_date** - `YYYY-MM-DD` date. If set then sellers created
        after this date will be redirected from the old product UI to the new
        UI. An empty string means no redirection.

        - **seller_help_desk/enabled** - The value shows, whether the link to
        the Help Desk page is displayed.

        - **api/explorer/api_url** - Base API url configuration value.

        - **order/installment_fee_enabled** - 0 - off; 1 - on; Show the
        installment fee received during order creation in the order details page
        in an extra item column and in the total calculation.

        - **product:ui_access** - Product: Which UIs should be visible for the
        seller. Values: 1 - only_classic, 2 - both, 3 - only_new.

        - **order:ui_access** - Order: Which UIs should be visible for the
        seller. Values: 1 - only_classic, 2 - both, 3 - only_new.

        - **core:pickup_request/enabled** - 0 - disabled, 1 - enabled. A global
        switch to enable or disable pickup request feature.

        - **enable_inventory_report** - 0 - no, 1 - yes. Enable/disable the
        seller inventory report.

        - **enable_operations_report** - 0 - no, 1 - yes. Enable/disable the
        seller operations report.

        - **enable_promotions_report** - 0 - no, 1 - yes. Enable/disable the
        seller promotions report.

        - **enable_sales_report** - 0 - no, 1 - yes. Enable/disable the seller
        sales report.

        - **enable_traffic_report** - 0 - no, 1 - yes. Enable/disable the seller
        traffic report.

        - **core:shop/name** - The name of the Shop.

        - **enable_size_refill** - Enable Size Refill / Hybrid Product search on
        “Add Products” screen.

        - **all_products_in_product_set_have_same_price** 0/1; when disabled
        different prices can be set for products in same product set. When
        enabled, then same price applies to all products in products set. In
        this case when you change price for one product, prices for other
        products in the same product set will be changed automatically.

        - **core:multiple/account_statement/enabled** - Enables the usage that
        seller can have different account statement types. Currently marketplace
        and consignment exists.

        - **product:images_management_ui_access** - Images Management section:
        Which UIs should be visible for the seller.  Values: 1 - only_classic, 2
        - both, 3 - only_new.

        - **enable_master_product_export** - Values yes/no. Enable/disable the
        master product export. Master Product excel is integrating all the
        attributes across different attribute sets into a single, static product
        import creation template

        - **sale_price_discount** - The possible steps (percentages) a sale
        price can be discounted based on the current price. If empty string then
        seller can use its own percentage.

        - **core:faq_help_link/enabled** - FAQ is shown under help menu. (1 ==
        on, 0 == off)

        - **core:faq_help_link/external_link"** - Specifies the URL of the FAQ
        page, if empty it will be linkable to the internal FAQ page, otherwise
        to the target specified

        - **core:help_link/getting_started_link"** - Link for the Getting
        Started Help (used if defined)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                example:
                  document_number: null
                  allow_shipping_fees: 1
                  omnibar_search_enabled: 1
                  payment/provider/enabled: '0'
                  fee_cancellation_enabled: '1'
                  daily_order_limit: 10000
                  max_number_of_notifications: 30
                  format/date: MMM d, yyyy
                  format/time: HH:mm
                  sale_price_discount: 10,15,20,25,30,35,40,45,50,60
                  help_link/getting_started_link: ''
                  weekend_days:
                    - '6'
                    - '7'
                  fee_cancellation_settings:
                    - '1':
                        p: 0
                        m: 0
                        x: 0
                    - '2':
                        p: 0
                        m: 0
                        x: 0
                  product_available_properties: '{"production":[]}'
                  available_languages: >-
                    [{"id_language": 142, "code": "en_150", "name": "English
                    (Europe)", "active": 1}, {"id_language": 1, "code": "en_US",
                    "name": "English", "active": 1}]
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller-configuration-fields:
    get:
      summary: Get seller's configuration fields
      security:
        - oAuth: []
      description: >
        The list of Seller's configuration fields.

        Every response consists of a list of the object with the same structure:

        - **id**: Unique filed identifier (integer) 

        - **fieldName**: Name of the field (string)

        - **fieldPosition**: Position of the field (integer), starts from 0

        - **groupName**: Name of the field's group (string)

        - **groupPosition**: Position of the field's group (integer), starts
        from 0

        - **type**: Type of the field, example (string)

        - **isEnabled**: Flag defines if the field is enable or not (boolean)

        - **isEnabledFieldLocked**: When this flag is enabled the `isEnabled`
        property cannot be changed (boolean)

        - **isMandatory**: Flag defines if the field is mandatory (boolean)

        - **isMandatoryLocked**: When this flag is enabled the `isMandatory`
        property cannot be changed (boolean)

        - **isEditable**: Flag defines if the field can be changed (boolean)

        - **isQCNeeded**: Flag defines if the field needs to be sent to Quality
        Control (boolean)

        - **isSentToShop**: Flag defines if the field should be sent to Shop
        (boolean)

        - **isSentToShopLocked**: When this flag is enabled the `isSentToShop`
        property cannot be changed (boolean)

        - **isUsedInConsignmentFormulas**: When this flag is enabled it indicate
        attribute used in consignment formulas (boolean)

        - **fieldIdentifier**: Name of the field for programmatic identification
        (string)

        - **options**: List of a field options, it's an empty array once there
        are no options defined or a field is not a dropdown (array)

        - **visibleOnlyToConsignmentSellers**: Flag defines if the field is
        visible/editable only to consignment sellers  (boolean).
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 1
                    fieldName: Address 1
                    fieldPosition: 0
                    groupName: Business Information
                    groupPosition: 0
                    type: Text
                    isEnabled: true
                    isEnabledFieldLocked: true
                    isMandatory: false
                    isMandatoryLocked: false
                    isEditable: true
                    isQCNeeded: false
                    isSentToShop: true
                    isSentToShopLocked: true
                    isUsedInConsignmentFormulas: true
                    fieldIdentifier: account_manager
                    options:
                      - 'Yes'
                      - 'No'
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller-contracts/pending:
    get:
      summary: Get pending seller contracts
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    contractId:
                      description: Id of the contract
                      type: integer
                      example: 123
                    sellerId:
                      description: Id of the seller
                      type: integer
                      example: 123
                    type:
                      description: Type of the contract
                      type: string
                      enum:
                        - terms
                        - contract
                    url:
                      description: Url of the contract file
                      type: string
                      example: https://example.com/contract.pdf
                    approvedAt:
                      type: string
                      format: date-time
                      nullable: true
                      description: Date and time when the contract was approved
                      example: '2022-11-01 03:33:47'
                    createdAt:
                      type: string
                      format: date-time
                      description: Date and time when the contract was created
                      example: '2022-11-01 03:33:47'
                    updatedAt:
                      type: string
                      format: date-time
                      description: Date and time when the contract was last updated
                      example: '2022-11-01 03:33:47'
                    expirationDate:
                      type: string
                      format: date-time
                      description: Date and time when the contract will expire
                      example: '2022-11-01 03:33:47'
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - SellerContract
  /v2/seller-contracts/accept:
    post:
      description: Accept seller contracts
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contractIds
              properties:
                contractIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 123456
                    - 654321
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - contractIds
                properties:
                  contractIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - SellerContract
  /v2/stock/product:
    put:
      summary: Update stock of one or more existing products.
      security:
        - oAuth: []
      description: >
        Please update the stock only if it was really changed.


        This is a synchronous update endpoint that has a small limit (100) of
        products that can be updated. If you need to update a larger number of
        products you can use the asynchronous endpoints:
        <code>/v2/import/stock-update</code> (csv file) or
        <code>/v2/import/product-stock-update-xml</code> (xml file), or you can
        send requests in chunks with maximum 100 elements in each request. 


        Pay attention to the payload - you need to add an array of objects. In
        every object use the `productId` of the variation level to update your
        product stock.  To know what is the `product id` of the variation you
        can use the endpoint `/v2/product-set/{productSetId}/products`, the `id`
        is the `productId`.

        If a product is fulfilled by venture a stock update is not possible.


        If some of the products cannot be updated they will be ignored and only
        the others will be updated. In the response, there will be a list of
        those ignored products, the update of which has failed.
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  productId:
                    type: integer
                    example: 5283
                    description: Numeric ID of a product.
                  quantity:
                    type: integer
                    example: 12
                    description: The current level of inventory for this product.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                      example: 5283
                      description: Numeric ID of a product.
                    quantity:
                      type: integer
                      example: 12
                      description: The current level of inventory for this product.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductStock
  /v2/stock/product/{productId}:
    get:
      summary: >-
        Get stock for a Product, with consignment and multi-warehouse depending
        on the configuration
      security:
        - oAuth: []
      description: >
        Use the `productId` of the variation level to get your product stock. 
        To know what is the `product id` of the variation you can use the
        endpoint `/v2/product-set/{productSetId}/products` the `id` is the
        `productId`.
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: integer
          description: Numeric Id of Product
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  shopSku:
                    description: >-
                      SKU on the shop's side. Usually it is visible to end
                      customer. If value is null, it means that product is not
                      yet syncronized with shop and SKU was not assigned.
                    type: string
                    example: NI464AKLCEZ0
                    nullable: true
                  sellerSku:
                    description: >-
                      SKU from seller's side. Should be unique across products
                      of seller.
                    type: string
                    example: shoe-123
                  name:
                    description: Product's name
                    type: string
                    example: Block Shell Jacket
                  quantity:
                    description: >-
                      The sellable stock in the Seller warehouse. This is
                      current quantity from catalog product table.
                    type: integer
                    example: 63
                  reservedStock:
                    description: >-
                      The product stock from Pending or Ready to Ship order
                      items where shipment type is drop-shipping or
                      cross-docking.
                    type: integer
                    example: 11
                  preVerificationStock:
                    description: The product stock in PreVerification
                    type: integer
                    example: 11
                  available:
                    description: >-
                      AvailableStock = (Quantity + ReceivedConsignment +
                      CanceledConsignment + ReturnedConsignment +
                      FailedConsignment - ReservedStock). If PreVerification
                      stock is enabled and is higher than ReservedStock when the
                      formula is: AvailableStock = (Quantity +
                      ReceivedConsignment + CanceledConsignment +
                      ReturnedConsignment + FailedConsignment -
                      PreverificationStock)
                    type: integer
                    example: 12
                  consignments:
                    description: >-
                      It will be populated if Seller Settings is activated
                      (Seller Settings->Order Processing->Fulfilment by Venture)
                      and If at least one consignment stock is higher than 0
                      (e.g receivedConsignment > 0)
                    nullable: true
                    type: object
                    properties:
                      received:
                        description: Received consignment stock
                        type: integer
                      quarantined:
                        description: Quarantined consignment stock
                        type: integer
                      defective:
                        description: Defective consignment stock
                        type: integer
                      canceled:
                        description: Canceled consignment stock
                        type: integer
                      returned:
                        description: Returned consignment stock
                        type: integer
                      failed:
                        description: Failed consignment stock
                        type: integer
                  sellableStock:
                    description: >-
                      ReceivedConsignment + CanceledConsignment +
                      ReturnedConsignment + FailedConsignment
                    type: integer
                    example: 101
                  nonSellableStock:
                    description: QuarantinedConsignment + DefectiveConsignment
                    type: integer
                    example: 2
                  warehouses:
                    description: >-
                      It will be populated if feature switch is enabled
                      (core:seller/multi_warehouse/enabled) and Seller Settings
                      is activated (Seller Settings->Product Management->Enable
                      multi-warehouse usage) and If the warehouse stock is
                      higher than 0.
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          description: Warehouse Name
                          type: string
                          example: Central Warehouse
                        stock:
                          description: Warehouse stock
                          type: integer
                          example: 89
                        warehouseId:
                          description: Warehouse id
                          type: integer
                          example: 1
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductStock
  /v2/stock/product-set/{productSetId}:
    get:
      summary: >-
        Get list of stock for Products based on product set, with consignment
        and multi-warehouse depending on the configuration
      security:
        - oAuth: []
      description: ''
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    shopSku:
                      description: >-
                        SKU on the shop's side. Usually it is visible to end
                        customer. If value is null, it means that product is not
                        yet syncronized with shop and SKU was not assigned.
                      type: string
                      example: NI464AKLCEZ0
                      nullable: true
                    sellerSku:
                      description: >-
                        SKU from seller's side. Should be unique across products
                        of seller.
                      type: string
                      example: shoe-123
                    name:
                      description: Product's name
                      type: string
                      example: Block Shell Jacket
                    quantity:
                      description: >-
                        The sellable stock in the Seller warehouse. This is
                        current quantity from catalog product table.
                      type: integer
                      example: 63
                    reservedStock:
                      description: >-
                        The product stock from Pending or Ready to Ship order
                        items where shipment type is drop-shipping or
                        cross-docking.
                      type: integer
                      example: 11
                    preVerificationStock:
                      description: The product stock in PreVerification
                      type: integer
                      example: 11
                    available:
                      description: >-
                        AvailableStock = (Quantity + ReceivedConsignment +
                        CanceledConsignment + ReturnedConsignment +
                        FailedConsignment - ReservedStock). If PreVerification
                        stock is enabled and is higher than ReservedStock when
                        the formula is: AvailableStock = (Quantity +
                        ReceivedConsignment + CanceledConsignment +
                        ReturnedConsignment + FailedConsignment -
                        PreverificationStock)
                      type: integer
                      example: 12
                    consignments:
                      description: >-
                        It will be populated if Seller Settings is activated
                        (Seller Settings->Order Processing->Fulfilment by
                        Venture) and If at least one consignment stock is higher
                        than 0 (e.g receivedConsignment > 0)
                      nullable: true
                      type: object
                      properties:
                        received:
                          description: Received consignment stock
                          type: integer
                        quarantined:
                          description: Quarantined consignment stock
                          type: integer
                        defective:
                          description: Defective consignment stock
                          type: integer
                        canceled:
                          description: Canceled consignment stock
                          type: integer
                        returned:
                          description: Returned consignment stock
                          type: integer
                        failed:
                          description: Failed consignment stock
                          type: integer
                    sellableStock:
                      description: >-
                        ReceivedConsignment + CanceledConsignment +
                        ReturnedConsignment + FailedConsignment
                      type: integer
                      example: 101
                    nonSellableStock:
                      description: QuarantinedConsignment + DefectiveConsignment
                      type: integer
                      example: 2
                    warehouses:
                      description: >-
                        It will be populated if feature switch is enabled
                        (core:seller/multi_warehouse/enabled) and Seller
                        Settings is activated (Seller Settings->Product
                        Management->Enable multi-warehouse usage) and If the
                        warehouse stock is higher than 0.
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            description: Warehouse Name
                            type: string
                            example: Central Warehouse
                          stock:
                            description: Warehouse stock
                            type: integer
                            example: 89
                          warehouseId:
                            description: Warehouse id
                            type: integer
                            example: 1
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductStock
  /v2/import/product-update:
    post:
      summary: Update the products by uploading the file
      security:
        - oAuth: []
      description: >
        The file can have .csv or .xlsx extension. The import file is being
        processed in the background. This means that your request to trigger
        import API will return to you the data about the scheduled job.
        Depending on the size of the imported file import can take from
        milliseconds up to some minutes. This endpoint has no limit on amount of
        products in request, however it is recommended to send  products in
        requests which have changes and not send products which does not have
        updates and  it is recommended to split big requests into chunks.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                The field name 'file1' is temporary - it will be changed
              required:
                - file1
              properties:
                file1:
                  type: string
                  format: binary
      responses:
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: >-
                      <b>File has been successfully uploaded.</b> Please be
                      patient while data is being processed.
                  errorMessages:
                    type: array
                    items:
                      type: string
                      example: >-
                        There is no data in uploaded file or all records were
                        invalid and have been ignored.
                  warningMessages:
                    type: array
                    items:
                      type: string
                      example: 'Unknown field: Country'
                  feedId:
                    type: integer
                    example: 7
                  feedUuid:
                    type: string
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Import
  /v2/import/product-stock-update-xml:
    post:
      summary: Update the product stocks by sending XML in the request body
      security:
        - oAuth: []
      description: >
        The request body should contain valid XML data. XML body containing
        products data to import. Each product is represented by the Product tag
        which includes SellerSku and Quantity. SellerSku is the unique
        identifier of the product, and Quantity is the stock level for that
        product. Endpoint accepts and sends only text/xml header. This endpoint
        has no limit on amount of products in request, however it is recommended
        to send  products in requests which have stock changed and not send
        products which does not have stock updates and it is recommended to
        split big requests into chunks.
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              description: |-
                XML Request Example ``` <Request>
                    <Product>
                        <SellerSku>AAA3</SellerSku>
                        <Quantity>1030</Quantity>
                    </Product>
                    <Product>
                        <SellerSku>AAA1</SellerSku>
                        <Quantity>1010</Quantity>
                    </Product>
                </Request>
              properties:
                Product:
                  type: object
                  properties:
                    SellerSku:
                      type: string
                    Quantity:
                      type: integer
              xml:
                name: Request
                wrapped: true
      responses:
        '200':
          description: Accepted
          content:
            text/xml:
              schema:
                oneOf:
                  - type: object
                    properties:
                      Head:
                        type: object
                        properties:
                          RequestId:
                            type: string
                            description: The unique identifier for the request.
                            example: 1adf8fc6-a08f-47d5-9613-e2af40243e2f
                          RequestAction:
                            type: string
                            description: The action that was successfully performed.
                            example: ProductStockUpdate
                          ResponseType:
                            type: string
                            description: The type of the response, if any.
                          Timestamp:
                            type: string
                            format: date-time
                            description: The timestamp of when the action was performed.
                            example: 2023-05-26T17:26:50+0200
                      Body:
                        type: object
                        properties:
                          WarningDetail:
                            type: object
                            properties:
                              Field:
                                type: string
                                description: The field associated with the warning.
                              Message:
                                type: string
                                description: A message explaining the warning.
                              Value:
                                type: string
                                description: The value that caused the warning.
                  - type: object
                    properties:
                      ErrorResponse:
                        type: object
                        properties:
                          Head:
                            type: object
                            properties:
                              RequestAction:
                                type: string
                                description: >-
                                  The action that was requested when the error
                                  occurred.
                                example: ProductStockUpdate
                              ErrorType:
                                type: string
                                description: The type of the error.
                                example: Platform
                              ErrorCode:
                                type: integer
                                description: The code of the error.
                                example: 30
                              ErrorMessage:
                                type: string
                                description: A message describing the error.
                                example: 'E030: Empty Request'
                          Body:
                            type: object
                            properties:
                              ErrorDetail:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    Field:
                                      type: string
                                      description: The field where the error occurred.
                                      example: field1
                                    Message:
                                      type: string
                                      description: A message describing the error detail.
                                      example: message1
                                    Value:
                                      type: string
                                      description: The value that caused the error.
                                      example: value1
                                    SellerSku:
                                      type: string
                                      description: The seller SKU related to the error.
                                      example: sku1
                xml:
                  name: SuccessResponse
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Import
  /v2/import/product-creation:
    post:
      summary: Create products by uploading the file
      security:
        - oAuth: []
      description: >
        The file can have .csv or .xlsx extension. The import file is being
        processed in the background. This means that your request to trigger
        import API will return to you the data about the scheduled job.
        Depending on the size of the imported file import can take from
        milliseconds up to some minutes.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                The field name 'file1' is temporary - it will be changed
              required:
                - file1
              properties:
                file1:
                  type: string
                  format: binary
      responses:
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: >-
                      <b>File has been successfully uploaded.</b> Please be
                      patient while data is being processed.
                  errorMessages:
                    type: array
                    items:
                      type: string
                      example: >-
                        There is no data in uploaded file or all records were
                        invalid and have been ignored.
                  warningMessages:
                    type: array
                    items:
                      type: string
                      example: 'Unknown field: Country'
                  feedId:
                    type: integer
                    example: 7
                  feedUuid:
                    type: string
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Import
  /v2/import/product-creation-xml-import:
    post:
      summary: Create the products by sending XML in the request body
      security:
        - oAuth: []
      description: >-
        The request body should contain valid XML data. XML body containing
        products data to import.

        Each product is represented by the Product tag which includes SellerSku,
        Status, Name, Variation, ParentSku, PrimaryCategory, Categories,
        BrowseNodes, Description, Brand, Price, SalePrice, SaleStartDate,

        SaleEndDate, TaxClass, ShipmentType, ProductId, ProductData, Quantity,
        VolumetricWeight andProductGroup. <br>

        Endpoint accepts and sends only **text/xml** header.


        - **SellerSku** is the unique identifier of the product.

        - **ParentSku** is The unique identifier of a product with which this
        product should be associated.

        - **Status** is One of the following values: 'active', 'inactive' or
        'deleted'. Optional, defaults to 'active'. 

        - **Name** is The name of the product as shown to the end-user. Must be
        between 2 to 255 characters. 

        - **Variation** If a product is available in multiple variations (e.g.,
        colors or size), this is the value of the variation. 

        - **PrimaryCategory** The ID of the primary category for his product. To
        get the ID for each of the system's categories call GetCategoryTree. 

        - **Categories** A comma-separated list of one to thee sub-categories to
        which the product belongs. 

        - **BrowseNodes** A comma-separated list of one or two additional
        categories that are not necessarily related to the PrimaryCategory. 

        - **Description** The description of the product, as shown to the
        end-user. 6 to 25000 characters. Embedding certain HTML tags is allowed,
        but must be escaped as character data (see below). 

        - **Brand** The brand name of the product. Mandatory 

        - **Price** The product's price. Not really a Double, but a Decimal. 

        - **SalePrice** The price for the product while it is on sale needs to
        be lower then the Price. If SalePrice is specified, either SaleStartDate
        or SaleEndDate must be given; vice versa, if at least one of
        SaleStartDate or SaleEndDate is specified. 

        - **SaleStartDate** Time and date for when the product goes on sale. 

        - **SaleEndDate** Time and date for when the product goes on sale. 

        - **TaxClass** The taxation class the product belongs to. The available
        tax classes are dependent on the specific installation the call is
        executed against. 

        - **ShipmentType** Indicates whether the product is shipped directly
        upon receipt ('crossdocking') or is drop shipped ('dropshipping'). Which
        shipment types are permissible depends on what is set up for a specific
        seller. 

        - **ProductId** A harmonized code for the product, such as Universal
        Product Code (UPC), International Article Number (EAN), Global Trade
        Item Number (GTIN) or International Standard Book Number (ISBN). 

        - **ProductData** Additional product attributes, depends on the primary
        category. 

        - **Quantity** The current level of inventory for this product. 

        - **ProductGroup** The name of the group
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              description: |-
                ``` XML Request Example <Request>
                  <Product>
                    <SellerSku>4105382173aaee4</SellerSku>
                    <ParentSku>asd23eadas</ParentSku>
                    <Status>active</Status>
                    <Name>Magic Product</Name>
                    <Variation>XXL</Variation>
                    <PrimaryCategory>4</PrimaryCategory>
                    <Categories>2,3,5</Categories>
                    <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
                    <Brand>ASM</Brand>
                    <Price>100.00</Price>
                    <SalePrice>32.5</SalePrice>
                    <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
                    <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
                    <ShipmentType>dropshipping</ShipmentType>
                    <ProductId>xyzabc</ProductId>
                    <ProductData>
                      <Megapixels>490</Megapixels>
                      <OpticalZoom>7</OpticalZoom>
                      <SystemMemory>4</SystemMemory>
                      <NumberCpus>32</NumberCpus>
                      <Network>This is network</Network>
                    </ProductData>
                    <Quantity>10</Quantity>
                  </Product>
                  <Product>
                    <SellerSku>4105382173aaee4</SellerSku>
                    <ParentSku>asd23eadas<ParentSku/>
                    <Status>active</Status>
                    <Name>Magic Product</Name>
                    <Variation>XXL</Variation>
                    <PrimaryCategory>4</PrimaryCategory>
                    <Categories>2,3,5</Categories>
                    <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
                    <Brand>ASM</Brand>
                    <Price>100.00</Price>
                    <SalePrice>32.5</SalePrice>
                    <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
                    <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
                    <ShipmentType>dropshipping</ShipmentType>
                    <ProductId>xyzabc</ProductId>
                    <ProductData>
                      <Megapixels>490</Megapixels>
                      <OpticalZoom>7</OpticalZoom>
                      <SystemMemory>4</SystemMemory>
                      <NumberCpus>32</NumberCpus>
                      <Network>This is network</Network>
                    </ProductData>
                    <Quantity>10</Quantity>
                  </Product>
                </Request>
              properties:
                Product:
                  type: object
                  properties:
                    SellerSku:
                      type: string
                    ParentSku:
                      type: string
                    Status:
                      type: string
                    Name:
                      type: string
                    Variation:
                      type: string
                    PrimaryCategory:
                      type: integer
                    Categories:
                      type: string
                    BrowseNodes:
                      type: string
                    Description:
                      type: string
                    Brand:
                      type: string
                    Price:
                      type: number
                      example: 123.56
                    SalePrice:
                      type: number
                      example: 123.56
                    SaleStartDate:
                      type: string
                      format: date-time
                      example: '2023-11-01 03:33:47'
                    SaleEndDate:
                      type: string
                      format: date-time
                      example: '2023-11-12 03:33:47'
                    TaxClass:
                      type: string
                    ShipmentType:
                      type: string
                    ProductId:
                      description: ProductId is not id of product, it is EAN/GTIN
                      type: string
                    ProductData:
                      type: array
                      items:
                        type: object
                        properties:
                          Megapixels:
                            type: integer
                            example: 490
                          OpticalZoom:
                            type: integer
                            example: 7
                          SystemMemory:
                            type: integer
                            example: 4
                          NumberCpus:
                            type: integer
                            example: 7
                          Network:
                            type: string
                    Quantity:
                      type: integer
              required:
                - SellerSku
                - Name
                - PrimaryCategory
                - Description
                - Brand
                - Price
              xml:
                name: Request
                wrapped: true
      responses:
        '200':
          description: Accepted
          content:
            text/xml:
              schema:
                oneOf:
                  - type: object
                    properties:
                      Head:
                        type: object
                        properties:
                          RequestId:
                            type: string
                            description: The unique identifier for the request.
                            example: cb106552-87f3-450b-aa8b-412246a24b34
                          RequestAction:
                            type: string
                            description: The action that was successfully performed.
                            example: ProductCreate
                          ResponseType:
                            type: string
                            description: The type of the response, if any.
                          Timestamp:
                            type: string
                            format: date-time
                            description: The timestamp of when the action was performed.
                            example: 2016-06-22T04:40:14+0200
                      Body:
                        type: object
                        properties:
                          WarningDetail:
                            type: object
                            properties:
                              Field:
                                type: string
                                description: The field associated with the warning.
                              Message:
                                type: string
                                description: A message explaining the warning.
                              Value:
                                type: string
                                description: The value that caused the warning.
                  - type: object
                    properties:
                      ErrorResponse:
                        type: object
                        properties:
                          Head:
                            type: object
                            properties:
                              RequestAction:
                                type: string
                                description: >-
                                  The action that was requested when the error
                                  occurred.
                                example: ProductCreate
                              ErrorType:
                                type: string
                                description: The type of the error.
                                example: Platform
                              ErrorCode:
                                type: integer
                                description: The code of the error.
                                example: 1000
                              ErrorMessage:
                                type: string
                                description: A message describing the error.
                                example: >-
                                  Could not save product: An exact match of the
                                  document is being processed,
                                  cb106552-87f3-450b-aa8b-412246a24b34
                          Body:
                            type: object
                            properties:
                              ErrorDetail:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    Field:
                                      type: string
                                      description: The field where the error occurred.
                                      example: field1
                                    Message:
                                      type: string
                                      description: A message describing the error detail.
                                      example: message1
                                    Value:
                                      type: string
                                      description: The value that caused the error.
                                      example: value1
                                    SellerSku:
                                      type: string
                                      description: The seller SKU related to the error.
                                      example: sku1
                xml:
                  name: SuccessResponse
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Import
  /v2/import/product-update-xml-import:
    post:
      summary: Update the products by sending XML in the request body
      security:
        - oAuth: []
      description: >-
        The request body should contain valid XML data. XML body containing
        products data to import.

        Each request contain some of below parameters SellerSku, Status, Name,
        Variation,

        ParentSku, PrimaryCategory, Categories, BrowseNodes, Description, Brand,
        Price, SalePrice, SaleStartDate,

        SaleEndDate, TaxClass, ShipmentType, ProductId, ProductData, Quantity,
        VolumetricWeight andProductGroup. <br>

        Endpoint accepts and sends only **text/xml** header.


        - **SellerSku** is the unique identifier of the product.

        - **ParentSku** is The unique identifier of a product with which this
        product should be associated.

        - **Status** is One of the following values: 'active', 'inactive' or
        'deleted'. Optional, defaults to 'active'.

        - **Name** is The name of the product as shown to the end-user. Must be
        between 2 to 255 characters.

        - **Variation** If a product is available in multiple variations (e.g.,
        colors or size), this is the value of the variation.

        - **PrimaryCategory** The ID of the primary category for his product. To
        get the ID for each of the system's categories call GetCategoryTree.

        - **Categories** A comma-separated list of one to thee sub-categories to
        which the product belongs.

        - **BrowseNodes** A comma-separated list of one or two additional
        categories that are not necessarily related to the PrimaryCategory.

        - **Description** The description of the product, as shown to the
        end-user. 6 to 25000 characters. Embedding certain HTML tags is allowed,
        but must be escaped as character data (see below).

        - **Brand** The brand name of the product. Mandatory

        - **Price** The product's price. Not really a Double, but a Decimal.

        - **SalePrice** The price for the product while it is on sale needs to
        be lower then the Price. If SalePrice is specified, either SaleStartDate
        or SaleEndDate must be given; vice versa, if at least one of
        SaleStartDate or SaleEndDate is specified.

        - **SaleStartDate** Time and date for when the product goes on sale.

        - **SaleEndDate** Time and date for when the product goes on sale.

        - **TaxClass** The taxation class the product belongs to. The available
        tax classes are dependent on the specific installation the call is
        executed against.

        - **ShipmentType** Indicates whether the product is shipped directly
        upon receipt ('crossdocking') or is drop shipped ('dropshipping'). Which
        shipment types are permissible depends on what is set up for a specific
        seller.

        - **ProductId** A harmonized code for the product, such as Universal
        Product Code (UPC), International Article Number (EAN), Global Trade
        Item Number (GTIN) or International Standard Book Number (ISBN).

        - **ProductData** Additional product attributes, depends on the primary
        category.

        - **Quantity** The current level of inventory for this product.

        - **ProductGroup** The name of the group
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              description: |-
                ``` XML Request Example <Request>
                  <Product>
                    <SellerSku>4105382173aaee4</SellerSku>
                    <ParentSku>asd23eadas</ParentSku>
                    <Status>active</Status>
                    <Name>Magic Product</Name>
                    <Variation>XXL</Variation>
                    <PrimaryCategory>4</PrimaryCategory>
                    <Categories>2,3,5</Categories>
                    <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
                    <Brand>ASM</Brand>
                    <Price>100.00</Price>
                    <SalePrice>32.5</SalePrice>
                    <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
                    <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
                    <ShipmentType>dropshipping</ShipmentType>
                    <ProductId>xyzabc</ProductId>
                    <ProductData>
                      <Megapixels>490</Megapixels>
                      <OpticalZoom>7</OpticalZoom>
                      <SystemMemory>4</SystemMemory>
                      <NumberCpus>32</NumberCpus>
                      <Network>This is network</Network>
                    </ProductData>
                    <Quantity>10</Quantity>
                  </Product>
                  <Product>
                    <SellerSku>4105382173aaee4</SellerSku>
                    <ParentSku>asd23eadas<ParentSku/>
                    <Status>active</Status>
                    <Name>Magic Product</Name>
                    <Variation>XXL</Variation>
                    <PrimaryCategory>4</PrimaryCategory>
                    <Categories>2,3,5</Categories>
                    <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
                    <Brand>ASM</Brand>
                    <Price>100.00</Price>
                    <SalePrice>32.5</SalePrice>
                    <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
                    <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
                    <ShipmentType>dropshipping</ShipmentType>
                    <ProductId>xyzabc</ProductId>
                    <ProductData>
                      <Megapixels>490</Megapixels>
                      <OpticalZoom>7</OpticalZoom>
                      <SystemMemory>4</SystemMemory>
                      <NumberCpus>32</NumberCpus>
                      <Network>This is network</Network>
                    </ProductData>
                    <Quantity>10</Quantity>
                  </Product>
                </Request>
              properties:
                Product:
                  type: object
                  properties:
                    SellerSku:
                      type: string
                    ParentSku:
                      type: string
                    Status:
                      type: string
                    Name:
                      type: string
                    Variation:
                      type: string
                    PrimaryCategory:
                      type: integer
                    Categories:
                      type: string
                    BrowseNodes:
                      type: string
                    Description:
                      type: string
                    Brand:
                      type: string
                    Price:
                      type: number
                      example: 123.56
                    SalePrice:
                      type: number
                      example: 123.56
                    SaleStartDate:
                      type: string
                      format: date-time
                      example: '2023-11-02 03:33:47'
                    SaleEndDate:
                      type: string
                      format: date-time
                      example: '2023-11-12 03:33:47'
                    TaxClass:
                      type: string
                    ShipmentType:
                      type: string
                    ProductId:
                      type: string
                    ProductData:
                      type: array
                      items:
                        type: object
                        properties:
                          Megapixels:
                            type: integer
                            example: 490
                          OpticalZoom:
                            type: integer
                            example: 7
                          SystemMemory:
                            type: integer
                            example: 4
                          NumberCpus:
                            type: integer
                            example: 7
                          Network:
                            type: string
                    Quantity:
                      type: integer
                    ProductGroup:
                      type: string
              required:
                - SellerSku
              xml:
                name: Request
                wrapped: true
      responses:
        '200':
          description: Accepted
          content:
            text/xml:
              schema:
                oneOf:
                  - type: object
                    properties:
                      Head:
                        type: object
                        properties:
                          RequestId:
                            type: string
                            description: The unique identifier for the request.
                            example: cb106552-87f3-450b-aa8b-412246a24b34
                          RequestAction:
                            type: string
                            description: The action that was successfully performed.
                            example: ProductCreate
                          ResponseType:
                            type: string
                            description: The type of the response, if any.
                          Timestamp:
                            type: string
                            format: date-time
                            description: The timestamp of when the action was performed.
                            example: 2016-06-22T04:40:14+0200
                      Body:
                        type: object
                        properties:
                          WarningDetail:
                            type: object
                            properties:
                              Field:
                                type: string
                                description: The field associated with the warning.
                              Message:
                                type: string
                                description: A message explaining the warning.
                              Value:
                                type: string
                                description: The value that caused the warning.
                  - type: object
                    properties:
                      ErrorResponse:
                        type: object
                        properties:
                          Head:
                            type: object
                            properties:
                              RequestAction:
                                type: string
                                description: >-
                                  The action that was requested when the error
                                  occurred.
                                example: ProductCreate
                              ErrorType:
                                type: string
                                description: The type of the error.
                                example: Platform
                              ErrorCode:
                                type: integer
                                description: The code of the error.
                                example: 1000
                              ErrorMessage:
                                type: string
                                description: A message describing the error.
                                example: >-
                                  Could not save product: An exact match of the
                                  document is being processed,
                                  cb106552-87f3-450b-aa8b-412246a24b34
                          Body:
                            type: object
                            properties:
                              ErrorDetail:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    Field:
                                      type: string
                                      description: The field where the error occurred.
                                      example: field1
                                    Message:
                                      type: string
                                      description: A message describing the error detail.
                                      example: message1
                                    Value:
                                      type: string
                                      description: The value that caused the error.
                                      example: value1
                                    SellerSku:
                                      type: string
                                      description: The seller SKU related to the error.
                                      example: sku1
                xml:
                  name: SuccessResponse
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Import
  /v2/import/product-removal:
    post:
      summary: Remove products by uploading the file
      security:
        - oAuth: []
      description: >
        The file can have .csv or .xlsx extension. The import file is being
        processed in the background.  This means that your request to trigger
        import API will return to you the data about the scheduled job. 
        Depending on the size of the imported file import can take from
        milliseconds up to some minutes.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                The field name 'file1' is temporary - it will be changed
              required:
                - file1
              properties:
                file1:
                  type: string
                  format: binary
      responses:
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: >-
                      <b>File has been successfully uploaded.</b> Please be
                      patient while data is being processed.
                  errorMessages:
                    type: array
                    items:
                      type: string
                      example: >-
                        There is no data in uploaded file or all records were
                        invalid and have been ignored.
                  warningMessages:
                    type: array
                    items:
                      type: string
                      example: 'Unknown field: Country'
                  feedId:
                    type: integer
                    example: 7
                  feedUuid:
                    type: string
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Import
  /v2/import/image-update:
    post:
      summary: Update the products' images by uploading the file
      security:
        - oAuth: []
      description: >
        The file can have .csv or .xlsx extension. The import file is being
        processed in the background. This means that your request to trigger
        import API will return to you the data about the scheduled job.
        Depending on the size of the imported file import can take from
        milliseconds up to some minutes.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                The field name 'file1' is temporary - it will be changed
              required:
                - file1
              properties:
                file1:
                  type: string
                  format: binary
      responses:
        '201':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: >-
                      <b>File has been successfully uploaded.</b> Please be
                      patient while data is being processed.
                  errorMessages:
                    type: array
                    items:
                      type: string
                      example: >-
                        There is no data in uploaded file or all records were
                        invalid and have been ignored.
                  warningMessages:
                    type: array
                    items:
                      type: string
                      example: 'Unknown field: Country'
                  feedId:
                    type: integer
                    example: 7
                  feedUuid:
                    type: string
                    example: 060cef12-08ef-4ae6-b15e-79398fedc774
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Import
  /v2/tags/product-tags:
    get:
      summary: Get all available tags for products
      security:
        - oAuth: []
      description: >
        In SellerCenter product, orders and other object can have Tags which are
        used in different operations. For example, there can be newsletter for
        only sellers with Tag "Sellers of shoes". Tags are not assigned manually
        by sellers.


        You can use list of tags from this endpoint in search operations over
        the product.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Tag
                  type: object
                  properties:
                    id:
                      description: numeric ID of Tag
                      example: 68
                      type: integer
                    name:
                      description: optionId
                      example: bestSellingProduct
                      type: string
                  required:
                    - id
                    - name
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Tags
  /v2/tags/sellers:
    get:
      summary: >-
        Get all tags assigned to sellers. Only available for admin users with
        access to tag management.
      security:
        - oAuth: []
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      description: Seller tag
                      type: object
                      properties:
                        sellerId:
                          description: Numeric ID of a Seller
                          example: 42
                          type: integer
                        tags:
                          description: Tag names
                          example:
                            - test1
                            - test2
                          type: array
                          items:
                            type: string
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Tags
  /v2/template/status-update:
    get:
      summary: Generate status update template file
      security:
        - oAuth: []
      description: |
        Returns export item item, not the file itself.
      parameters:
        - name: onlyActive
          in: query
          required: false
          schema:
            type: string
          allowEmptyValue: true
          description: Whether to return all active items. If not set at all - means false.
      responses:
        '200':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/stock-update:
    get:
      summary: Get update stock template file
      security:
        - oAuth: []
      description: |
        Returns stock update template file
      parameters:
        - name: onlyActive
          in: query
          required: false
          schema:
            type: string
          allowEmptyValue: true
          description: Whether to return all active items. If not set at all - means false.
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/stock-update-async:
    get:
      summary: Get update stock template file
      security:
        - oAuth: []
      description: |
        Returns export job id of stock update template file process
      parameters:
        - name: onlyActive
          in: query
          required: false
          schema:
            type: string
          allowEmptyValue: true
          description: Whether to return all active items. If not set at all - means false.
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/product-category-tree:
    get:
      summary: Get product category tree template file
      security:
        - oAuth: []
      description: |
        Returns product category tree template file
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/product-category-tree-async:
    get:
      summary: Get product category tree template file in an asynchronous way.
      security:
        - oAuth: []
      description: >
        Use this endpoint to start a background job for category tree template.
        The export item id will be returned here, not the file itself.
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/price-update:
    get:
      summary: Generate price update template file
      security:
        - oAuth: []
      description: >
        Returns price update template file. Returns export item id, not the file
        itself.
      parameters:
        - name: onlyActive
          in: query
          required: false
          schema:
            type: string
          allowEmptyValue: true
          description: Whether to return all active items. If not set at all - means false.
      responses:
        '200':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/image-update:
    get:
      summary: Creates images update template file
      security:
        - oAuth: []
      description: |
        Returns export job id of images update template file process
      parameters:
        - in: query
          required: false
          name: format
          description: Requested format.
          schema:
            type: string
            default: csv
            enum:
              - csv
              - xlsx
      responses:
        '200':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/product-removal:
    get:
      summary: Get product removal template file
      security:
        - oAuth: []
      description: |
        Returns product removal template file
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/product-removal-async:
    get:
      summary: Get product removal template file
      security:
        - oAuth: []
      description: |
        Returns export job id of product removal template file process
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/product-creation:
    get:
      summary: >-
        Get product creation template file by attribute set Id, also without set
        attribute set Id you can get master product template if it is available
        for you
      security:
        - oAuth: []
      description: >
        Triggers export job to generate product creation template file by
        attribute set id. The file can be full (contains all visible attributes)
        or light (contains only flagged attributes) versions. This can be set
        with query parameter `type` with one of two values - `full` or `light`
        (`full` set by default). The export item id will be returned here, not
        the file itself.
      parameters:
        - name: attributeSetId
          in: query
          required: false
          schema:
            type: integer
          allowEmptyValue: true
        - in: query
          name: type
          required: false
          schema:
            type: string
            default: full
            enum:
              - full
              - light
          description: Type of template - full or light version
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/missing-invoice-access-key:
    get:
      summary: Get missing invoices access key template
      security:
        - oAuth: []
      description: >
        Returns missing invoices access key template. This endpoint returns
        directly a file content
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/missing-invoice-access-key-async:
    get:
      summary: Get missing invoices access key template async
      security:
        - oAuth: []
      description: >
        Returns missing invoices access key template. This endpoint creates
        background job to generate file async
      responses:
        '200':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/update-manifest-status:
    get:
      summary: Get update manifest status template
      security:
        - oAuth: []
      description: >
        Returns update manifest status template. This endpoint returns directly
        a file content
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/update-manifest-status-async:
    get:
      summary: Get update manifest status template
      security:
        - oAuth: []
      description: |
        Created export job to generate Update Manifest Status Template
      responses:
        '200':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/create-forward-manifest:
    get:
      summary: Get create forward manifest template
      security:
        - oAuth: []
      description: >
        Returns create forward manifest template. This endpoint returns directly
        a file content
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/create-forward-manifest-async:
    get:
      summary: Get create forward manifest template async
      security:
        - oAuth: []
      description: >
        Returns create forward manifest template. This endpoint creates
        background job to generate file async
      responses:
        '200':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/pending-order-items:
    get:
      summary: Get pending order items template
      security:
        - oAuth: []
      description: >
        Returns pending order items template. This endpoint returns directly a
        file content
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/pending-order-numbers:
    get:
      summary: Get opending order numbers template
      security:
        - oAuth: []
      description: >
        Returns pending order numbers template. This endpoint returns directly a
        file content
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/order-item-status-update:
    get:
      summary: Get order item status update template
      security:
        - oAuth: []
      description: >
        Returns order item status template. This endpoint returns directly a
        file content
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/template/order-status-change:
    get:
      summary: Triggers background action for order status change template generation
      security:
        - oAuth: []
      description: >
        Triggers background action for order status change template generation.
        This process can take couple of seconds but you'll only get the export
        job id instantly, not the file itself. <h3>Possible statuses for
        specific types:</h3> <p>`order-items` -> pending, shipped (only if `bulk
        status to delivered` feature is enabled)</p> <p>`order-items-by-package`
        -> ready-to-ship (only if `bulk status to shipped` feature is
        enabled)</p> <p>`order-numbers` -> pending, ready-to-ship (only if `bulk
        status to shipped` feature is enabled),  shipped (only if `bulk status
        to delivered` feature is enabled)</p> <p>`order-items-status` ->
        pending</p>
      parameters:
        - in: query
          required: true
          name: type
          description: type of a template to generate
          schema:
            type: string
            enum:
              - order-items
              - order-items-by-package
              - order-numbers
              - order-items-status
            example:
              - order-items-status
        - in: query
          required: true
          name: status
          description: order item status to take into account for template generation
          schema:
            type: string
            enum:
              - pending
              - shipped
              - ready-to-ship
            example:
              - ready-to-ship
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Templates
  /v2/warehouses:
    get:
      summary: Get list of Warehouse for Seller
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - name
                  properties:
                    id:
                      type: integer
                      description: Warehouse identifier
                      readOnly: true
                    sellerId:
                      description: Seller identifier
                      type: integer
                      readOnly: true
                    name:
                      description: >-
                        Warehouse name. It should be unique for seller and
                        contains only numbers, letters and underscores
                      type: string
                    address:
                      description: >-
                        Warehouse address. Address length should be 128 symbols
                        max.
                      type: string
                    postcode:
                      description: Address postcode. It should be 16 symbols max.
                      type: string
                    city:
                      type: string
                      description: Warehouse city. It should be 50 symbols max
                    country:
                      type: string
                      description: Warehouse country. It shoud be 50 symbols length max
                    status:
                      type: string
                      default: disabled
                      description: Warehouse status.
                      enum:
                        - active
                        - disabled
                    longitude:
                      type: string
                    latitude:
                      type: string
                    note:
                      type: string
                    default:
                      type: boolean
                      default: false
                    isSynced:
                      type: boolean
                      default: false
                    isInShoppingMall:
                      type: boolean
                      default: false
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Warehouse
    post:
      summary: Creates new warehouse for seller
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                id:
                  type: integer
                  description: Warehouse identifier
                  readOnly: true
                sellerId:
                  description: Seller identifier
                  type: integer
                  readOnly: true
                name:
                  description: >-
                    Warehouse name. It should be unique for seller and contains
                    only numbers, letters and underscores
                  type: string
                address:
                  description: Warehouse address. Address length should be 128 symbols max.
                  type: string
                postcode:
                  description: Address postcode. It should be 16 symbols max.
                  type: string
                city:
                  type: string
                  description: Warehouse city. It should be 50 symbols max
                country:
                  type: string
                  description: Warehouse country. It shoud be 50 symbols length max
                status:
                  type: string
                  default: disabled
                  description: Warehouse status.
                  enum:
                    - active
                    - disabled
                longitude:
                  type: string
                latitude:
                  type: string
                note:
                  type: string
                default:
                  type: boolean
                  default: false
                isSynced:
                  type: boolean
                  default: false
                isInShoppingMall:
                  type: boolean
                  default: false
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  id:
                    type: integer
                    description: Warehouse identifier
                    readOnly: true
                  sellerId:
                    description: Seller identifier
                    type: integer
                    readOnly: true
                  name:
                    description: >-
                      Warehouse name. It should be unique for seller and
                      contains only numbers, letters and underscores
                    type: string
                  address:
                    description: >-
                      Warehouse address. Address length should be 128 symbols
                      max.
                    type: string
                  postcode:
                    description: Address postcode. It should be 16 symbols max.
                    type: string
                  city:
                    type: string
                    description: Warehouse city. It should be 50 symbols max
                  country:
                    type: string
                    description: Warehouse country. It shoud be 50 symbols length max
                  status:
                    type: string
                    default: disabled
                    description: Warehouse status.
                    enum:
                      - active
                      - disabled
                  longitude:
                    type: string
                  latitude:
                    type: string
                  note:
                    type: string
                  default:
                    type: boolean
                    default: false
                  isSynced:
                    type: boolean
                    default: false
                  isInShoppingMall:
                    type: boolean
                    default: false
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Warehouse
  /v2/warehouses/{warehouseId}:
    get:
      summary: Get warehouse by Id
      security:
        - oAuth: []
      parameters:
        - in: path
          name: warehouseId
          required: true
          schema:
            type: integer
          description: Numeric Id of Warehouse
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  id:
                    type: integer
                    description: Warehouse identifier
                    readOnly: true
                  sellerId:
                    description: Seller identifier
                    type: integer
                    readOnly: true
                  name:
                    description: >-
                      Warehouse name. It should be unique for seller and
                      contains only numbers, letters and underscores
                    type: string
                  address:
                    description: >-
                      Warehouse address. Address length should be 128 symbols
                      max.
                    type: string
                  postcode:
                    description: Address postcode. It should be 16 symbols max.
                    type: string
                  city:
                    type: string
                    description: Warehouse city. It should be 50 symbols max
                  country:
                    type: string
                    description: Warehouse country. It shoud be 50 symbols length max
                  status:
                    type: string
                    default: disabled
                    description: Warehouse status.
                    enum:
                      - active
                      - disabled
                  longitude:
                    type: string
                  latitude:
                    type: string
                  note:
                    type: string
                  default:
                    type: boolean
                    default: false
                  isSynced:
                    type: boolean
                    default: false
                  isInShoppingMall:
                    type: boolean
                    default: false
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Warehouse
    put:
      summary: Update warehouse by Id
      security:
        - oAuth: []
      parameters:
        - in: path
          name: warehouseId
          required: true
          schema:
            type: integer
          description: Numeric Id of Warehouse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                id:
                  type: integer
                  description: Warehouse identifier
                  readOnly: true
                sellerId:
                  description: Seller identifier
                  type: integer
                  readOnly: true
                name:
                  description: >-
                    Warehouse name. It should be unique for seller and contains
                    only numbers, letters and underscores
                  type: string
                address:
                  description: Warehouse address. Address length should be 128 symbols max.
                  type: string
                postcode:
                  description: Address postcode. It should be 16 symbols max.
                  type: string
                city:
                  type: string
                  description: Warehouse city. It should be 50 symbols max
                country:
                  type: string
                  description: Warehouse country. It shoud be 50 symbols length max
                status:
                  type: string
                  default: disabled
                  description: Warehouse status.
                  enum:
                    - active
                    - disabled
                longitude:
                  type: string
                latitude:
                  type: string
                note:
                  type: string
                default:
                  type: boolean
                  default: false
                isSynced:
                  type: boolean
                  default: false
                isInShoppingMall:
                  type: boolean
                  default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                properties:
                  id:
                    type: integer
                    description: Warehouse identifier
                    readOnly: true
                  sellerId:
                    description: Seller identifier
                    type: integer
                    readOnly: true
                  name:
                    description: >-
                      Warehouse name. It should be unique for seller and
                      contains only numbers, letters and underscores
                    type: string
                  address:
                    description: >-
                      Warehouse address. Address length should be 128 symbols
                      max.
                    type: string
                  postcode:
                    description: Address postcode. It should be 16 symbols max.
                    type: string
                  city:
                    type: string
                    description: Warehouse city. It should be 50 symbols max
                  country:
                    type: string
                    description: Warehouse country. It shoud be 50 symbols length max
                  status:
                    type: string
                    default: disabled
                    description: Warehouse status.
                    enum:
                      - active
                      - disabled
                  longitude:
                    type: string
                  latitude:
                    type: string
                  note:
                    type: string
                  default:
                    type: boolean
                    default: false
                  isSynced:
                    type: boolean
                    default: false
                  isInShoppingMall:
                    type: boolean
                    default: false
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Warehouse
  /v2/reupload-to-shop/{productSetId}:
    post:
      summary: Retriggers syncronization of product set with shop system
      security:
        - oAuth: []
      description: >
        Currently this endpoint available only for Admin role.


        For your product to be visible to end customers it has to be
        synchronized from SellerCenter to Shop system. Very rarely there is an
        error happening during this process. In order to "re-push" your product
        to Shop this action can be triggered.


        For resynchronization product set must be approved. If there are
        problems with content of product (images missing, errors in description,
        etc), first they need to be fixed and product set pass QC.
      parameters:
        - in: path
          name: productSetId
          required: true
          schema:
            type: integer
          description: Numeric Id of ProductSet
      responses:
        '200':
          description: Synchronization with shop system was successfully requeued.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '401':
          description: Unauthorized error
        '403':
          description: Unauthorized error
        '422':
          description: ProductSet is not approved and can't be processed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/last-version-uploaded:
    get:
      summary: |
        Get the last version uploaded of the product set
      description: >
        Based on the status of last uploaded version of the product set, the
        endpoint returns if the product set 

        finished uploading the product set. If the product has not finished the
        upload process or contains errors

        the response contains a message that will be displayed in the UI to the
        user.


        The product set is considered uploaded if the return message is
        "Uploaded to shop". All other messages represents

        that product was not uploaded successfully.


        If no status is found for a product set id, the response is empty for
        those 

        product set ids.
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids
          required: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 3872
              - 549
          allowEmptyValue: false
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: ProductSet upload statuses
                  type: object
                  properties:
                    productSetId:
                      description: numeric ID of ProductSet
                      type: object
                      properties:
                        syncClass:
                          description: >-
                            Used to know if the icon for product uploaded should
                            be displayed or not
                          example: iconset-visible
                          type: string
                        message:
                          description: >
                            Message for the product set containing successful
                            message or error message. If the product set is

                            uploaded the message will be "Uploaded to shop", all
                            other messages representing that product was not
                            uploaded 

                            successfully
                          type: string
                          example: Latest version not yet uploaded to shop
                        dirtStatus:
                          description: >-
                            Represents a flag to know if the product set has
                            dirty data
                          type: boolean
                          example: true
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product
  /v2/seller:
    get:
      summary: Fetching currently logged in Seller details
      description: >
        Fetching current Seller data. Note that changes in some fields in seller
        profile requires

        approval. This endpoint returns approved values. In more details, it
        means the following: if 

        there is a field that requires QC (e.g. "Account Number"), and it was
        changed from the

        approved value A to B and this change was not yet approved by admins,
        then this endpoint 

        will return A as the value of this field.


        A seller might be delisted due to multiple reasons. The following delist
        reasons are defined: 

        - USER_DEFINED (id = 1)

        - HOLIDAY_MODE (id = 2)

        - DAILY_ORDER_LIMIT (id = 4)

        - PENDING_ORDER_LIMIT (id = 8)

        - PENDING_TO_SHIPPED_ORDER_LIMIT (id = 16)
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 32
                  uuid:
                    type: string
                    example: 093a9e34-xxxx-xxxx-xxxx-53766e338abf
                  srcId:
                    type: string
                    example: '131'
                    description: >-
                      ID of the seller in the shop system. It is intentionally a
                      string as in some systems this ID may be not numeric.
                  shortCode:
                    type: string
                    example: CI100AA
                  status:
                    type: string
                    example: active
                    enum:
                      - active
                      - inactive
                      - deleted
                  name:
                    type: string
                    example: GFG eCommerce Technologies GmbH
                  companyName:
                    type: string
                    example: GFG eCommerce Technologies GmbH
                  email:
                    type: string
                    example: seller@example.com
                  taxClass:
                    type: string
                    example: national
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  verified:
                    type: boolean
                  listed:
                    type: boolean
                    example: false
                  delistReasons:
                    type: array
                    items:
                      type: object
                      properties:
                        reasonIdentifier:
                          type: integer
                          example: 1
                        reason:
                          type: string
                          description: Reason for why the seller was delisted
                          enum:
                            - USER_DEFINED
                            - HOLIDAY_MODE
                            - DAILY_ORDER_LIMIT
                            - PENDING_ORDER_LIMIT
                            - PENDING_TO_SHIPPED_ORDER_LIMIT
                          example: DAILY_ORDER_LIMIT
                        message:
                          type: string
                          description: >-
                            Message for why the seller was delisted. This text
                            might be shown to the seller but will not be
                            translated.
                          example: Daily Order Limit reached
                        reasonLimit:
                          type: integer
                          description: >
                            Optional limit for the delisted reason. E.g., the
                            reason DAILY_ORDER_LIMIT might have a limit of 100
                            orders per day.
                          example: 100
                  profileFields:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: shop_name
                        displayValue:
                          type: string
                          description: >
                            Some fields, like dropdowns, have different internal
                            values and "human readable" value. For example,

                            field "country" can have internal value "CL" and
                            display value "Chile". In most cases, however, 

                            displayValue is equal to value.
                          example: some name
                        value:
                          type: string
                          example: some name
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
    patch:
      summary: Update seller details
      description: Update seller details
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: testemail@sellercenter.com
      security:
        - oAuth: []
      responses:
        '200':
          description: Accepted
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/sellers:
    get:
      summary: Get all Sellers
      description: >
        List and filter by sellers. Note that changes in some fields in seller
        profile requires

        approval. This endpoint returns approved values. In more details it
        means following: if 

        there is field which requires QC, let's say "Account Number", and it was
        changed from

        approved value A to B and this change was not yet approved by admins,
        then this endpoint 

        will return A as value of this field.
      security:
        - oAuth: []
      parameters:
        - name: sellerSrcId
          in: query
          description: External ID of the seller from Shop System.
          schema:
            type: string
        - name: ids[]
          in: query
          description: IDs of sellers to search.
          schema:
            type: array
            items:
              type: integer
        - name: uuids[]
          in: query
          description: UUIDs of sellers to search.
          schema:
            type: array
            items:
              type: string
        - name: shortCodes[]
          in: query
          description: ShortCodes of sellers to search.
          schema:
            type: array
            items:
              type: string
        - name: name
          in: query
          description: Name or part of the name of the seller.
          schema:
            type: string
        - name: onlyActive
          in: query
          description: >
            When set to truthy value, only sellers that were ever synced 

            with the shop system and with active account status 

            will be returned. 

            Temporary delisted sellers will be also returned.

            Sellers reached order limit will be also returned.

            Sellers with HolidayMode active will be also returned.

            Sellers who has not yet approved changes in their profile 

            (but were approved and synced at some point previously) will be also
            returned.

            When not set or set to falsy value, all sellers will be returned
            (no 

            filtering by active status will be applied).
          schema:
            type: boolean
        - name: limit
          in: query
          description: The maximum number of items to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: The number of items to skip before starting to return results.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 32
                        uuid:
                          type: string
                          example: 093a9e34-xxxx-xxxx-xxxx-53766e338abf
                        srcId:
                          type: string
                          example: '131'
                          description: >-
                            ID of the seller in the shop system. It is
                            intentionally a string as in some systems this ID
                            may be not numeric.
                        shortCode:
                          type: string
                          example: CI100AA
                        status:
                          type: string
                          example: active
                          enum:
                            - active
                            - inactive
                            - deleted
                        name:
                          type: string
                          example: GFG eCommerce Technologies GmbH
                        companyName:
                          type: string
                          example: GFG eCommerce Technologies GmbH
                        email:
                          type: string
                          example: seller@example.com
                        taxClass:
                          type: string
                          example: national
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        verified:
                          type: boolean
                        listed:
                          type: boolean
                          example: false
                        delistReasons:
                          type: array
                          items:
                            type: object
                            properties:
                              reasonIdentifier:
                                type: integer
                                example: 1
                              reason:
                                type: string
                                description: Reason for why the seller was delisted
                                enum:
                                  - USER_DEFINED
                                  - HOLIDAY_MODE
                                  - DAILY_ORDER_LIMIT
                                  - PENDING_ORDER_LIMIT
                                  - PENDING_TO_SHIPPED_ORDER_LIMIT
                                example: DAILY_ORDER_LIMIT
                              message:
                                type: string
                                description: >-
                                  Message for why the seller was delisted. This
                                  text might be shown to the seller but will not
                                  be translated.
                                example: Daily Order Limit reached
                              reasonLimit:
                                type: integer
                                description: >
                                  Optional limit for the delisted reason. E.g.,
                                  the reason DAILY_ORDER_LIMIT might have a
                                  limit of 100 orders per day.
                                example: 100
                        profileFields:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: shop_name
                              displayValue:
                                type: string
                                description: >
                                  Some fields, like dropdowns, have different
                                  internal values and "human readable" value.
                                  For example,

                                  field "country" can have internal value "CL"
                                  and display value "Chile". In most cases,
                                  however, 

                                  displayValue is equal to value.
                                example: some name
                              value:
                                type: string
                                example: some name
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      hasNext:
                        type: boolean
                        description: |
                          True if next page will have at least one result
                        example: false
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/sellers/{sellerId}:
    get:
      summary: Get Seller By Id
      description: >
        Fetch a seller by a provided id. You need to either belong to the seller
        or have permission to see all sellers in order to get the data.

        Note that changes in some fields in seller profile requires

        approval. This endpoint returns approved values. In more details it
        means following: if 

        there is field which requires QC, let's say "Account Number", and it was
        changed from

        approved value A to B and this change was not yet approved by admins,
        then this endpoint 

        will return A as value of this field.
      parameters:
        - in: path
          name: sellerId
          required: true
          schema:
            type: integer
          description: Numeric Id of Seller
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 32
                  uuid:
                    type: string
                    example: 093a9e34-xxxx-xxxx-xxxx-53766e338abf
                  srcId:
                    type: string
                    example: '131'
                    description: >-
                      ID of the seller in the shop system. It is intentionally a
                      string as in some systems this ID may be not numeric.
                  shortCode:
                    type: string
                    example: CI100AA
                  status:
                    type: string
                    example: active
                    enum:
                      - active
                      - inactive
                      - deleted
                  name:
                    type: string
                    example: GFG eCommerce Technologies GmbH
                  companyName:
                    type: string
                    example: GFG eCommerce Technologies GmbH
                  email:
                    type: string
                    example: seller@example.com
                  taxClass:
                    type: string
                    example: national
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  verified:
                    type: boolean
                  listed:
                    type: boolean
                    example: false
                  delistReasons:
                    type: array
                    items:
                      type: object
                      properties:
                        reasonIdentifier:
                          type: integer
                          example: 1
                        reason:
                          type: string
                          description: Reason for why the seller was delisted
                          enum:
                            - USER_DEFINED
                            - HOLIDAY_MODE
                            - DAILY_ORDER_LIMIT
                            - PENDING_ORDER_LIMIT
                            - PENDING_TO_SHIPPED_ORDER_LIMIT
                          example: DAILY_ORDER_LIMIT
                        message:
                          type: string
                          description: >-
                            Message for why the seller was delisted. This text
                            might be shown to the seller but will not be
                            translated.
                          example: Daily Order Limit reached
                        reasonLimit:
                          type: integer
                          description: >
                            Optional limit for the delisted reason. E.g., the
                            reason DAILY_ORDER_LIMIT might have a limit of 100
                            orders per day.
                          example: 100
                  profileFields:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: shop_name
                        displayValue:
                          type: string
                          description: >
                            Some fields, like dropdowns, have different internal
                            values and "human readable" value. For example,

                            field "country" can have internal value "CL" and
                            display value "Chile". In most cases, however, 

                            displayValue is equal to value.
                          example: some name
                        value:
                          type: string
                          example: some name
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller/commissions:
    get:
      summary: Get list of commissions
      tags:
        - Seller
      security:
        - oAuth: []
      responses:
        '200':
          description: List of commissions
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        sellerDescription:
                          type: string
                          nullable: true
                        inheritanceType:
                          type: string
                        numericType:
                          type: string
                        value:
                          type: number
                          format: float
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/seller/profile/general:
    put:
      summary: Update seller general information
      description: >-
        For attributes like dropdown / list you can save multiple values using
        comma as a separator
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  value:
                    type: string
                    example: 000-111-222-33345
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    value:
                      type: string
                      example: 000-111-222-33345
                      description: >
                        If type=file then value is json string with two fields:
                        "originalName" and "url". url - is a temporal link
                        Example: {"originalName": "file1.pdf", "url":
                        "https://some-s3-bucket.s3.amazonaws.com/path/to/your/object?Expires=EXPIRATION_TIMESTAMP&Signature=SIGNATURE"}
                        If type<>file then value is plain value that can be
                        presented in the UI
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller/profile/field/{fieldId}/upload:
    post:
      summary: Upload seller file
      description: >
        For seller profile fields with type=file you can upload a file using
        this endpoint To remove a file, send an empty string as value for field
        in PUT /v2/seller/profile/general Example: {"id": 1, "field": "", //
        other fields...} PUT verb is used instead of DELETE because the field
        value is not deleted, it is just set to empty string But under the hood,
        the file is deleted from the server
      security:
        - oAuth: []
      parameters:
        - in: path
          name: fieldId
          required: true
          schema:
            type: integer
          description: Numeric Id of configuration field
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: |
                The field name 'file1' is temporary - it will be changed
              required:
                - file1
              properties:
                file1:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    value:
                      type: string
                      example: 000-111-222-33345
                      description: >
                        If type=file then value is json string with two fields:
                        "originalName" and "url". url - is a temporal link
                        Example: {"originalName": "file1.pdf", "url":
                        "https://some-s3-bucket.s3.amazonaws.com/path/to/your/object?Expires=EXPIRATION_TIMESTAMP&Signature=SIGNATURE"}
                        If type<>file then value is plain value that can be
                        presented in the UI
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller/profile/field-values:
    get:
      description: >-
        Get values for the seller's configurable fields. Note that changes in
        some fields in seller profile requires approval. This endpoint returns
        latest values, including changes that were not yet approved by admins.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 123
                    value:
                      type: string
                      example: 000-111-222-33345
                      description: >
                        If type=file then value is json string with two fields:
                        "originalName" and "url". url - is a temporal link
                        Example: {"originalName": "file1.pdf", "url":
                        "https://some-s3-bucket.s3.amazonaws.com/path/to/your/object?Expires=EXPIRATION_TIMESTAMP&Signature=SIGNATURE"}
                        If type<>file then value is plain value that can be
                        presented in the UI
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller/profile/external-files:
    get:
      description: >
        Get list of "external files" for current seller. External files are
        files not uploaded by

        seller, but generated by system or uploaded by marketplace admins.
        Example of external files are:

        Terms & Conditions, Contracts, Statements, etc.
      security:
        - oAuth: []
      parameters:
        - name: limit
          in: query
          description: The maximum number of items to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: The number of items to skip before starting to return results.
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          description: |
            When "sort" is set, you should also provide "sortDir" parameter.
          schema:
            type: string
            example: uploadedAt
            enum:
              - uploadedAt
              - fileType
              - fileName
        - name: sortDir
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
            example: ASC
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        fileType:
                          description: >
                            Type of the file. Note that types can be added
                            and/or removed in future.
                          type: string
                          example: generic
                          enum:
                            - generic
                            - contract
                            - terms
                        fileName:
                          description: >
                            Name of the file, usually original name of the file.
                            You can use this field to display the file name in
                            the UI  and to understand what kind of information
                            is in certain file.
                          type: string
                          example: Addendum_May2024.pdf
                        uploadedAt:
                          description: |
                            Date and time when the file was uploaded.
                          type: string
                          format: date-time
                          example: '2024-10-08T13:35:17+00:00'
                        downloadUrl:
                          description: >
                            Temporal link to download the file. This link is
                            valid for 1 hour and can be used to download the
                            file.
                          type: string
                          example: >-
                            https://some-s3-bucket.s3.amazonaws.com/path/to/your/object?Expires=EXPIRATION_TIMESTAMP&Signature=SIGNATURE
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/seller/payout:
    get:
      summary: Fetching currently logged in Seller Payouts
      description: Fetching transaction statements of Seller
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    statementNumber:
                      type: string
                      description: Url of the contract file
                      example: TEST1234-20221122
                    createdAt:
                      type: string
                      format: date-time
                      description: Date and time when the statement was created
                      example: '2022-11-01 03:33:47'
                    updatedAt:
                      type: string
                      format: date-time
                      description: Date and time when the statement was last updated
                      example: '2022-11-01 03:33:47'
                    openingBalance:
                      type: number
                      format: float
                      description: The opening balance
                    itemRevenue:
                      type: number
                      format: float
                      description: The revenue generated by the item.
                    shipmentFee:
                      type: number
                      format: float
                      description: Cost of shipping.
                    shipmentFeeCredit:
                      type: number
                      format: float
                      description: Shipping credit, if any.
                    otherRevenueTotal:
                      type: number
                      format: float
                    feesTotal:
                      type: number
                      format: float
                      description: Sum of Payment Fee & Return to Seller Fee
                    subtotal1:
                      type: number
                      format: float
                      description: (Sum of Item Revenue, Other Revenue) - Fees(Total)
                    refunds:
                      type: number
                      format: integer
                      description: Sum of all refunds, if any.
                    feesOnRefundsTotal:
                      type: number
                      format: float
                      description: Accumulated fees on refunds issued.
                    subtotal2:
                      type: number
                      format: float
                      description: (Sum of Subtotal1) - Refunds
                    closingBalance:
                      type: number
                      format: float
                      description: Closing Balance
                    guaranteeDeposit:
                      type: number
                      format: float
                      description: Guarantee Deposit
                    payout:
                      type: number
                      format: float
                      description: Amount to be Paid Out to Seller for Statement
                    paid:
                      type: boolean
                      description: Payout Status of Statement. 1 is Paid. 0 is Not Paid
                    paymentReference:
                      type: string
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/manifest:
    get:
      summary: Returns a set of Manifests.
      security:
        - oAuth: []
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum:
              - forward
              - return
        - name: manifestCodes[]
          in: query
          description: Search by manifest codes.
          schema:
            type: array
            items:
              type: string
              example: my-4231
              description: Manifest code
        - in: query
          name: dateStart
          description: Search by manifest creation date time.
          schema:
            type: string
            anyOf:
              - format: date-time
            example: '2022-12-11T08:46:12.123456Z'
        - in: query
          name: dateEnd
          description: Search by manifest creation date time. Time information is optional.
          schema:
            type: string
            anyOf:
              - format: date-time
            example: '2022-12-11T21:46:12.123456Z'
        - in: query
          name: orderNumbers[]
          description: Search by order number
          schema:
            type: array
            items:
              type: string
        - required: false
          description: Array of numeric Order Item Ids
          in: query
          name: orderItemIds[]
          schema:
            type: array
            items:
              type: integer
        - name: status
          in: query
          schema:
            type: string
            enum:
              - forward_ready_to_ship
              - forward_received
              - forward_shipped
              - return_ready_to_ship
              - return_received
              - return_shipped
        - name: sort
          in: query
          schema:
            type: string
            example: manifestCode
            enum:
              - createdAt
              - manifestCode
        - in: query
          name: sortDir
          description: Sorting direction
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      description: Manifest
                      type: object
                      properties:
                        manifestId:
                          example: 68
                          type: integer
                        shipmentProvider:
                          example: DHL
                          type: string
                        trackingCode:
                          example: 123ABC456EFG
                          type: string
                        type:
                          example: forward
                          type: string
                          enum:
                            - forward
                            - return
                        manifestCode:
                          example: 123ABC456EFG
                          type: string
                        orderItems:
                          type: array
                          items:
                            description: OrderItem
                            type: object
                            properties:
                              orderItemId:
                                example: 1
                                type: integer
                              returnReason:
                                example: Product not available
                                type: string
                        actions:
                          type: array
                          items:
                            type: string
                            enum:
                              - print_manifest
                              - status_set_to_shipped
                              - print_credit_note
                        status:
                          example: forward_ready_to_ship
                          type: string
                          enum:
                            - forward_ready_to_ship
                            - forward_received
                            - forward_shipped
                            - return_ready_to_ship
                            - return_received
                            - return_shipped
                        packagesCount:
                          example: 1
                          type: integer
                        createdAt:
                          description: Created At
                          type: string
                          format: date-time
                          example: '2022-05-04T12:39:13+00:00'
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      hasNext:
                        type: boolean
                        description: |
                          True if next page will have at least one result
                        example: false
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Manifest
    post:
      tags:
        - Manifest
      summary: >-
        Create forward manifest. To use this endpoit you have to have enabled
        Manifest feature.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderItemIds:
                  type: array
                  items:
                    type: integer
                  example:
                    - 123456
                    - 654321
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                description: Manifest
                type: object
                properties:
                  manifestId:
                    example: 68
                    type: integer
                    description: Manifest Id
                  manifestCode:
                    example: my-4231
                    type: string
                    description: Manifest code
                  trackingCode:
                    example: 123ABC456EFG
                    type: string
                    description: Tracking Code
                  orderItems:
                    type: array
                    items:
                      description: OrderItem
                      type: object
                      properties:
                        orderItemId:
                          example: 1
                          type: integer
                        returnReason:
                          example: Product not available
                          type: string
                  status:
                    example: forward_ready_to_ship
                    type: string
                    description: Manifest status
                    enum:
                      - forward_ready_to_ship
                      - forward_received
                      - forward_shipped
                      - return_ready_to_ship
                      - return_received
                      - return_shipped
                  type:
                    type: string
                    description: Manifest type
                    example: forward
                    enum:
                      - forward
                      - return
                  shipmentProviderId:
                    example: 1
                    type: integer
                    description: Shipment Provider Id
                    nullable: true
                  createdAt:
                    description: Created At
                    type: string
                    format: date-time
                    example: '2022-05-04T12:39:13+00:00'
                  sellerId:
                    type: integer
                    description: Seller Id
                    example: 1
                required:
                  - id
                  - code
                  - trackingCode
                  - status
                  - type
                  - shipmentProviderId
                  - createdAt
                  - sellerId
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
  /v2/manifest/{manifestId}:
    get:
      summary: Returns a Manifest by id.
      security:
        - oAuth: []
      parameters:
        - required: true
          description: Numeric Manifest Id
          in: path
          name: manifestId
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: Manifest
                type: object
                properties:
                  manifestId:
                    example: 68
                    type: integer
                  shipmentProvider:
                    example: DHL
                    type: string
                  trackingCode:
                    example: 123ABC456EFG
                    type: string
                  type:
                    example: forward
                    type: string
                    enum:
                      - forward
                      - return
                  manifestCode:
                    example: 123ABC456EFG
                    type: string
                  orderItems:
                    type: array
                    items:
                      description: OrderItem
                      type: object
                      properties:
                        orderItemId:
                          example: 1
                          type: integer
                        returnReason:
                          example: Product not available
                          type: string
                  actions:
                    type: array
                    items:
                      type: string
                      enum:
                        - print_manifest
                        - status_set_to_shipped
                        - print_credit_note
                  status:
                    example: forward_ready_to_ship
                    type: string
                    enum:
                      - forward_ready_to_ship
                      - forward_received
                      - forward_shipped
                      - return_ready_to_ship
                      - return_received
                      - return_shipped
                  packagesCount:
                    example: 1
                    type: integer
                  createdAt:
                    description: Created At
                    type: string
                    format: date-time
                    example: '2022-05-04T12:39:13+00:00'
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Manifest
  /v2/manifest/shipped:
    post:
      summary: Change manifest status to shipped.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                manifestIds:
                  type: array
                  items:
                    type: integer
                    description: Manifest Id
                    example: 1
              required:
                - manifestIds
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Manifest
                  type: object
                  properties:
                    manifestId:
                      example: 68
                      type: integer
                      description: Manifest Id
                    manifestCode:
                      example: my-4231
                      type: string
                      description: Manifest code
                    trackingCode:
                      example: 123ABC456EFG
                      type: string
                      description: Tracking Code
                    orderItems:
                      type: array
                      items:
                        description: OrderItem
                        type: object
                        properties:
                          orderItemId:
                            example: 1
                            type: integer
                          returnReason:
                            example: Product not available
                            type: string
                    status:
                      example: forward_ready_to_ship
                      type: string
                      description: Manifest status
                      enum:
                        - forward_ready_to_ship
                        - forward_received
                        - forward_shipped
                        - return_ready_to_ship
                        - return_received
                        - return_shipped
                    type:
                      type: string
                      description: Manifest type
                      example: forward
                      enum:
                        - forward
                        - return
                    shipmentProviderId:
                      example: 1
                      type: integer
                      description: Shipment Provider Id
                      nullable: true
                    createdAt:
                      description: Created At
                      type: string
                      format: date-time
                      example: '2022-05-04T12:39:13+00:00'
                    sellerId:
                      type: integer
                      description: Seller Id
                      example: 1
                  required:
                    - id
                    - code
                    - trackingCode
                    - status
                    - type
                    - shipmentProviderId
                    - createdAt
                    - sellerId
        '401':
          description: Unauthorized error
        '403':
          description: |
            - The seller can only update the status for his manifest.
            - If the feature is disabled.
        '404':
          description: Manifest not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Manifest
  /v2/document/manifest:
    get:
      summary: Returns a manifest document.
      description: >
        Returns an order manifest document containing all information about the
        manifest. In order to use the endpoint,  manifest code needs to be
        provided. For most of the regions the code needs to follow a template
        which can be found  in config parameters.

        The document is base64 encrypted and represents an html page with all
        information about the order manifest.
      security:
        - oAuth: []
      parameters:
        - name: manifestCode
          in: query
          description: Search by manifest code.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  DocumentType:
                    example: manifest
                    type: string
                  MimeType:
                    example: text/html
                    type: string
                  File:
                    example: 0eWxlPmJvZHkgeyBmb250LXNpemU6MTBweDsgZm9udC1mYW1pbHk
                    type: string
                    description: the manifest file encoded base64
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Manifest
  /v2/exports/manifest:
    post:
      summary: Trigger an export job for manifest document
      description: >
        Export files are generated in background. Returns an order manifest
        document containing all information about the manifest. In order to use
        the endpoint,  manifest code needs to be provided. For most of the
        regions the code needs to follow a template which can be found  in
        config parameters.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - manifestIds
              properties:
                manifestIds:
                  type: array
                  description: The manifest ids to be exported
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: integer
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Manifest
  /v2/exports:
    get:
      summary: >
        Get list of exports. Note that for some export items you may be able to
        see the download
         link in response, but have no permission to download the file itself (depending on your
        role and role of person who created that export item).
      security:
        - oAuth: []
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 10
            minimum: 1
            maximum: 20
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
        - in: query
          required: true
          name: exportActions[]
          description: specifies list of export actions
          schema:
            type: array
            items:
              type: string
              enum:
                - ProductImage
                - Product
                - SellerPriceTemplate
                - SellerStatusTemplate
                - ProductStock
                - Order
                - OrderToShip
                - OrderImportTemplate
                - ProductCreationTemplate
                - FeedErrorReport
                - FeedGeneralErrorReport
                - OrderDocumentsAsPdf
                - ManifestDocumentsAsPdf
                - OrderInvoiceAsPdf
                - Manifest
                - TaggedOrderItems
                - TaggedProducts
                - OrderReturn
                - CategoryMappings
                - User
              example:
                - Product
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
            example: id_export_item
            enum:
              - id_export_item
              - created_at
              - updated_at
        - name: orderDirection
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
            example: ASC
        - in: query
          required: false
          name: keyword
          description: Search by "export content" (by name of the export)
          schema:
            type: string
            example: Product - Fashion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          example: 524
                          type: integer
                          description: >
                            ID of user who triggered export. When you request
                            exports you can see also exports

                            which were created by another users from the same
                            Seller
                        sellerId:
                          example: 4089
                          type: integer
                        status:
                          type: string
                          enum:
                            - Finished
                            - Processing
                            - Error
                            - Queued
                            - Expired
                        isDeleted:
                          type: boolean
                          description: >
                            Export files has limited time of storage and after
                            it they are deleted. This

                            flag indicates that physical was already deleted and
                            if you need to download

                            this export then you will need to generate it again.
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        expiresAt:
                          type: string
                          format: date-time
                          description: >-
                            datetime when this export file scheduled for
                            deletion
                        requestedFormats:
                          type: array
                          description: formats which were requested for export
                          items:
                            type: string
                            enum:
                              - csv
                              - xlsx
                        downloadLinks:
                          type: array
                          items:
                            type: string
                          description: >
                            list of relative links to download export files. For
                            some types of

                            export files are generated in several formats,
                            therefore you may

                            have several links to download files.
                        exportContent:
                          example: Products - Shoes
                          type: string
                          description: >
                            short description of export file to distinguish
                            between different export items
                        uuid:
                          example: a8fd052d-f29a-471a-b92b-52bb0d2c0be4
                          type: string
                          description: >
                            Unique identifier of file. You can use it to
                            download file.
                        note:
                          type: string
                          description: >
                            Note on export item. It can be used to store some
                            additional information eg. failure reason
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Export
  /v2/exports/order-manifests:
    post:
      summary: Create an async manifest export job
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - forward
                        - return
                    manifestCodes:
                      type: array
                      items:
                        type: string
                      example: my-4231
                      description: Manifest code
                    dateStart:
                      type: string
                      format: date-time
                      example: '2024-09-13T08:46:12.123456Z'
                    dateEnd:
                      type: string
                      format: date-time
                      example: '2024-09-13T08:46:12.123456Z'
                    orderNumbers:
                      type: array
                      items:
                        type: string
                    orderItemIds:
                      type: array
                      items:
                        type: integer
                      example:
                        - 123456
                        - 654321
                    status:
                      type: string
                      enum:
                        - forward_ready_to_ship
                        - forward_received
                        - forward_shipped
                        - return_ready_to_ship
                        - return_received
                        - return_shipped
                - type: object
                  properties:
                    manifestIds:
                      type: array
                      items:
                        type: integer
                      example:
                        - 123456
                        - 654321
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUuid:
                    type: string
                    example: 88afb380-219a-4450-9320-6e7dad1b518b
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Export
  /v2/exports/sales-report:
    post:
      summary: |
        Create a new export entity with export action of sales report
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - locale
                - currency
              properties:
                locale:
                  type: string
                  example: en_US
                statementType:
                  type: string
                  default: marketplace
                  description: The statementType of the account statement.
                  enum:
                    - marketplace
                    - consignment
                currency:
                  type: string
                  example: EUR
                  description: >-
                    The currency of the account statement. This filter will be
                    ignored when a search with a statementId (> 0) is getting
                    executed
                statementId:
                  type: number
                  default: 0
                  description: >-
                    The identifier of the account statement. The value 0 should
                    be used to get the current open statement (or not provided
                    parameter). This filter will be ignored when a search with a
                    statementId (> 0) is getting executed
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUuid:
                    type: string
                    example: 88afb380-219a-4450-9320-6e7dad1b518b
      tags:
        - Export
  /v2/exports/report-transactions:
    post:
      summary: |
        Create a new export entity with export action of report transactions
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - locale
                - currency
                - transactionTypeIds
              properties:
                locale:
                  type: string
                  example: en_US
                transactionTypeIds:
                  type: array
                  description: >-
                    Ids of all used transaction types of a selected account
                    statement. Transaction Type Ids are mandatory if all
                    transactions of an account statement should be exported or a
                    sub area of the actually statement like (specific section or
                    the sum of a section).
                  items:
                    type: integer
                    example: 2
                statementType:
                  type: string
                  default: marketplace
                  description: >-
                    The statementType of the account statement. This filter will
                    be ignored when a search with a statementId (> 0) is getting
                    executed
                  enum:
                    - marketplace
                    - consignment
                currency:
                  type: string
                  example: EUR
                  description: >-
                    The currency of the account statement. This filter will be
                    ignored when a search with a statementId (> 0) is getting
                    executed
                statementId:
                  type: number
                  default: 0
                  description: >-
                    The identifier of the account statement. The value 0 should
                    be used to get the current open statement (or not provided
                    parameter).
                label:
                  type: string
                  example: Sales Revenue 15 Mar 2024 - 21 Mar 2024
                  description: Defines the title of the export file name.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUuid:
                    type: string
                    example: 88afb380-219a-4450-9320-6e7dad1b518b
      tags:
        - Export
  /v2/exports/report-order-item-transactions:
    post:
      summary: >
        Create a new export entity with export action of report order item
        transactions
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - locale
                - currency
              properties:
                currency:
                  type: string
                  example: EUR
                  description: The currency which an order item belongs to.
                isHybrid:
                  type: boolean
                  description: >-
                    Filter by the transaction's association with order item
                    which is hybrid.
                isOutlet:
                  type: boolean
                  description: >-
                    Filter by the transaction's association with order item
                    which is outlet.
                payoutStatus:
                  type: string
                  description: >-
                    Filter by the transaction's association with account
                    statement is paid.
                  enum:
                    - paid
                    - unpaid
                    - partiallyPaid
                status:
                  type: array
                  description: String of all possible order item statuses
                  items:
                    type: string
                    enum:
                      - pending
                      - shipped
                      - canceled
                      - returned
                      - failed
                      - delivered
                      - ready_to_ship
                      - return_shipped_by_customer
                      - return_waiting_for_approval
                      - return_rejected
                      - return_delivered
                      - payment_pending
                locale:
                  type: string
                  example: en_US
                startDate:
                  description: >-
                    Filter by the transaction's association with a order
                    creation date that is greater than or equal to the provided
                    value.
                  type: string
                  default: null
                  example: '2024-01-01T22:00:00.000Z'
                endDate:
                  description: >-
                    Filter by the transaction's association with a order
                    creation date that is lower than or equal to the provided
                    value.
                  type: string
                  default: null
                  example: '2024-01-01T22:00:00.000Z'
                orderNumbers:
                  type: array
                  description: Search by order number
                  items:
                    type: string
                products:
                  type: array
                  description: Search by a product name, sku or seller sku
                  items:
                    type: string
                shipmentTypes:
                  type: array
                  description: Shipment type of an order item.
                  default: null
                  items:
                    type: string
                  enum:
                    - warehouse
                    - dropshipping
                    - cross-docking
                statementType:
                  type: string
                  description: The statementType of the account statement.
                  default: marketplace
                  enum:
                    - marketplace
                    - consignment
                statementId:
                  type: number
                  description: >-
                    The identifier of the account statement. The value 0 is
                    representing the current statement.
                  example: 4
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUuid:
                    type: string
                    example: 88afb380-219a-4450-9320-6e7dad1b518b
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                    example: Validation Failed
                  detail:
                    type: string
                    example: 'orderItemIds[0]: This value should be of type integer.'
                  violations:
                    type: array
                    items:
                      type: object
                      properties:
                        propertyPath:
                          type: string
                          example: orderItemIds[0]
                        title:
                          type: string
                          example: This value should be of type integer.
                        parameters:
                          type: object
                          properties:
                            value:
                              type: string
                              example: invalid_order_item_id
                            type:
                              type: string
                              example: integer
                        type:
                          type: string
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Export
  /v2/exports/unified-transactions:
    post:
      summary: |
        Create a new export entity with export action of transactions
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - locale
                - currency
              properties:
                currency:
                  type: string
                  example: EUR
                  description: The currency which an order item belongs to.
                isHybrid:
                  type: boolean
                  description: >-
                    Filter by the transaction's association with order item
                    which is hybrid.
                  default: false
                isOutlet:
                  type: boolean
                  description: >-
                    Filter by the transaction's association with order item
                    which is outlet.
                  default: false
                payoutStatus:
                  type: string
                  description: >-
                    Filter by the transaction's association with account
                    statement is paid.
                  default: unpaid
                  enum:
                    - paid
                    - unpaid
                    - partiallyPaid
                locale:
                  type: string
                  example: en_US
                startDate:
                  description: >-
                    Filter by the transaction's association with a order
                    creation date that is greater than or equal to the provided
                    value.
                  type: string
                  default: null
                  example: '2024-01-01T22:00:00.000Z'
                endDate:
                  description: >-
                    Filter by the transaction's association with a order
                    creation date that is lower than or equal to the provided
                    value.
                  type: string
                  default: null
                  example: '2024-01-01T22:00:00.000Z'
                orderNumbers:
                  type: array
                  description: Search by order number
                  items:
                    type: string
                transactionNumbers:
                  type: array
                  description: Search by concrete transaction numbers
                  items:
                    type: string
                transactionTypeIds:
                  type: array
                  description: Search by concrete transaction types
                  items:
                    type: number
                products:
                  type: array
                  description: Search by a product name, sku or seller sku
                  items:
                    type: string
                statementType:
                  type: string
                  description: The statementType of the account statement.
                  default: marketplace
                  enum:
                    - marketplace
                    - consignment
                statementId:
                  type: number
                  description: >-
                    The identifier of the account statement. The value 0 is
                    representing the current statement.
                  example: 4
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUuid:
                    type: string
                    example: 88afb380-219a-4450-9320-6e7dad1b518b
        '400':
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  title:
                    type: string
                    example: Validation Failed
                  detail:
                    type: string
                    example: 'orderItemIds[0]: This value should be of type integer.'
                  violations:
                    type: array
                    items:
                      type: object
                      properties:
                        propertyPath:
                          type: string
                          example: orderItemIds[0]
                        title:
                          type: string
                          example: This value should be of type integer.
                        parameters:
                          type: object
                          properties:
                            value:
                              type: string
                              example: invalid_order_item_id
                            type:
                              type: string
                              example: integer
                        type:
                          type: string
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Export
  /v2/exports/invoice-tax-document:
    post:
      summary: |
        Create a new export entity with export action of invoice tax document
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - locale
                - statementId
                - currency
              properties:
                locale:
                  type: string
                  example: en_US
                statementType:
                  type: string
                  default: marketplace
                  description: The statementType of the account statement.
                  enum:
                    - marketplace
                    - consignment
                currency:
                  type: string
                  example: EUR
                  description: >-
                    The currency of the account statement. This filter will be
                    ignored when a search with a statementId (> 0) is getting
                    executed
                statementId:
                  type: number
                  default: 0
                  description: >-
                    The identifier of the account statement. The value 0 should
                    be used to get the current open statement. This filter will
                    be ignored when a search with a statementId (> 0) is getting
                    executed
                sellerId:
                  type: integer
                  example: 123456
                  description: The identifier of the seller.
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  fileUuid:
                    type: string
                    example: 88afb380-219a-4450-9320-6e7dad1b518b
      tags:
        - Export
  /v2/exports/{exportItemId}:
    get:
      summary: >
        Get information about given export item the user started.

        Note: for some export items you may be able to see the

        download link in response, but have no permission to download the file
        itself (depending on your

        role and role of person who created that export item).
      security:
        - oAuth: []
      parameters:
        - in: path
          name: exportItemId
          required: true
          schema:
            type: integer
          description: Numeric Id of Export Item
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    example: 524
                    type: integer
                    description: >
                      ID of user who triggered export. When you request exports
                      you can see also exports

                      which were created by another users from the same Seller
                  sellerId:
                    example: 4089
                    type: integer
                  status:
                    type: string
                    enum:
                      - Finished
                      - Processing
                      - Error
                      - Queued
                      - Expired
                  isDeleted:
                    type: boolean
                    description: >
                      Export files has limited time of storage and after it they
                      are deleted. This

                      flag indicates that physical was already deleted and if
                      you need to download

                      this export then you will need to generate it again.
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  expiresAt:
                    type: string
                    format: date-time
                    description: datetime when this export file scheduled for deletion
                  requestedFormats:
                    type: array
                    description: formats which were requested for export
                    items:
                      type: string
                      enum:
                        - csv
                        - xlsx
                  downloadLinks:
                    type: array
                    items:
                      type: string
                    description: >
                      list of relative links to download export files. For some
                      types of

                      export files are generated in several formats, therefore
                      you may

                      have several links to download files.
                  exportContent:
                    example: Products - Shoes
                    type: string
                    description: >
                      short description of export file to distinguish between
                      different export items
                  uuid:
                    example: a8fd052d-f29a-471a-b92b-52bb0d2c0be4
                    type: string
                    description: >
                      Unique identifier of file. You can use it to download
                      file.
                  note:
                    type: string
                    description: >
                      Note on export item. It can be used to store some
                      additional information eg. failure reason
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Export
  /v2/product-sets/stocks:
    get:
      tags:
        - ProductStock
      summary: Internal! Get the sum of stocks by product sets ids.
      security:
        - oAuth: []
      description: >
        Internal! Get the list of sum of stocks per product set id. If the
        product set does not exist the sum of stocks will be 0. You are free to
        use this endpoint, but in this endpoint there could be breaking changes
        without notice.
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids
          required: true
          schema:
            type: array
            items:
              type: integer
            example:
              - 3872
              - 549
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productSetId:
                      type: integer
                      example: 5
                    sumOfStocks:
                      type: integer
                      example: 10
                    hasProductWithZeroStock:
                      type: boolean
                      example: false
                      description: >
                        Can be used to inform user that at least one of products
                        in product set has

                        no stocks. It may be useful for end user to take an
                        action to refill stock.
                    fulfilmentStock:
                      type: integer
                      example: 5
                      description: The stock received
                    reservedStock:
                      type: integer
                      example: 10
                      description: Stock that is reserved
                    sellableStock:
                      type: integer
                      example: 101
                      description: >-
                        ReceivedConsignment + CanceledConsignment +
                        ReturnedConsignment + FailedConsignment
                    nonSellableStock:
                      type: integer
                      example: 2
                      description: QuarantinedConsignment + DefectiveConsignment
                    isConsignmentShipment:
                      type: boolean
                      example: false
                      description: >-
                        Shows if the shipment type is consignment, which means
                        the seller use own warehouse
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/attributes/{attributeId}:
    get:
      summary: Fetching Attributes details by attributeId
      description: Fetching Attributes data by Attribute Id.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: attributeId
          required: true
          schema:
            type: integer
          description: Numeric Id of Attribute
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: >
                      Attribute identifier. Please, consider the fact that there
                      could be several attributes with

                      the same name, but with different IDs. For example, there
                      can be AttributeSets "Shoes", "Dresses"

                      and "Jewelry". Shoes and Dresses has "color", but there is
                      no such attribute for "Jewelry".


                      So when you want to create product in "Shoes" or "Dresses"
                      you can (and if "color" is mandatory -

                      should) pass value of "color". But this attribute "color"
                      will have different IDs, probably

                      different set of options, maybe different validation rules
                      and so on.
                    type: integer
                    example: 7865
                    readOnly: true
                    nullable: true
                  label:
                    description: >
                      Attribute label, in general same as name, but can contain
                      spaces and non-latin and/or non numeric

                      characters. Subject to change. For example, there is
                      attribute with label "Colour" but then new

                      attribute "Second color" was added to make end users be
                      able to shop for perfect colour combination.

                      After that attribute with label "Colour" may change its
                      label to "Main Colour". You can use this

                      property if you are building your own UI for SellerCenter
                      operations as label for attribute.
                    type: string
                    example: Sample attribute label
                    nullable: true
                    readOnly: true
                  name:
                    description: >-
                      Attribute name for internal usage. You can ignore this
                      property.
                    type: string
                    example: Attribute name
                    nullable: false
                    readOnly: true
                  feedName:
                    description: >
                      Feed name: this is how attribute is displayed in XLSX
                      exports and expected to be in imports. When your

                      integration with SellerCenter will generate files for
                      upload to SellerCenter, then you need to use this

                      property as column name. Very rarely changed, but you need
                      to consider that is can happen.
                    type: string
                    example: Feed name
                    nullable: false
                    readOnly: true
                  groupName:
                    description: >
                      Attribute's group name. If you implement own UI for
                      SellerCenter it is useful to display attributes in

                      groups, for example "Delivery", "Product Additional
                      Details". By using this field you can split

                      attributes in groups and display accordingly.
                    type: string
                    example: Content
                    nullable: true
                    readOnly: true
                  isMandatory:
                    description: |
                      Attribute is mandatory.
                    type: boolean
                    example: false
                    nullable: false
                    readOnly: true
                  isGlobalAttribute:
                    description: >
                      Is true when attribute does not belong to certain
                      AttributeSet and can be set for any product.
                    type: boolean
                    example: true
                    nullable: true
                    readOnly: true
                  description:
                    description: >
                      Attribute description. Maybe useful to see more about
                      meaning of attribute or when you develop

                      own UI for SellerCenter operations.
                    type: string
                    example: Some description of an attribute
                    nullable: true
                    readOnly: true
                  productType:
                    description: >
                      Legacy field indicating whether attribute belongs to
                      product ("simple"), product set ("config") or very-special

                      ("sellercenter"). Please, do not rely on this field as it
                      is subject to change in near future. It is left

                      for compatibility reasons for some clients of previous
                      versions of API.
                    type: string
                    example: sellercenter
                    nullable: false
                    readOnly: true
                  inputType:
                    description: >
                      Type of input to display to user. See enum values for
                      possible values. This may be

                      useful if you develop your own UI for SellerCenter.
                    type: string
                    enum:
                      - checkbox
                      - datefield
                      - datetime
                      - dropdown
                      - multiselect
                      - numberfield
                      - textarea
                      - textfield
                    example: numberfield
                    nullable: false
                    readOnly: true
                  attributeType:
                    description: >
                      Type of an attribute, see enum for possible values. It
                      defines how SellerCenter stores value of certain

                      attribute. For type of "value" - it is stored "as-is", for
                      "option" - ID of option stored,

                      for "multi_option" - array or option IDs.


                      This is useful when you get information about product set
                      and you want to understand whether

                      123 is plain value or ID of option.


                      There is a special attribute type called "system".
                      Attribute with those types returned for purposes

                      of making aware about logic of those attributes. For
                      example, you may see attribute "Brand" among them.

                      From this attribute you will see useful information like
                      "is it mandatory?", "what is example value of

                      it?", "what description can I show to my users while I
                      develop our own UI for SellerCenter".


                      Attributes of this type should not be sent in array of
                      "attributes" when you create or update your

                      product sets. Continuing with example of Brand attribute:
                      to pass this information you should use

                      field brandId in root of payload for creation of product
                      set.
                    type: string
                    enum:
                      - value
                      - option
                      - multi_option
                      - system
                    example: system
                    nullable: false
                    readOnly: true
                  exampleValue:
                    description: Attribute's example value
                    type: string
                    nullable: true
                    readOnly: true
                  maxLength:
                    description: |
                      Attribute's max length, applicable for string attributes.
                    type: integer
                    example: 23
                    nullable: true
                    readOnly: true
                  isVisibleForHybrid:
                    description: >
                      This flag enables/disable if an attribute is visible or
                      not for a hybrid product
                    type: boolean
                    example: true
                    nullable: false
                    readOnly: true
                  attributeDefinitionType:
                    description: |
                      Is used to define the attribute type
                    type: string
                    enum:
                      - default
                      - price_status
                      - price
                      - special_price
                      - sale_start
                      - sale_end
                    example: price
                    nullable: true
                    readOnly: true
                  attributeDefinitionCountry:
                    description: |
                      Is used to define the attribute's country/vendor
                    type: string
                    enum:
                      - TW
                      - SG
                      - PH
                      - ID
                      - MY
                      - HK
                    example: MY
                    nullable: true
                    readOnly: true
                  inputMode:
                    description: >
                      Is used to disable, hide a field. See enum values for
                      possible values.
                    type: string
                    enum:
                      - edit
                      - display
                      - invisible
                      - edit_on_create
                    example: edit
                    nullable: true
                    readOnly: true
                  forbidEmpty:
                    description: |
                      If set to true an attribute can not be 0 or NULL.
                    type: boolean
                    example: true
                    nullable: false
                    readOnly: true
                  options:
                    description: >
                      Attribute options. List of all option for current
                      attribute. Additional validation may apply

                      like validation "brand to attribute mappings", "attribute
                      to attribute mapping". Example:

                      you want to create new product in category "Shoes". Option
                      "45" is among options of attribute

                      "Size", but there is a mapping which says that if for
                      attribute "Age group" there is a value

                      "Kids" selected then only allowed sizes are "20", "21",
                      ... "32".
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: >
                            Option identifier. Please note that several
                            attrbiutes can have options with same name,

                            but with different IDs. You need to use right option
                            ID for right attribute. For example,

                            there are attributes "Colour" (ID=1) and "Soil
                            color" (ID=2). "Color" has option "Black"

                            with ID=1234 and "Soil color" has option "Black"
                            with ID=9876. Even though name of options

                            are the same, when you want to pass value for "Soil
                            color" you can send only 9876,
                          type: integer
                          example: 631
                          readOnly: true
                          nullable: false
                        name:
                          description: >
                            Option name. If you implement own UI for
                            SellerCenter you can display this to user, also

                            same value end user in the shop will see. If you are
                            generating XLS files for future

                            upload to SellerCenter then you need also to use
                            this value. Please, note that very rarely

                            this value can be changed (for example, one colour
                            got splitted in two or more, renamed

                            to be more understandable for end user)
                          type: string
                          example: Black
                          nullable: false
                          readOnly: true
                        isDefault:
                          description: >
                            Is option default. Used as hint when this option is
                            most commonly used. It may be useful

                            if you implementing own UI for SellerCenter and this
                            option should be displayed as

                            selected by defaul when your user sees the screen of
                            product set creation.
                          type: boolean
                          example: false
                          nullable: true
                          readOnly: true
                    nullable: true
                    readOnly: true
                  isEditionBySellerBlocked:
                    description: >
                      If set to true then the value of the attribute can not be
                      changed after the product was synced with the shop.
                    type: boolean
                    example: true
                    nullable: false
                    readOnly: true
                  isUsedInConsignmentFormulas:
                    description: >
                      If set to true then the attribute is used in consignment
                      formulas.
                    type: boolean
                    example: true
                    nullable: false
                    readOnly: true
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Attribute
  /v2/attributes:
    get:
      summary: Fetching Attributes details by filter
      description: >
        Return list of attributes by using given filters. Maximum limit is 100
        even if a higher value is provided.<br>

        If no attribute ids nor attribute set ids are provided then the global
        attributes will be listed.
      security:
        - oAuth: []
      parameters:
        - in: query
          required: false
          name: attributeIds[]
          description: Search by attribute ids
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: attributeSetIds[]
          description: Search by attribute set ids
          schema:
            type: array
            items:
              type: integer
        - name: onlyVisible
          in: query
          required: false
          schema:
            type: boolean
          allowEmptyValue: true
          description: >-
            Whether to return visible items only. If not set at all it will
            default to true.
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: Paginated results of attributes
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: >
                            Attribute identifier. Please, consider the fact that
                            there could be several attributes with

                            the same name, but with different IDs. For example,
                            there can be AttributeSets "Shoes", "Dresses"

                            and "Jewelry". Shoes and Dresses has "color", but
                            there is no such attribute for "Jewelry".


                            So when you want to create product in "Shoes" or
                            "Dresses" you can (and if "color" is mandatory -

                            should) pass value of "color". But this attribute
                            "color" will have different IDs, probably

                            different set of options, maybe different validation
                            rules and so on.
                          type: integer
                          example: 7865
                          readOnly: true
                          nullable: true
                        label:
                          description: >
                            Attribute label, in general same as name, but can
                            contain spaces and non-latin and/or non numeric

                            characters. Subject to change. For example, there is
                            attribute with label "Colour" but then new

                            attribute "Second color" was added to make end users
                            be able to shop for perfect colour combination.

                            After that attribute with label "Colour" may change
                            its label to "Main Colour". You can use this

                            property if you are building your own UI for
                            SellerCenter operations as label for attribute.
                          type: string
                          example: Sample attribute label
                          nullable: true
                          readOnly: true
                        name:
                          description: >-
                            Attribute name for internal usage. You can ignore
                            this property.
                          type: string
                          example: Attribute name
                          nullable: false
                          readOnly: true
                        feedName:
                          description: >
                            Feed name: this is how attribute is displayed in
                            XLSX exports and expected to be in imports. When
                            your

                            integration with SellerCenter will generate files
                            for upload to SellerCenter, then you need to use
                            this

                            property as column name. Very rarely changed, but
                            you need to consider that is can happen.
                          type: string
                          example: Feed name
                          nullable: false
                          readOnly: true
                        groupName:
                          description: >
                            Attribute's group name. If you implement own UI for
                            SellerCenter it is useful to display attributes in

                            groups, for example "Delivery", "Product Additional
                            Details". By using this field you can split

                            attributes in groups and display accordingly.
                          type: string
                          example: Content
                          nullable: true
                          readOnly: true
                        isMandatory:
                          description: |
                            Attribute is mandatory.
                          type: boolean
                          example: false
                          nullable: false
                          readOnly: true
                        isGlobalAttribute:
                          description: >
                            Is true when attribute does not belong to certain
                            AttributeSet and can be set for any product.
                          type: boolean
                          example: true
                          nullable: true
                          readOnly: true
                        description:
                          description: >
                            Attribute description. Maybe useful to see more
                            about meaning of attribute or when you develop

                            own UI for SellerCenter operations.
                          type: string
                          example: Some description of an attribute
                          nullable: true
                          readOnly: true
                        productType:
                          description: >
                            Legacy field indicating whether attribute belongs to
                            product ("simple"), product set ("config") or
                            very-special

                            ("sellercenter"). Please, do not rely on this field
                            as it is subject to change in near future. It is
                            left

                            for compatibility reasons for some clients of
                            previous versions of API.
                          type: string
                          example: sellercenter
                          nullable: false
                          readOnly: true
                        inputType:
                          description: >
                            Type of input to display to user. See enum values
                            for possible values. This may be

                            useful if you develop your own UI for SellerCenter.
                          type: string
                          enum:
                            - checkbox
                            - datefield
                            - datetime
                            - dropdown
                            - multiselect
                            - numberfield
                            - textarea
                            - textfield
                          example: numberfield
                          nullable: false
                          readOnly: true
                        attributeType:
                          description: >
                            Type of an attribute, see enum for possible values.
                            It defines how SellerCenter stores value of certain

                            attribute. For type of "value" - it is stored
                            "as-is", for "option" - ID of option stored,

                            for "multi_option" - array or option IDs.


                            This is useful when you get information about
                            product set and you want to understand whether

                            123 is plain value or ID of option.


                            There is a special attribute type called "system".
                            Attribute with those types returned for purposes

                            of making aware about logic of those attributes. For
                            example, you may see attribute "Brand" among them.

                            From this attribute you will see useful information
                            like "is it mandatory?", "what is example value of

                            it?", "what description can I show to my users while
                            I develop our own UI for SellerCenter".


                            Attributes of this type should not be sent in array
                            of "attributes" when you create or update your

                            product sets. Continuing with example of Brand
                            attribute: to pass this information you should use

                            field brandId in root of payload for creation of
                            product set.
                          type: string
                          enum:
                            - value
                            - option
                            - multi_option
                            - system
                          example: system
                          nullable: false
                          readOnly: true
                        exampleValue:
                          description: Attribute's example value
                          type: string
                          nullable: true
                          readOnly: true
                        maxLength:
                          description: >
                            Attribute's max length, applicable for string
                            attributes.
                          type: integer
                          example: 23
                          nullable: true
                          readOnly: true
                        isVisibleForHybrid:
                          description: >
                            This flag enables/disable if an attribute is visible
                            or not for a hybrid product
                          type: boolean
                          example: true
                          nullable: false
                          readOnly: true
                        attributeDefinitionType:
                          description: |
                            Is used to define the attribute type
                          type: string
                          enum:
                            - default
                            - price_status
                            - price
                            - special_price
                            - sale_start
                            - sale_end
                          example: price
                          nullable: true
                          readOnly: true
                        attributeDefinitionCountry:
                          description: |
                            Is used to define the attribute's country/vendor
                          type: string
                          enum:
                            - TW
                            - SG
                            - PH
                            - ID
                            - MY
                            - HK
                          example: MY
                          nullable: true
                          readOnly: true
                        inputMode:
                          description: >
                            Is used to disable, hide a field. See enum values
                            for possible values.
                          type: string
                          enum:
                            - edit
                            - display
                            - invisible
                            - edit_on_create
                          example: edit
                          nullable: true
                          readOnly: true
                        forbidEmpty:
                          description: |
                            If set to true an attribute can not be 0 or NULL.
                          type: boolean
                          example: true
                          nullable: false
                          readOnly: true
                        options:
                          description: >
                            Attribute options. List of all option for current
                            attribute. Additional validation may apply

                            like validation "brand to attribute mappings",
                            "attribute to attribute mapping". Example:

                            you want to create new product in category "Shoes".
                            Option "45" is among options of attribute

                            "Size", but there is a mapping which says that if
                            for attribute "Age group" there is a value

                            "Kids" selected then only allowed sizes are "20",
                            "21", ... "32".
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                description: >
                                  Option identifier. Please note that several
                                  attrbiutes can have options with same name,

                                  but with different IDs. You need to use right
                                  option ID for right attribute. For example,

                                  there are attributes "Colour" (ID=1) and "Soil
                                  color" (ID=2). "Color" has option "Black"

                                  with ID=1234 and "Soil color" has option
                                  "Black" with ID=9876. Even though name of
                                  options

                                  are the same, when you want to pass value for
                                  "Soil color" you can send only 9876,
                                type: integer
                                example: 631
                                readOnly: true
                                nullable: false
                              name:
                                description: >
                                  Option name. If you implement own UI for
                                  SellerCenter you can display this to user,
                                  also

                                  same value end user in the shop will see. If
                                  you are generating XLS files for future

                                  upload to SellerCenter then you need also to
                                  use this value. Please, note that very rarely

                                  this value can be changed (for example, one
                                  colour got splitted in two or more, renamed

                                  to be more understandable for end user)
                                type: string
                                example: Black
                                nullable: false
                                readOnly: true
                              isDefault:
                                description: >
                                  Is option default. Used as hint when this
                                  option is most commonly used. It may be useful

                                  if you implementing own UI for SellerCenter
                                  and this option should be displayed as

                                  selected by defaul when your user sees the
                                  screen of product set creation.
                                type: boolean
                                example: false
                                nullable: true
                                readOnly: true
                          nullable: true
                          readOnly: true
                        isEditionBySellerBlocked:
                          description: >
                            If set to true then the value of the attribute can
                            not be changed after the product was synced with the
                            shop.
                          type: boolean
                          example: true
                          nullable: false
                          readOnly: true
                        isUsedInConsignmentFormulas:
                          description: >
                            If set to true then the attribute is used in
                            consignment formulas.
                          type: boolean
                          example: true
                          nullable: false
                          readOnly: true
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Attribute
  /v2/feeds:
    get:
      summary: |
        Get list of feeds.
      security:
        - oAuth: []
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 10
            minimum: 1
            maximum: 20
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          example: 524
                          type: integer
                          description: |
                            ID of the feed.
                        sellerId:
                          example: 4089
                          description: >-
                            ID of seller for who this feed is. Useful when your
                            user role allow you to manage multiple sellers.
                          type: integer
                        status:
                          type: string
                          enum:
                            - Finished
                            - Processing
                            - Error
                            - Queued
                            - Canceled
                        action:
                          type: string
                          description: >
                            Feed action ("what type of feed it was"). Types can
                            be added, removed and renamed. You can

                            use this string in UI to display to user or create
                            your mapping/translation for that.
                          enum:
                            - ProductCreate
                            - ProductUpdate
                            - ProductRemove
                            - Image
                            - SendToWarehouse
                            - ReturnFromWarehouse
                            - ProductCategoryMigrate
                            - SellerAttributeImport
                            - PendingTransactionApprove
                            - CsvShippingFee
                            - CsvCancellationFee
                            - CsvReturnDeliveryFee
                            - CsvReturnHandlingFee
                            - CsvReturnToSellerFee
                            - CsvMarkAsPaid
                            - CsvDebitUpload
                            - CsvCreditUpload
                            - OrderSetStatusReadyToShip
                            - OrderSetInvoiceAccessKey
                            - PromotionMassQcImport
                            - SellerFeesImport
                            - SubsidySkuImport
                            - SellerCounterfeitBrandConfiguration
                            - FinanceQcImport
                            - OrderCreateForwardManifest
                            - CsvInventoryStatusUpload
                            - OrderSetStatusToShipped
                            - SellerMailSend
                            - CounterfeitBrandUpdate
                            - OrderSetStatusToDelivered
                            - CreateThirdPartyOrder
                            - OrderUpdateManifestStatus
                            - ProductMassQcImport
                            - CategorySetupImport
                            - TransactionOrderItemImport
                            - TransactionProductImport
                            - TransactionSellerItemImport
                            - UnauthorizeMultipleProductsImport
                            - SellerProfileMassUpdate
                            - PromotionEligibleProductsImport
                            - PendingTransactionReject
                            - PackageWeightImport
                            - ConsignmentReplenishmentImport
                            - OrderItemTagImport
                            - FeedConfigChangePol
                            - FeedConfigChangePsol
                            - SellerTagImport
                            - ProductTagImport
                            - SellerRatingCustomKpiSellerValuesImport
                            - ImportExternalSellerFiles
                            - UpdateInventoryStatusImport
                            - AttributePropertiesImport
                            - ConsignmentSerialNumberSetupImport
                            - ConsignmentRequestImport
                            - OrderLogisticsImport
                            - ProductStockUpdate
                            - ConsignmentReturnRequestImport
                            - ProductWarehouseStockUpdate
                            - CategoriesRestrictionImport
                            - OrderSetStatusReturned
                            - OrderSetStatusReturnReceived
                            - OrderSetStatusReturnApproved
                            - OrderSetStatusReturnRejected
                            - CategoryAttributeMappingImport
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        source:
                          type: string
                          description: way Feed was created (API, XLS, UI).
                        requestedFormats:
                          type: array
                          items:
                            type: string
                        downloadLinks:
                          type: array
                          items:
                            type: string
                          description: >
                            list of relative links to download export files. For
                            some types of

                            export files are generated in several formats,
                            therefore you may

                            have several links to download files.
                        totalRecords:
                          description: >
                            Feed can contain multiple items and this number
                            indicated total number of recognized items
                          example: 4089
                          type: integer
                        processedRecords:
                          description: >
                            Feed items are processed in chunks and using this
                            number you can see how many items were processed.
                          example: 123
                          type: integer
                        failedRecords:
                          description: >
                            How many items were failed to process (contains
                            wrong data, validation failed for data, etc).
                          example: 64
                          type: integer
                        failureReportExportItemid:
                          example: 64
                          description: >
                            ID of related export item. Can be null if there is
                            no related error for feed. If present, you can

                            get information about this export item by doing
                            another request to export endpoint. Export item can

                            have download link and by using it you can download
                            CSV or XLSX file with errors or warnings related

                            to this feed.
                          type: integer
                          nullable: true
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Feeds
  /v2/feed/{uuid}:
    delete:
      summary: Cancel added feed. It works only with unprocessed feeds.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            minLength: 36
            maxLength: 36
      responses:
        '204':
          description: The feed has been successfully cancelled.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Feed not found or already processed.
      tags:
        - Feeds
  /v2/feed/{uuid}/status:
    get:
      summary: Gets the details about given Feed.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            minLength: 36
            maxLength: 36
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  action:
                    type: string
                    description: >
                      Feed action ("what type of feed it was"). Types can be
                      added, removed and renamed. You can

                      use this string in UI to display to user or create your
                      mapping/translation for that.
                    enum:
                      - ProductCreate
                      - ProductUpdate
                      - ProductRemove
                      - Image
                      - SendToWarehouse
                      - ReturnFromWarehouse
                      - ProductCategoryMigrate
                      - SellerAttributeImport
                      - PendingTransactionApprove
                      - CsvShippingFee
                      - CsvCancellationFee
                      - CsvReturnDeliveryFee
                      - CsvReturnHandlingFee
                      - CsvReturnToSellerFee
                      - CsvMarkAsPaid
                      - CsvDebitUpload
                      - CsvCreditUpload
                      - OrderSetStatusReadyToShip
                      - OrderSetInvoiceAccessKey
                      - PromotionMassQcImport
                      - SellerFeesImport
                      - SubsidySkuImport
                      - SellerCounterfeitBrandConfiguration
                      - FinanceQcImport
                      - OrderCreateForwardManifest
                      - CsvInventoryStatusUpload
                      - OrderSetStatusToShipped
                      - SellerMailSend
                      - CounterfeitBrandUpdate
                      - OrderSetStatusToDelivered
                      - CreateThirdPartyOrder
                      - OrderUpdateManifestStatus
                      - ProductMassQcImport
                      - CategorySetupImport
                      - TransactionOrderItemImport
                      - TransactionProductImport
                      - TransactionSellerItemImport
                      - UnauthorizeMultipleProductsImport
                      - SellerProfileMassUpdate
                      - PromotionEligibleProductsImport
                      - PendingTransactionReject
                      - PackageWeightImport
                      - ConsignmentReplenishmentImport
                      - OrderItemTagImport
                      - FeedConfigChangePol
                      - FeedConfigChangePsol
                      - SellerTagImport
                      - ProductTagImport
                      - SellerRatingCustomKpiSellerValuesImport
                      - ImportExternalSellerFiles
                      - UpdateInventoryStatusImport
                      - AttributePropertiesImport
                      - ConsignmentSerialNumberSetupImport
                      - ConsignmentRequestImport
                      - OrderLogisticsImport
                      - ProductStockUpdate
                      - ConsignmentReturnRequestImport
                      - ProductWarehouseStockUpdate
                      - CategoriesRestrictionImport
                      - OrderSetStatusReturned
                      - OrderSetStatusReturnReceived
                      - OrderSetStatusReturnApproved
                      - OrderSetStatusReturnRejected
                      - CategoryAttributeMappingImport
                  status:
                    type: string
                    enum:
                      - Finished
                      - Processing
                      - Error
                      - Queued
                      - Canceled
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        itemId:
                          type: string
                          format: uuid
                        errorCode:
                          type: integer
                        fieldName:
                          type: string
                        errorMessage:
                          type: string
                        sellerSku:
                          type: string
                  warnings:
                    type: array
                    items:
                      type: object
                      properties:
                        itemId:
                          type: string
                          format: uuid
                        message:
                          type: string
                        fieldName:
                          type: string
                        sellerSku:
                          type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Feed not found or already processed.
      tags:
        - Feeds
  /v2/feeds/count:
    get:
      summary: >
        Get feeds statistics. There're numbers like total feeds, finished feeds,
        processing feeds returned.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  queued:
                    type: integer
                  processing:
                    type: integer
                  finished:
                    type: integer
                  canceled:
                    type: integer
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Feeds
  /v2/feed/raw-input:
    get:
      summary: Gets the raw input for the given Feeds uuid.
      description: >
        Returns a file containing the raw input requests originally passed in
        when the feed was created. Multiple feed uuids can be passed and for
        each a file will be returned. The file is base64 encoded. In case of no
        feed raw input found or a feed has a file but cannot be accessed an
        error message is returned.
      security:
        - oAuth: []
      parameters:
        - name: feedUuidList[]
          in: query
          description: List of feed uuids
          required: true
          schema:
            type: array
            items:
              type: string
            example:
              - 2283380623-57c9-4163-b062-9f558d1934c2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    FeedUuid:
                      example: 2283380623-57c9-4163-b062-9f558d1934c2
                      type: string
                    MimeType:
                      example: text/html
                      type: string
                    File:
                      example: 0eWxlPmJvZHkgeyBmb250LXNpemU6MTBweDsgZm9udC1mYW1pbHk
                      type: string
                      description: the manifest file encoded base64
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Feed not found or feed file cannot be accessed.
      tags:
        - Feeds
  /v2/oauth/apps:
    get:
      summary: |
        Get a list Oauth apps
      description: |
        Get a list Oauth apps
      security:
        - oAuth: []
      parameters:
        - in: query
          name: query
          required: false
          schema:
            type: string
          description: Search query
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            example: 0
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            example: 100
        - in: query
          required: false
          name: sort
          description: The field to sort the results by.
          schema:
            type: string
            enum:
              - createdAt
              - updatedAt
              - name
        - in: query
          required: false
          name: sortDir
          description: >-
            Define which if you like to sort ascending or descending. Default is
            ascending
          example: asc
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        uuid:
                          type: string
                          description: App UUID
                          example: 3f0c27aa-ca28-4526-88f0-a13e6c9a007b
                        name:
                          type: string
                          description: App name
                          example: cb56deed3d91799f86e5
                        appId:
                          type: string
                          description: App ID
                          example: cb56deed3d91799f86e5
                        identifier:
                          type: integer
                          description: Increment ID in database.
                        createdAt:
                          type: string
                          nullable: false
                          example: '2022-09-01 16:35:42'
                        updatedAt:
                          type: string
                          nullable: false
                          example: '2022-09-01 16:35:42'
                        userId:
                          type: integer
                          description: Identifier of a user.
                          example: 1024
                  pagination:
                    type: object
                    properties:
                      offset:
                        type: integer
                        example: 0
                      limit:
                        type: integer
                        example: 10
                      totalCount:
                        type: integer
                        example: 1
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Oauth
    post:
      tags:
        - Oauth
      summary: Add an Oauth Application.
      description: Add a new Oauth Application.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - redirectUri
              properties:
                isGlobal:
                  type: boolean
                  description: Whether the application is global or not.
                  example: true
                name:
                  type: string
                  description: The application name.
                  example: My Application
                website:
                  type: string
                  description: The application website.
                  example: http://example.com
                redirectUri:
                  type: string
                  description: >-
                    The application redirect uri that will be redirected by
                    SellerCenter.
                  example: http://example.com/redirect_uri
      responses:
        '201':
          description: Oauth App created
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: The application uuid.
                    example: 123e4567-e89b-12d3-a456-426614174000
                  appId:
                    type: string
                    description: The application id.
                    example: 123456f4cbbd00832115bcbe97
                  secret:
                    type: string
                    description: The application secret.
                    example: e1f65b6f0ce28abbcef0752ddfb3ff0630e422ed
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/oauth/apps/{uuid}:
    get:
      tags:
        - Oauth
      summary: Get Oauth Application.
      description: Get an Oauth Application by its uuid.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            minLength: 36
            maxLength: 36
      responses:
        '200':
          description: Oauth App Item
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: The application uuid.
                    example: 123e4567-e89b-12d3-a456-426614174000
                  appId:
                    type: string
                    description: The application id.
                    example: 123456f4cbbd00832115bcbe97
                  name:
                    type: string
                    description: The application name.
                    example: Application 01
                  secret:
                    type: string
                    description: The application secret.
                    example: e1f65b6f0ce28abbcef0752ddfb3ff0630e422ed
                  website:
                    type: string
                    description: The application website.
                    example: https://www.example.com
                  redirectUri:
                    type: string
                    description: The application redirect uri.
                    example: https://www.example.com/oauth/callback
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
    put:
      tags:
        - Oauth
      summary: Update an Oauth Application.
      description: Update an existing Oauth Application.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - redirectUri
              properties:
                website:
                  type: string
                  description: The application website.
                  example: http://example.com
                redirectUri:
                  type: string
                  description: >-
                    The application redirect uri that will be redirected by
                    SellerCenter.
                  example: http://example.com/redirect_uri
      responses:
        '200':
          description: Oauth App updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: The application uuid.
                    example: 123e4567-e89b-12d3-a456-426614174000
                  appId:
                    type: string
                    description: The application id.
                    example: 123456f4cbbd00832115bcbe97
                  name:
                    type: string
                    description: The application name.
                    example: Application 01
                  website:
                    type: string
                    description: The application website.
                    example: https://www.example.com
                  redirectUri:
                    type: string
                    description: The application redirect uri.
                    example: https://www.example.com/oauth/callback
        '400':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/qc-reject-reasons:
    get:
      summary: >
        Get list of the Quality Control Reject Reasons for product, seller,
        consignment, promotion and finance.
      description: >
        Get list of the Quality Control Reject Reasons for product, seller,
        consignment, promotion and finance.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: |
                        Id of the reject reason.
                    name:
                      type: string
                      example: Wrong description
                      description: >
                        The name of the reject reason in venture locale. The
                        ones set to 'Not Authorized' will have (Not Authorized)
                        added as suffix.
                    type:
                      type: string
                      example: product
                      enum:
                        - product
                        - seller
                        - consignment
                        - promotion
                        - finance
                    isSetToNotAuthorized:
                      type: boolean
                      example: false
                      description: >
                        If true, this reason can be used to set product to not
                        authorized status.

                        Not authorized products are taken offline and blocked
                        from going to product QC. Cannot be edited after saving.
                    isEnabled:
                      type: boolean
                      example: true
                      description: |
                        Whether or not the reject reason is currently enabled.
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/webhook-entities:
    get:
      summary: |
        Get a list of webhook entities. Checkout our payload definitions here.
      description: >
        <h3>Webhooks Payload Definitions</h3> <p>Find below all the payload
        definition for all entities.</p> <h4>HTTP Response</h4> <p>A callback
        will be successful, if the response http code, given by the seller
        system, is 200. The response content doesn't matter.</p> <h4>Retries of
        callbacks</h4> <p>Seller Center will retry the callback of the webhook
        event in case the seller based system was not reachable for any
        reason.</p> <p>It will delay the next execution of the callback by some
        minutes to give the seller system time to recover.</p> <p>Seller Center
        will continue to execute the callback until 30 days have passed.</p>
        <p>Afterwards the callback is deleted from the Seller Center system even
        when it never succeeded and will not be retried afterwards.</p> <p>The
        following table gives an overview about the delays of the execution of
        callbacks in case of a failure response.</p> <table>
        <thead><tr><th>Retry</th> <th>Minutes</th> <th>Additional Delay in
        Minutes</th> <th>Additional Delay in Minutes</th> </tr></thead> <tbody>
        <tr><td>Retry
        1</td><td>1</td><td>00:00:01</td><td>00:00:01</td></tr><tr><td>Retry
        2</td><td>5</td><td>00:00:05</td><td>00:00:06</td></tr> <tr><td>Retry
        3</td><td>10</td><td>00:00:10</td><td>00:00:16</td></tr><tr><td>Retry
        4</td><td>30</td><td>00:00:30</td><td>00:00:46</td></tr> <tr><td>Retry
        5</td><td>60</td><td>00:01:00</td><td>00:01:46</td></tr><tr><td>Retry
        6</td><td>120</td><td>00:02:00</td><td>00:03:46</td></tr> <tr><td>Retry
        7</td><td>300</td><td>00:05:00</td><td>00:08:46</td></tr><tr><td>Retry
        8</td><td>600</td><td>00:10:00</td><td>00:18:46</td></tr> <tr><td>Retry
        9</td><td>1440</td><td>01:00:00</td><td>01:18:46</td></tr><tr><td>Retry
        10</td><td>1440</td><td>01:00:00</td><td>02:18:46</td></tr>
        <tr><td>Retry
        11</td><td>1440</td><td>01:00:00</td><td>03:18:46</td></tr><tr><td>Retry
        12</td><td>1440</td><td>01:00:00</td><td>04:18:46</td></tr>
        <tr><td>Retry
        13</td><td>1440</td><td>01:00:00</td><td>05:18:46</td></tr><tr><td>Retry
        14</td><td>1440</td><td>01:00:00</td><td>06:18:46</td></tr>
        <tr><td>Retry
        15</td><td>1440</td><td>01:00:00</td><td>07:18:46</td></tr><tr><td>Retry
        16</td><td>1440</td><td>...</td><td>...</td></tr> </tbody></table>
        <h4>1. Feed</h4> <p>Find bellow all the events sent for Feed entity and
        its payload definitions.</p> <p>The Feed Created and Feed Completed
        events are only triggered for the following types:</p> <ul> <li>Product
        create</li> <li>Product update</li> <li>Product remove</li>
        <li>Image</li> </ul> <h5>Feed Created</h5> <p>
          { "event": "onFeedCreated", "payload": { "Feed": "829a8d2a-d370-4fa6-8613-8554f43d5fed" } }
        </p> <table>
        <thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead>
        <tbody><tr><td>Feed</td><td>String</td><td>A feed identifier to be used
        to get more details using the API.</td></tr></tbody> </table> <h5>Feed
        Completed</h5> <p>
          { "event": "onFeedCompleted", "payload": { "Feed": "829a8d2a-d370-4fa6-8613-8554f43d5fed" } }
        </p> <table>
        <thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead>
        <tbody><tr><td>Feed</td><td>String</td><td>A feed identifier to be used
        to get more details using the API.</td></tr></tbody> </table> <h5>How to
        handle onFeedCompleted</h5>

        <p>After receiving this event, please call FeedStatus API action to get
        details.</p> <p>The event will only be triggered for a "Finished" feed,
        which will happen for most cases. If you do not receive a callback for
        long time, please call FeedStatus API action to discover if the Feed got
        status "Canceled" or "Error"</p>

        <h4>2. Product</h4> <p>Find bellow all the events sent for Product
        entity and its payload definitions.</p> <h5>Product Created</h5> <p>
          { "event": "onProductCreated", "payload": { "SellerSkus": [ "NI006ELAAGWDNAFAMZ-43340" ] } }
        </p>
        <table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead>
        <tbody><tr><td>SellerSkus</td><td>String[]</td><td>List of seller skus
        to be used to get more details using the API.</td></tr></tbody></table>
        <h5>Product Updated</h5> <p>
          { "event": "onProductUpdated", "payload": { "SellerSkus": [ "NI006ELAAGWDNAFAMZ-43340", "NI006ELAAGWDNAFAMZ-43341", "NI006ELAAGWDNAFAMZ-43342", "NI006ELAAGWDNAFAMZ-43343" ] } }
        </p>
        <table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead>
        <tbody><tr><td>SellerSkus</td><td>String[]</td><td>List of seller skus
        to be used to get more details using the API.</td></tr></tbody></table>
        <h5>Product QC Status Changed</h5> <p>
          { "event": "onProductQcStatusChanged", "payload": { "SellerSkus": [ "NI006ELAAGWDNAFAMZ-43341", "NI006ELAAGWDNAFAMZ-43342" ] } }
        </p> <table><thead><tr><th>Field</th><th>Type</th><th>Possible Other
        Values</th></tr></thead>
        <tbody><tr><td>SellerSkus</td><td>String[]</td><td>List of seller skus
        to be used to get more details using the API.</td></tr></tbody></table>
        <h4>3. Order</h4> <h5>Order Created</h5> <p>
          { "event": "onOrderCreated", "payload": { "OrderId": 190, "OrderNr": "123221" } }
        </p>
        <table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead>
        <tbody><tr><td>Order</td><td>Int</td><td>Order identifier to be used to
        get more details using the API.</td></tr></tbody></table> <h5>Order
        Items Status Changed</h5> <p>
          { "event": "onOrderItemsStatusChanged", "payload": { "OrderId": 190, "OrderItemIds": [2, 3], "NewStatus": "ready_to_ship" } }
        </p>
        <table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead>
        <tbody><tr><td>OrderId</td><td>Int</td><td>Order identifier to be used
        to get more details using the API.</td></tr>
        <tr><td>OrderItemIds</td><td>Int[]</td><td>Order Item identifiers to be
        used to get more details using the API.</td></tr>
        <tr><td>NewStatus</td><td>String</td><td>New item
        status</td></tr></tbody></table> <p>Find bellow all the events sent for
        Metrics entity and its payload definitions.</p> <h4>4. Statistics</h4>
        <p>Find bellow all the events sent for Statistics entity and its payload
        definitions.</p> <h5>Statistics Updated</h5> <p>
          { "event": "onStatisticsUpdated", "payload": {} }
        </p>
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Human readable string identifier of an Entity.
                          example: Metrics
                        events:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Human readable string identifier of an Event.
                                example: Updated
                              alias:
                                type: string
                                description: >-
                                  Human readable string identifier of an Event
                                  combined with its Entity.
                                example: onMetricsUpdated
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Webhook
  /v2/webhook:
    post:
      tags:
        - Webhook
      summary: Creates a webhook.
      description: >
        Creates a webhook. <h3>Possible event aliases:</h3>
        <p>`onFeedCompleted`, `onFeedCreated`, `onOrderCreated`,
        `onOrderItemsStatusChanged`, `onProductCreated`,
        `onProductQcStatusChanged`, `onProductUpdated`, `onReturnStatusChanged`,
        `onStatisticsUpdated`</p>
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callbackUrl:
                  type: string
                  description: The webhook url that will be called by SellerCenter.
                  example: http://example.com/callback
                events:
                  type: array
                  description: List of webhook related events identified by its alias.
                  items:
                    type: string
                  example:
                    - onOrderCreated
                    - onProductCreated
      responses:
        '201':
          description: Webhook created
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhookId:
                    type: string
                    example: 7dffaa4e-1713-42c2-84ba-1d2fbd4537ab
                  createdAt:
                    type: string
                    readOnly: true
                    format: date-time
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/webhook/{uuid}:
    delete:
      tags:
        - Webhook
      summary: Removes a webhook
      description: |
        Removes a webhook by uuid (public id)
      security:
        - oAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            minLength: 36
            maxLength: 36
      responses:
        '204':
          description: The webhook has been successfully removed.
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
    put:
      tags:
        - Webhook
      summary: Update a webhook.
      description: >
        Updates a webhook. <h3>Possible event aliases:</h3>
        <p>`onFeedCompleted`, `onFeedCreated`, `onOrderCreated`,
        `onOrderItemsStatusChanged`, `onProductCreated`,
        `onProductQcStatusChanged`, `onProductUpdated`, `onReturnStatusChanged`,
        `onStatisticsUpdated`</p>
      security:
        - oAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                callbackUrl:
                  type: string
                  description: The webhook url that will be called by SellerCenter.
                  example: http://example.com/callback
                events:
                  type: array
                  description: List of webhook related events identified by its alias.
                  items:
                    type: string
                  example:
                    - onOrderCreated
                    - onProductCreated
      responses:
        '200':
          description: Webhook updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhookId:
                    type: string
                    example: 7dffaa4e-1713-42c2-84ba-1d2fbd4537ab
                  updatedAt:
                    type: string
                    readOnly: true
                    format: date-time
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/webhook/callback/{callbackId}/retry/:
    post:
      tags:
        - Webhook
      summary: Retry webhook calback
      description: |
        Retries a webhook calback
      security:
        - oAuth: []
      parameters:
        - in: path
          name: callbackId
          required: true
          schema:
            type: integer
          description: Numeric Id of Webhook Callback
      responses:
        '204':
          description: The callback request was successful retried.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/webhooks:
    get:
      summary: |
        Get a list of webhooks.
      description: >
        Get a list by public IDs. If no parameter provided this endpoint will
        return all webhooks.
      security:
        - oAuth: []
      parameters:
        - in: query
          name: publicIds[]
          description: Search by webhook ids
          schema:
            type: array
            items:
              type: string
              description: Identifier of a Webhook as assigned by SellerCenter.
              example: 3f0c27aa-ca28-4526-88f0-a13e6c9a007b
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Identifier of a Webhook Callback
                          example: 1
                        sellerId:
                          type: integer
                          description: Identifier of a Seller as assigned by SellerCenter.
                          example: 1024
                        url:
                          type: string
                          description: The webhook url that will be called by SellerCenter.
                          example: https://sellercenter.com/callbacks
                        status:
                          type: string
                          enum:
                            - success
                            - fail
                            - inprogress
                            - queueing_failed
                          description: Status of the webhook callback.
                          example: inprogress
                        createdAt:
                          type: string
                          nullable: false
                          example: '2023-10-25T23:30:34+00:00'
                        lastCallAt:
                          type: string
                          nullable: false
                          example: '2023-10-25T23:30:34+00:00'
                        event:
                          type: string
                          nullable: false
                          example: onOrderItemsStatusChanged
                        payload:
                          type: string
                          nullable: false
                          example: >-
                            {"event":"onOrderItemsStatusChanged","payload":{"OrderId":1,"OrderItemIds":["2"],"NewStatus":"ready_to_ship"}}
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Webhook
  /v2/webhook/{uuid}/status:
    post:
      tags:
        - Webhook
      summary: Updates a webhook status.
      description: |
        Updates a webhook status.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: uuid
          required: true
          schema:
            type: string
            pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
            minLength: 36
            maxLength: 36
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                isEnabled:
                  type: boolean
                  description: The status of the webhook.
                  example: true
      responses:
        '204':
          description: The webhook status has been successfully updated.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/webhook/callback/{callbackId}:
    get:
      tags:
        - Webhook
      summary: Get a webhook callback detail by ID
      parameters:
        - in: path
          name: callbackId
          required: true
          schema:
            type: integer
          description: Numeric Id of Webhook Callback
      security:
        - oAuth: []
      responses:
        '200':
          description: Webhook callback detail
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Identifier of a Webhook Callback
                    example: 1
                  sellerId:
                    type: integer
                    description: Identifier of a Seller as assigned by SellerCenter.
                    example: 1024
                  url:
                    type: string
                    description: The webhook url that will be called by SellerCenter.
                    example: https://sellercenter.com/callbacks
                  status:
                    type: string
                    enum:
                      - success
                      - fail
                      - inprogress
                      - queueing_failed
                    description: Status of the webhook callback.
                    example: inprogress
                  createdAt:
                    type: string
                    nullable: false
                    example: '2023-10-25T23:30:34+00:00'
                  lastCallAt:
                    type: string
                    nullable: false
                    example: '2023-10-25T23:30:34+00:00'
                  event:
                    type: string
                    nullable: false
                    example: onOrderItemsStatusChanged
                  payload:
                    type: string
                    nullable: false
                    example: >-
                      {"event":"onOrderItemsStatusChanged","payload":{"OrderId":1,"OrderItemIds":["2"],"NewStatus":"ready_to_ship"}}
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/webhook/callbacks/{callbackUrl}:
    get:
      summary: |
        Get a list of webhook callbacks by callback url. 
      description: |
        Get a list of webhook callbacks by callback url. 
      security:
        - oAuth: []
      parameters:
        - name: callbackUrl
          in: path
          required: true
          schema:
            type: string
          description: The Webhook callback url (encoded)
        - in: query
          required: false
          name: sortDir
          description: >-
            Define which if you like to sort ascending or descending. Default is
            ascending
          example: asc
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: sort
          in: query
          schema:
            type: string
            example: callbackUrl
            enum:
              - callbackUrl
              - lastCall
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Identifier of a Webhook Callback
                          example: 1
                        sellerId:
                          type: integer
                          description: Identifier of a Seller as assigned by SellerCenter.
                          example: 1024
                        url:
                          type: string
                          description: The webhook url that will be called by SellerCenter.
                          example: https://sellercenter.com/callbacks
                        status:
                          type: string
                          enum:
                            - success
                            - fail
                            - inprogress
                            - queueing_failed
                          description: Status of the webhook callback.
                          example: inprogress
                        createdAt:
                          type: string
                          nullable: false
                          example: '2023-10-25T23:30:34+00:00'
                        lastCallAt:
                          type: string
                          nullable: false
                          example: '2023-10-25T23:30:34+00:00'
                        event:
                          type: string
                          nullable: false
                          example: onOrderItemsStatusChanged
                        payload:
                          type: string
                          nullable: false
                          example: >-
                            {"event":"onOrderItemsStatusChanged","payload":{"OrderId":1,"OrderItemIds":["2"],"NewStatus":"ready_to_ship"}}
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Webhook
  /v2/attribute-sets/{attributeSetId}:
    get:
      summary: |
        Get the attribute set properties.
      description: |
        Get the name and the label of the attribute set.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: attributeSetId
          required: true
          schema:
            type: integer
          allowEmptyValue: false
          description: Numeric Id of Attribute Set
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: Numeric unique identifier
                    type: number
                    example: 5642
                  name:
                    type: string
                    example: beauty
                  label:
                    type: string
                    example: Beauty
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Attribute
  /v2/attribute-sets/{attributeSetId}/attributes:
    get:
      summary: |
        Get the attributes of a particular attribute set.
      description: >
        Get the attributes of a particular attribute set. The list of attributes
        included "global" attributes - those

        attributes which do not belong to any category and are common for all
        products.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: attributeSetId
          required: true
          schema:
            type: integer
          allowEmptyValue: false
          description: Numeric Id of Attribute Set
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: >
                        Attribute identifier. Please, consider the fact that
                        there could be several attributes with

                        the same name, but with different IDs. For example,
                        there can be AttributeSets "Shoes", "Dresses"

                        and "Jewelry". Shoes and Dresses has "color", but there
                        is no such attribute for "Jewelry".


                        So when you want to create product in "Shoes" or
                        "Dresses" you can (and if "color" is mandatory -

                        should) pass value of "color". But this attribute
                        "color" will have different IDs, probably

                        different set of options, maybe different validation
                        rules and so on.
                      type: integer
                      example: 7865
                      readOnly: true
                      nullable: true
                    label:
                      description: >
                        Attribute label, in general same as name, but can
                        contain spaces and non-latin and/or non numeric

                        characters. Subject to change. For example, there is
                        attribute with label "Colour" but then new

                        attribute "Second color" was added to make end users be
                        able to shop for perfect colour combination.

                        After that attribute with label "Colour" may change its
                        label to "Main Colour". You can use this

                        property if you are building your own UI for
                        SellerCenter operations as label for attribute.
                      type: string
                      example: Sample attribute label
                      nullable: true
                      readOnly: true
                    name:
                      description: >-
                        Attribute name for internal usage. You can ignore this
                        property.
                      type: string
                      example: Attribute name
                      nullable: false
                      readOnly: true
                    feedName:
                      description: >
                        Feed name: this is how attribute is displayed in XLSX
                        exports and expected to be in imports. When your

                        integration with SellerCenter will generate files for
                        upload to SellerCenter, then you need to use this

                        property as column name. Very rarely changed, but you
                        need to consider that is can happen.
                      type: string
                      example: Feed name
                      nullable: false
                      readOnly: true
                    groupName:
                      description: >
                        Attribute's group name. If you implement own UI for
                        SellerCenter it is useful to display attributes in

                        groups, for example "Delivery", "Product Additional
                        Details". By using this field you can split

                        attributes in groups and display accordingly.
                      type: string
                      example: Content
                      nullable: true
                      readOnly: true
                    isMandatory:
                      description: |
                        Attribute is mandatory.
                      type: boolean
                      example: false
                      nullable: false
                      readOnly: true
                    isGlobalAttribute:
                      description: >
                        Is true when attribute does not belong to certain
                        AttributeSet and can be set for any product.
                      type: boolean
                      example: true
                      nullable: true
                      readOnly: true
                    description:
                      description: >
                        Attribute description. Maybe useful to see more about
                        meaning of attribute or when you develop

                        own UI for SellerCenter operations.
                      type: string
                      example: Some description of an attribute
                      nullable: true
                      readOnly: true
                    productType:
                      description: >
                        Legacy field indicating whether attribute belongs to
                        product ("simple"), product set ("config") or
                        very-special

                        ("sellercenter"). Please, do not rely on this field as
                        it is subject to change in near future. It is left

                        for compatibility reasons for some clients of previous
                        versions of API.
                      type: string
                      example: sellercenter
                      nullable: false
                      readOnly: true
                    inputType:
                      description: >
                        Type of input to display to user. See enum values for
                        possible values. This may be

                        useful if you develop your own UI for SellerCenter.
                      type: string
                      enum:
                        - checkbox
                        - datefield
                        - datetime
                        - dropdown
                        - multiselect
                        - numberfield
                        - textarea
                        - textfield
                      example: numberfield
                      nullable: false
                      readOnly: true
                    attributeType:
                      description: >
                        Type of an attribute, see enum for possible values. It
                        defines how SellerCenter stores value of certain

                        attribute. For type of "value" - it is stored "as-is",
                        for "option" - ID of option stored,

                        for "multi_option" - array or option IDs.


                        This is useful when you get information about product
                        set and you want to understand whether

                        123 is plain value or ID of option.


                        There is a special attribute type called "system".
                        Attribute with those types returned for purposes

                        of making aware about logic of those attributes. For
                        example, you may see attribute "Brand" among them.

                        From this attribute you will see useful information like
                        "is it mandatory?", "what is example value of

                        it?", "what description can I show to my users while I
                        develop our own UI for SellerCenter".


                        Attributes of this type should not be sent in array of
                        "attributes" when you create or update your

                        product sets. Continuing with example of Brand
                        attribute: to pass this information you should use

                        field brandId in root of payload for creation of product
                        set.
                      type: string
                      enum:
                        - value
                        - option
                        - multi_option
                        - system
                      example: system
                      nullable: false
                      readOnly: true
                    exampleValue:
                      description: Attribute's example value
                      type: string
                      nullable: true
                      readOnly: true
                    maxLength:
                      description: >
                        Attribute's max length, applicable for string
                        attributes.
                      type: integer
                      example: 23
                      nullable: true
                      readOnly: true
                    isVisibleForHybrid:
                      description: >
                        This flag enables/disable if an attribute is visible or
                        not for a hybrid product
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    attributeDefinitionType:
                      description: |
                        Is used to define the attribute type
                      type: string
                      enum:
                        - default
                        - price_status
                        - price
                        - special_price
                        - sale_start
                        - sale_end
                      example: price
                      nullable: true
                      readOnly: true
                    attributeDefinitionCountry:
                      description: |
                        Is used to define the attribute's country/vendor
                      type: string
                      enum:
                        - TW
                        - SG
                        - PH
                        - ID
                        - MY
                        - HK
                      example: MY
                      nullable: true
                      readOnly: true
                    inputMode:
                      description: >
                        Is used to disable, hide a field. See enum values for
                        possible values.
                      type: string
                      enum:
                        - edit
                        - display
                        - invisible
                        - edit_on_create
                      example: edit
                      nullable: true
                      readOnly: true
                    forbidEmpty:
                      description: |
                        If set to true an attribute can not be 0 or NULL.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    options:
                      description: >
                        Attribute options. List of all option for current
                        attribute. Additional validation may apply

                        like validation "brand to attribute mappings",
                        "attribute to attribute mapping". Example:

                        you want to create new product in category "Shoes".
                        Option "45" is among options of attribute

                        "Size", but there is a mapping which says that if for
                        attribute "Age group" there is a value

                        "Kids" selected then only allowed sizes are "20", "21",
                        ... "32".
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: >
                              Option identifier. Please note that several
                              attrbiutes can have options with same name,

                              but with different IDs. You need to use right
                              option ID for right attribute. For example,

                              there are attributes "Colour" (ID=1) and "Soil
                              color" (ID=2). "Color" has option "Black"

                              with ID=1234 and "Soil color" has option "Black"
                              with ID=9876. Even though name of options

                              are the same, when you want to pass value for
                              "Soil color" you can send only 9876,
                            type: integer
                            example: 631
                            readOnly: true
                            nullable: false
                          name:
                            description: >
                              Option name. If you implement own UI for
                              SellerCenter you can display this to user, also

                              same value end user in the shop will see. If you
                              are generating XLS files for future

                              upload to SellerCenter then you need also to use
                              this value. Please, note that very rarely

                              this value can be changed (for example, one colour
                              got splitted in two or more, renamed

                              to be more understandable for end user)
                            type: string
                            example: Black
                            nullable: false
                            readOnly: true
                          isDefault:
                            description: >
                              Is option default. Used as hint when this option
                              is most commonly used. It may be useful

                              if you implementing own UI for SellerCenter and
                              this option should be displayed as

                              selected by defaul when your user sees the screen
                              of product set creation.
                            type: boolean
                            example: false
                            nullable: true
                            readOnly: true
                      nullable: true
                      readOnly: true
                    isEditionBySellerBlocked:
                      description: >
                        If set to true then the value of the attribute can not
                        be changed after the product was synced with the shop.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    isUsedInConsignmentFormulas:
                      description: >
                        If set to true then the attribute is used in consignment
                        formulas.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Attribute
  /v2/attribute-sets:
    get:
      summary: |
        Get the attribute sets available.
      description: >
        Fetch data about the available attribute sets. If you want to filter
        some attribute sets then you can add attributeSetIds[] to the query part
        of the url.
      parameters:
        - in: query
          required: false
          name: attributeSetIds[]
          description: Search by attribute set ids
          schema:
            type: array
            items:
              type: integer
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Numeric unique identifier
                      type: number
                      example: 5642
                    name:
                      type: string
                      example: beauty
                    label:
                      type: string
                      example: Beauty
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Attribute
  /v2/users:
    get:
      summary: Get list of users
      security:
        - oAuth: []
      operationId: GET_v2-users
      parameters:
        - in: query
          name: query
          required: false
          schema:
            type: string
          description: Search query
        - in: query
          name: sellerId
          required: false
          schema:
            type: integer
          description: Numeric Id of Seller
        - in: query
          name: sellerUuid
          required: false
          schema:
            type: string
          description: String uuid of Seller
        - in: query
          name: excludeAdmins
          required: false
          schema:
            type: boolean
          description: >
            filter to exclude users with the role not in group "seller". 

            When set to "true" only users with the role in group "seller" will
            be returned.
        - in: query
          name: excludeInactive
          required: false
          schema:
            type: boolean
          description: filter to exclude inactive users
        - in: query
          name: ids[]
          description: Search by ids
          schema:
            type: array
            items:
              type: integer
        - in: query
          name: uuids[]
          description: Search by uuids
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            example: 100
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            example: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 32
                        email:
                          type: string
                          example: test@example.com
                        name:
                          type: string
                          example: Test name
                        apiKey:
                          type: string
                          example: 5b7878b7b1ed868cc549c2c2f7202309bcfe9737
                          description: Only available for admin users
                        aclRoleId:
                          type: integer
                          example: 2
                        sellerId:
                          type: integer
                          example: 1
                        status:
                          type: string
                          example: active
                        enablePassword:
                          type: boolean
                          example: true
                          description: Indicates if the password is enabled for the user
                        switchableSellers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: '123'
                              name:
                                type: string
                                example: Seller Name
                          description: List of switchable sellers with their IDs and names
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - User
  /v2/user:
    post:
      summary: Create new user
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                aclRoleId:
                  type: integer
                  description: Role Id
                  example: 2
                apiKey:
                  type: string
                  example: 093a9e34dqw2312241gcz53766e338abf
                email:
                  type: string
                  example: email@gmail.com
                languageId:
                  type: integer
                  description: Language Id
                  example: 3
                name:
                  type: string
                  example: John
                notifyNewUser:
                  type: boolean
                sellerId:
                  type: integer
                  example: 1
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                enablePassword:
                  type: boolean
                  description: >-
                    Indicates whether the user is allowed to use a password for
                    authentication
                  example: true
                switchableSellerIds:
                  type: array
                  items:
                    type: integer
                  description: Array of seller IDs that the user can switch between
                  example:
                    - 1
                    - 2
                    - 232
              required:
                - sellerId
                - aclRoleId
                - email
                - languageId
                - name
                - status
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 32
                  email:
                    type: string
                    example: test@example.com
                  name:
                    type: string
                    example: Test name
                  apiKey:
                    type: string
                    example: 5b7878b7b1ed868cc549c2c2f7202309bcfe9737
                    description: Only available for admin users
                  aclRoleId:
                    type: integer
                    example: 2
                  sellerId:
                    type: integer
                    example: 1
                  status:
                    type: string
                    example: active
                  enablePassword:
                    type: boolean
                    example: true
                    description: Indicates if the password is enabled for the user
                  switchableSellers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '123'
                        name:
                          type: string
                          example: Seller Name
                    description: List of switchable sellers with their IDs and names
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - User
  /v2/user/change-password:
    patch:
      summary: Change user password
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                  description: Current password
                newPassword:
                  type: string
                  description: New password
      responses:
        '200':
          description: Success Response
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - User
  /v2/user/{userId}:
    get:
      summary: Get user by id
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: Numeric Id of User
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 32
                        email:
                          type: string
                          example: test@example.com
                        name:
                          type: string
                          example: Test name
                        apiKey:
                          type: string
                          example: 5b7878b7b1ed868cc549c2c2f7202309bcfe9737
                          description: Only available for admin users
                        aclRoleId:
                          type: integer
                          example: 2
                        sellerId:
                          type: integer
                          example: 1
                        status:
                          type: string
                          example: active
                        enablePassword:
                          type: boolean
                          example: true
                          description: Indicates if the password is enabled for the user
                        switchableSellers:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: '123'
                              name:
                                type: string
                                example: Seller Name
                          description: List of switchable sellers with their IDs and names
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - User
    patch:
      summary: Update user data
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: Numeric Id of User
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                  description: Role Id
                  example: 2
                apiKey:
                  type: string
                  example: 093a9e34dqw2312241gcz53766e338abf
                email:
                  type: string
                  example: email@gmail.com
                name:
                  type: string
                  example: John
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                enablePassword:
                  type: boolean
                  description: >-
                    Indicates whether the user is allowed to use a password for
                    authentication
                  example: true
                switchableSellerIds:
                  type: array
                  items:
                    type: integer
                  description: Array of seller IDs that the user can switch between
                  example:
                    - 1
                    - 2
                    - 232
              required:
                - roleId
                - email
                - status
                - name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 32
                  email:
                    type: string
                    example: test@example.com
                  name:
                    type: string
                    example: Test name
                  apiKey:
                    type: string
                    example: 5b7878b7b1ed868cc549c2c2f7202309bcfe9737
                    description: Only available for admin users
                  aclRoleId:
                    type: integer
                    example: 2
                  sellerId:
                    type: integer
                    example: 1
                  status:
                    type: string
                    example: active
                  enablePassword:
                    type: boolean
                    example: true
                    description: Indicates if the password is enabled for the user
                  switchableSellers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '123'
                        name:
                          type: string
                          example: Seller Name
                    description: List of switchable sellers with their IDs and names
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - User
    delete:
      summary: Delete user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: Numeric Id of User
      security:
        - oAuth: []
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '404':
          description: Entity not found
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - User
  /v2/user/{userId}/api-key:
    post:
      deprecated: true
      summary: Generate API key
      description: >
        Generate API key for the user with the provided id. Only maintenance
        role can generate API keys.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: Numeric Id of User
      security:
        - oAuth: []
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiKey:
                    type: string
                    example: 3b521ea8c6e7fcaf7e9ed82fc9a869bc
                    description: The generated api key.
        '401':
          description: Unauthorized error
        '403':
          description: Forbidden
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin
  /v2/product-sets/visibility-rules:
    get:
      summary: Get brief overview about the ProductSet
      security:
        - oAuth: []
      description: >
        Returns brief information about the ProductSet visibility rules. The
        information for each parameter returned is described in return schema
        details.
      parameters:
        - name: productSetIds[]
          in: query
          description: List of ProductSet ids
          required: false
          schema:
            type: array
            items:
              type: integer
            example:
              - 3872
              - 549
          allowEmptyValue: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productSetId:
                      type: integer
                      example: 1
                      description: |
                        Id of the ProductSet
                    hasAtLeastOneActiveProduct:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if the ProductSet has at least one active
                        Product
                    isSellerActive:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if the Seller of the ProductSet is active
                        or not
                    isBrandActive:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if the Brand of the ProductSet is active
                        or not
                    hasZeroPrices:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if any variations of the ProductSet has a
                        price with 0 value
                    hasZeroStocks:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if any variations of the ProductSet have
                        no stocks in the warehouse
                    hasImages:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if at least 1 image was uploaded for the
                        ProductSet
                    hasActiveCategories:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if at least 1 image was uploaded for the
                        ProductSet
                    isBrandApproved:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if the Brand of the ProductSet is
                        approved or not
                    isProductSetAuthorized:
                      type: boolean
                      example: true
                      description: |
                        The flag shows if the ProductSet is authorized or not
                    isLatestVersionUploaded:
                      type: boolean
                      example: true
                      description: >
                        The flag shows if the latest version of the ProductSet
                        was uploaded to the store
                    latestVersionUploadedMessage:
                      type: string
                      example: >-
                        Latest version not yet uploaded to shopLatest version
                        not yet uploaded to shop
                      description: >
                        A detailed message (with error) about the latest
                        uploaded version of the ProductSet
                    qualityControlStatus:
                      type: string
                      enum:
                        - accepted
                        - rejected
                        - pending
                      example: pending
                      description: >
                        The quality control status of the ProductSet without
                        details (comment/reject reason)
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - ProductSet
  /v2/orders-counters:
    get:
      tags:
        - Orders
      description: >
        Get approximate counters for orders groupped by filters. Please, read
        explanation about each counter

        in response model. This endpoint is suitable for getting quick
        information about count of orders,

        for example, when you develop own UI of SellerCenter and want to display
        to end user hint with

        count of pending orders. Data is eventually consistent, however there
        can be some delay in

        updating those counters.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pending:
                    type: object
                    description: >
                      Counter of pending order items (order items in status
                      "pending"). Order items may have field

                      shipping_provider_type with possible values 'express',
                      'standard', 'economy', 'air', 'surface',

                      'sameday' or null.



                      For order items with not-null shipping_provider_type you
                      can find counter for that particular provider type. If

                      you develop your own UI for SellerCenter: when count for
                      certain shipping provider type is not zero, then you

                      can show filter for this particular shipping provider
                      type. For example: pendingEconomyCount=6 and all other

                      counters are equal to 0. In this case it make sense to
                      show in UI section "Pending", sub-section "Economy" and

                      no sections "Air", "Surface" and others.
                    properties:
                      pending:
                        type: integer
                        description: Count of all pending order items.
                      notPrintedPendingCount:
                        type: integer
                        description: >-
                          Count of all pending order items which were not
                          printed.
                      pendingExpressCount:
                        type: integer
                        description: >-
                          Count of pending order items with
                          shipping_provider_type=express
                      pendingEconomyCount:
                        type: integer
                        description: >-
                          Count of pending order items with
                          shipping_provider_type=economy
                      pendingStandardCount:
                        type: integer
                        description: >-
                          Count of pending order items with
                          shipping_provider_type=standard
                      pendingSamedayCount:
                        type: integer
                        description: >-
                          Count of pending order items with
                          shipping_provider_type=sameday
                      pendingAirCount:
                        type: integer
                        description: >-
                          Count of pending order items with
                          shipping_provider_type=air
                      pendingSurfaceCount:
                        type: integer
                        description: >-
                          Count of pending order items with
                          shipping_provider_type=surface
                  readyToShipCount:
                    type: integer
                    description: Count or order items in "ready to ship" status.
                  paymentPendingCount:
                    type: integer
                    description: >
                      Count or order items in "payment_pending" status. This
                      status is separate status from "pending". If you want

                      to display in your UI "overall" count of pending order
                      items, then recommended formula is "payment pending count
                      +

                      pending count".
                  notPrintedReadyToShipCount:
                    type: integer
                    description: >
                      Count of order items in status "ready_to_ship" which were
                      not printed yet.
                  shippedCount:
                    type: integer
                    description: Count of order items in status "shipped".
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/{orderId}/generate-invoice-number:
    post:
      tags:
        - Orders
      description: Generate unique invoice number for order
      security:
        - oAuth: []
      parameters:
        - required: true
          description: Numeric Order Id
          in: path
          name: orderId
          schema:
            type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: string
                    description: Generated unique number
                    example: INV-265496632
                required:
                  - number
        '401':
          description: Unauthorized error
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/orders/invoice-number-settings/update:
    post:
      summary: |
        Update the settings of the invoice number for a particular seller.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - generationType
              properties:
                generationType:
                  type: string
                  description: Accept 'autoincrement_number', 'order_number', 'show_dialog'
                  example: autoincrement_number
                prefix:
                  type: string
                  description: Prefix for the credit note number
                  example: ABC
                nextNumber:
                  type: integer
                  description: The next number
                  example: 123
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  generationType:
                    type: string
                    description: Generation type
                    example: autoincrement_number | order_number | show_dialog
                  prefix:
                    type: string
                    description: Prefix for the credit note number
                    example: ABC
                  nextNumber:
                    type: integer
                    description: The next number
                    example: 123
                  nextFormatedValue:
                    type: string
                    description: The next formated value
                    example: ABC123
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Orders
  /v2/orders/invoice-number-settings:
    get:
      summary: |
        Get the current invoice number settings for a particular seller.
      security:
        - oAuth: []
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  generationType:
                    type: string
                    description: Generation type
                    example: autoincrement_number | order_number | show_dialog
                  prefix:
                    type: string
                    description: Prefix for the credit note number
                    example: ABC
                  nextNumber:
                    type: integer
                    description: The next number
                    example: 123
                  nextFormatedValue:
                    type: string
                    description: The next formated value
                    example: ABC123
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Orders
  /v2/transactions:
    get:
      tags:
        - Finance
      description: >
        Search transaction by order item ids.

        If you request a transaction from another seller, you will get an empty
        response.
      security:
        - oAuth: []
      parameters:
        - in: query
          required: true
          name: orderItemIds[]
          description: |
            Search by order item ids.
            You have to add at least 1 order item id.
          schema:
            example:
              - 1
              - 2
            type: array
            items:
              type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Transaction info
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: Unique ID of transaction
                    sellerId:
                      type: integer
                      description: Seller Id
                      example: 1
                      nullable: true
                    transactionTypeId:
                      type: integer
                      description: |
                        Transaction type Id.
                        List of types you can find In /v2/transaction/types
                      example: 1
                    treStatementGroupId:
                      type: integer
                      description: Transaction Rule Engine group Id
                      example: 2
                      nullable: true
                    transactionGroupName:
                      type: string
                      description: Transaction Rule Engine group name
                      nullable: true
                    transactionTriggerEventId:
                      type: integer
                      description: >
                        Transaction trigger event Id.

                        List of events you can find In
                        /v2/transaction/trigger-events
                      example: 1
                      nullable: true
                    isUnique:
                      type: boolean
                      description: Is unique transaction
                      nullable: true
                    transactionSource:
                      type: string
                      description: Transaction source
                      enum:
                        - sellercenter
                        - web
                        - csv
                    userId:
                      type: integer
                      description: User Id
                      nullable: true
                    description:
                      type: string
                      description: Info about transaction
                    value:
                      type: number
                      format: float
                      description: Value
                      example: 65.3
                    taxesVat:
                      type: number
                      format: float
                      description: Value-Added Tax
                      nullable: true
                      example: 2.3
                    taxesWht:
                      type: number
                      format: float
                      description: Withholding tax
                      nullable: true
                      example: 1.3
                    isWhtInAmount:
                      type: boolean
                      description: Is Withholding tax in amount
                      example: true
                    ref:
                      type: integer
                      description: >-
                        Reference to the transaction object. For example on
                        Order Item Id.
                      nullable: true
                      example: 12
                    refDate:
                      type: integer
                      nullable: true
                    number:
                      type: string
                      description: Transaction number
                      nullable: true
                    transactionStatementId:
                      type: integer
                      description: Transaction statement Id
                      nullable: true
                    createdAt:
                      type: string
                      format: date-time
                      example: '2021-09-22T23:21:42+02:00'
                      description: Transaction create date-time
                    updatedAt:
                      type: string
                      format: date-time
                      example: '2021-09-22T23:21:42+02:00'
                      description: Transaction last update date-time
                    qcUserId:
                      type: integer
                      description: QC User Id
                      nullable: true
                      example: 44
                    hash:
                      type: string
                      description: Unique hash of transaction
                      nullable: true
                    currency:
                      type: string
                      description: Currency
                      nullable: true
                      example: USD
                    reference:
                      type: integer
                      description: Identifier of the reference type.
                      nullable: true
                    referenceType:
                      type: string
                      description: >-
                        Reference type tels who was the creator of given
                        transaction
                      nullable: true
                  required:
                    - id
                    - sellerId
                    - transactionTypeId
                    - treStatementGroupId
                    - transactionTriggerEventId
                    - isUnique
                    - transactionSource
                    - userId
                    - description
                    - value
                    - taxesVat
                    - taxesWht
                    - isWhtInAmount
                    - ref
                    - refDate
                    - number
                    - transactionStatementId
                    - createdAt
                    - updatedAt
                    - qcUserId
                    - hash
                    - currency
                    - reference
                    - referenceType
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/transaction/trigger-events:
    get:
      tags:
        - Finance
      description: >
        This method returns the entire list of transaction trigger events.

        This list is not updated often, so it can be saved locally and not
        called every time.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Transaction info
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Id
                      example: 1
                    name:
                      type: string
                      description: Trigger name
                      example: order_item_shipped
                    label:
                      type: string
                      description: Display name
                      example: Item Shipped
                  required:
                    - id
                    - name
                    - label
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/transaction/statements:
    get:
      tags:
        - Finance
      description: >
        Search transaction statements by ids.

        If you request a transaction from another seller, you will get an empty
        response.
      security:
        - oAuth: []
      parameters:
        - in: query
          required: true
          name: ids[]
          description: |
            Search by statement ids.
            You have to add at least 1 statement id.
          schema:
            example:
              - 1
              - 2
            type: array
            items:
              type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Transaction info
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Id
                      example: 1
                    sellerId:
                      type: integer
                      description: Seller Id
                      example: 2
                    startDate:
                      type: string
                      format: date-time
                      example: '2021-09-22T23:21:42+02:00'
                      description: Transaction statement start date.
                    endDate:
                      type: string
                      format: date-time
                      example: '2021-09-22T23:21:42+02:00'
                      description: Transaction statement end date.
                    openingBalance:
                      type: number
                      format: float
                      description: Balance before transaction
                      example: 32.5
                    guaranteeDeposit:
                      type: string
                      description: Guarantee deposit
                      nullable: true
                    closingBalance:
                      type: number
                      format: float
                      description: Balance after transaction
                      nullable: true
                      example: 30.6
                    payout:
                      type: number
                      format: float
                      description: Payout amount
                      nullable: true
                      example: 2.4
                    currency:
                      type: string
                      description: Currency
                      example: USD
                    createdAt:
                      type: string
                      format: date-time
                      example: '2021-09-22T23:21:42+02:00'
                      description: Transaction statement create date-time.
                    updatedAt:
                      type: string
                      format: date-time
                      example: '2021-09-22T23:21:42+02:00'
                      description: Transaction statement last update date-time.
                    paid:
                      type: boolean
                      description: Is paid
                      example: false
                    note:
                      type: string
                      description: Additional info about statement
                    userId:
                      type: integer
                      description: User Id
                      nullable: true
                    number:
                      type: string
                      description: Statement number
                      nullable: true
                    uuid:
                      type: string
                      description: Unique string identifier
                    paymentRef:
                      type: string
                      description: Payment reference
                      nullable: true
                    uploadId:
                      type: integer
                      description: Upload Id
                      nullable: true
                    paidAt:
                      type: string
                      format: date-time
                      example: '2021-09-22T23:21:42+02:00'
                      description: Date of payment.
                      nullable: true
                    dueAt:
                      type: string
                      format: date-time
                      example: '2021-09-22T23:21:42+02:00'
                      description: Due at.
                      nullable: true
                  required:
                    - id
                    - sellerId
                    - startDate
                    - endDate
                    - openingBalance
                    - guaranteeDeposit
                    - closingBalance
                    - payout
                    - currency
                    - createdAt
                    - updatedAt
                    - paid
                    - note
                    - userId
                    - number
                    - uuid
                    - paymentRef
                    - uploadId
                    - paidAt
                    - dueAt
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/user/roles:
    get:
      summary: |
        Get the available user roles based on your permissions.
      description: >
        Get the available user roles based on your permissions. If you do not
        have enough rights to list the roles

        you will receive an error. If you do not have enough rights to see the
        resources they will appear as empty.
      security:
        - oAuth: []
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: |
                        Id of role.
                    name:
                      type: string
                      example: maintenance
                      description: |
                        The name of the role.
                    displayName:
                      type: string
                      example: Maintenance
                      description: |
                        The display name of the role.
                    group:
                      type: string
                      example: venture
                      description: |
                        What group the role belongs to.
                    description:
                      type: string
                      example: Some details about the role
                      description: |
                        A descriptive text of the user role.
                    canBeEditedByRoleIds:
                      type: array
                      items:
                        type: integer
                        example: 1
                      description: Ids of roles that can edit the role
                    userCount:
                      type: integer
                      example: 103
                      description: |
                        How many users share the user role.
                    canEdit:
                      type: boolean
                      example: true
                      description: >
                        Whether or not you have enough rights to edit the role.
                        Use this to check whether or not to show the resources.
                    canDelete:
                      type: boolean
                      example: false
                      description: >
                        Whether or not you can delete the role. If there are
                        users that are assigned to the role, this will

                        be false even if you have enough permissions for
                        deletion.
                    resources:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                            description: |
                              Id of user resource.
                          name:
                            type: string
                            example: login
                            description: |
                              The name of the user resource.
                          label:
                            type: string
                            example: Frontend login
                            description: |
                              The label of the user resource.
                          description:
                            type: string
                            example: Some details about the user resource
                            description: |
                              A descriptive text of the user resource.
                          maintenanceOnly:
                            type: boolean
                            example: true
                            description: >
                              Whether or not the resource is only available for
                              maintenance user.
                          tags:
                            type: array
                            items:
                              type: string
                              example: seller
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin
    post:
      summary: |
        Add a new user role based on your permissions.
      description: >
        Add a new user role if your rights allow you to. Some roles will always
        be able to edit a role eg maintenance, role

        of the person creating the role.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                  example: New role
                group:
                  type: string
                  example: seller
                canBeEditedByRoleIds:
                  type: array
                  items:
                    type: integer
                    example: 2
                description:
                  type: string
                  example: A small descriptive text
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                    description: |
                      Id of role.
                  displayName:
                    type: string
                    example: Maintenance
                    description: |
                      The display name of the role.
                  group:
                    type: string
                    example: venture
                    description: |
                      What group the role belongs to.
                  description:
                    type: string
                    example: Some details about the role
                    description: |
                      A descriptive text of the user role.
                  canBeEditedByRoleIds:
                    type: array
                    items:
                      type: integer
                      example: 1
                    description: Ids of roles that can edit the role
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin
  /v2/user/roles/{roleId}:
    delete:
      summary: |
        Deletes a user role based on your permissions.
      description: >
        Deletes the user role with the provided id based on your permissions. If
        you do not have enough rights to delete the 

        role you will receive an error. If the id you provided is not assigned
        to any role you will receive an error message.

        The role will not be deleted if it still has active users, it will throw
        an error with message that the role has

        active users.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: roleId
          required: true
          schema:
            type: integer
          description: Numeric Id of Role
      responses:
        '204':
          description: Removed
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Role not found'
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin
    patch:
      summary: |
        Edit a user role based on your permissions.
      description: >
        Edit an existing user role if your rights allow you to. When editing the
        editors keep in mind some 

        roles will always be able to edit a role eg maintenance, same role as
        the one edited.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: roleId
          required: true
          schema:
            type: integer
          description: Numeric Id of Role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                  example: New display name
                group:
                  type: string
                  example: seller
                canBeEditedByRoleIds:
                  type: array
                  items:
                    type: integer
                    example: 2
                description:
                  type: string
                  example: A small descriptive text
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                    description: |
                      Id of role.
                  displayName:
                    type: string
                    example: Maintenance
                    description: |
                      The display name of the role.
                  group:
                    type: string
                    example: venture
                    description: |
                      What group the role belongs to.
                  description:
                    type: string
                    example: Some details about the role
                    description: |
                      A descriptive text of the user role.
                  canBeEditedByRoleIds:
                    type: array
                    items:
                      type: integer
                      example: 1
                    description: Ids of roles that can edit the role
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin
  /v2/user/roles/{roleId}/resources:
    get:
      summary: |
        Get the user roles resources based on your permissions.
      description: >
        Get the user roles resources based on your permissions. The response
        contains a list of enabled resources and a list

        of all the resources available. If you do not have enough rights to see
        the resources an access denied response will

        be returned.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: roleId
          required: true
          schema:
            type: integer
          description: Numeric Id of Role
      responses:
        '200':
          description: List of enabled resources and available resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabledResourcesList:
                    type: array
                    description: |
                      The list of enabled resources.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                          description: |
                            Id of user resource.
                        name:
                          type: string
                          example: login
                          description: |
                            The name of the user resource.
                        label:
                          type: string
                          example: Frontend login
                          description: |
                            The label of the user resource.
                        description:
                          type: string
                          example: Some details about the user resource
                          description: |
                            A descriptive text of the user resource.
                        maintenanceOnly:
                          type: boolean
                          example: true
                          description: >
                            Whether or not the resource is only available for
                            maintenance user.
                        tags:
                          type: array
                          items:
                            type: string
                            example: seller
                  resourcesList:
                    type: array
                    description: |
                      The list of available resources.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                          description: |
                            Id of user resource.
                        name:
                          type: string
                          example: login
                          description: |
                            The name of the user resource.
                        label:
                          type: string
                          example: Frontend login
                          description: |
                            The label of the user resource.
                        description:
                          type: string
                          example: Some details about the user resource
                          description: |
                            A descriptive text of the user resource.
                        maintenanceOnly:
                          type: boolean
                          example: true
                          description: >
                            Whether or not the resource is only available for
                            maintenance user.
                        tags:
                          type: array
                          items:
                            type: string
                            example: seller
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin
  /v2/user/roles/{roleId}/resources/{resourceId}:
    delete:
      summary: |
        Remove access to resource from given role.
      description: >
        Remove access to resource from role. If resource or role does not
        exists, 

        or you have no access to modify role or operate on given resource there 

        will be status code 403 returned. 

        In case of success there will be no body returned.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: roleId
          required: true
          schema:
            type: integer
          description: Numeric Id of Role
        - in: path
          name: resourceId
          required: true
          schema:
            type: integer
          description: Numeric Id of Resource
      responses:
        '204':
          description: Removed
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin
    post:
      summary: |
        Add access to resource for role.
      description: |
        Add access to resource for role. If resource or role does not exists, 
        or you have no access to modify role or operate on given resource there 
        will be status code 403 returned. 
        In case of success there will be no body returned.
      security:
        - oAuth: []
      parameters:
        - in: path
          name: roleId
          required: true
          schema:
            type: integer
          description: Numeric Id of Role
        - in: path
          name: resourceId
          required: true
          schema:
            type: integer
          description: Numeric Id of Resource
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Admin
  /v2/finance/statements:
    get:
      summary: Get statements
      description: Get a list of statements based on specified parameters.
      tags:
        - Finance
      security:
        - oAuth: []
      parameters:
        - name: sellerId
          in: query
          description: >-
            The ID of the seller to retrieve statements for. This parameter can
            only be set by an administrator. If the user is not an
            administrator, the parameter is automatically set to the ID of the
            current seller.
          schema:
            type: integer
        - name: startDate
          in: query
          description: >-
            The start date of the date range to filter by. Format is ISO 8601.
            YYYY-MM-DDThh:mm:ss±hh:mm. 2015-01-02T12:20:31+00:00
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: >-
            The end date of the date range to filter by. Format is ISO 8601.
            YYYY-MM-DDThh:mm:ss±hh:mm. 2015-01-02T12:20:31+00:00
          schema:
            type: string
            format: date-time
        - name: paid
          in: query
          description: Get only paid statements
          schema:
            type: boolean
        - name: country
          in: query
          description: The country filter.
          schema:
            type: string
        - name: currency
          in: query
          description: The currency filter.
          schema:
            type: string
        - name: type
          in: query
          description: Filter by the type of the statement
          schema:
            type: string
            default: marketplace
            enum:
              - marketplace
              - consignment
        - name: sort
          in: query
          description: The field to sort the results by.
          schema:
            type: string
            enum:
              - id
              - createdAt
              - startDate
            default: id
        - name: sortDir
          in: query
          description: The direction to sort the results by.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
        - name: limit
          in: query
          description: The maximum number of items to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: The number of items to skip before starting to return results.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - sellerId
                        - number
                        - startDate
                        - endDate
                        - dueDate
                        - openingBalance
                        - closingBalance
                        - payoutAmount
                        - guaranteeDeposit
                        - paid
                        - paidAt
                        - note
                        - currency
                        - country
                        - type
                      properties:
                        id:
                          type: integer
                          description: >-
                            The ID of the statement associated with the
                            transaction. 0 means statement is current
                        sellerId:
                          type: integer
                        number:
                          type: string
                        startDate:
                          type: string
                          format: date-time
                        endDate:
                          type: string
                          format: date-time
                        dueDate:
                          type: string
                          format: date-time
                        paidAt:
                          type: string
                          format: date-time
                        note:
                          type: string
                          format: string
                          nullable: true
                        openingBalance:
                          type: number
                        closingBalance:
                          type: number
                        payoutAmount:
                          type: number
                        guaranteeDeposit:
                          type: number
                        paid:
                          type: boolean
                        currency:
                          type: string
                          example: USD
                          description: >-
                            The currency of the transaction. Three-letter code,
                            ISO 4217 standard.
                        country:
                          type: string
                          example: US
                          description: >-
                            The country code of the transaction. Two-letter
                            code, ISO 3166-1 alpha-2 standard.
                        type:
                          type: string
                          example: marketplace
                          description: The type of the account statement
                          enum:
                            - marketplace
                            - consignment
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/finance/statements/{id}:
    get:
      summary: Get a single finance statement by ID.
      security:
        - oAuth: []
      tags:
        - Finance
      parameters:
        - in: path
          name: id
          description: ID of the finance statement to retrieve.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - sellerId
                  - number
                  - startDate
                  - endDate
                  - dueDate
                  - openingBalance
                  - closingBalance
                  - payoutAmount
                  - guaranteeDeposit
                  - paid
                  - paidAt
                  - note
                  - currency
                  - country
                  - type
                properties:
                  id:
                    type: integer
                    description: >-
                      The ID of the statement associated with the transaction. 0
                      means statement is current
                  sellerId:
                    type: integer
                  number:
                    type: string
                  startDate:
                    type: string
                    format: date-time
                  endDate:
                    type: string
                    format: date-time
                  dueDate:
                    type: string
                    format: date-time
                  paidAt:
                    type: string
                    format: date-time
                  note:
                    type: string
                    format: string
                    nullable: true
                  openingBalance:
                    type: number
                  closingBalance:
                    type: number
                  payoutAmount:
                    type: number
                  guaranteeDeposit:
                    type: number
                  paid:
                    type: boolean
                  currency:
                    type: string
                    example: USD
                    description: >-
                      The currency of the transaction. Three-letter code, ISO
                      4217 standard.
                  country:
                    type: string
                    example: US
                    description: >-
                      The country code of the transaction. Two-letter code, ISO
                      3166-1 alpha-2 standard.
                  type:
                    type: string
                    example: marketplace
                    description: The type of the account statement
                    enum:
                      - marketplace
                      - consignment
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/finance/statements/{id}/details:
    get:
      summary: Get details of a single finance statement by ID.
      security:
        - oAuth: []
      tags:
        - Finance
      parameters:
        - in: path
          name: id
          description: ID of the finance statement.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - currency
                  - country
                  - details
                properties:
                  id:
                    type: integer
                  currency:
                    type: string
                    example: USD
                    description: >-
                      The currency of the transaction. Three-letter code, ISO
                      4217 standard.
                  country:
                    type: string
                    example: DE
                    description: >-
                      The country code of the transaction. Two-letter code, ISO
                      3166-1 alpha-2 standard.
                  details:
                    type: object
                    required:
                      - order
                      - refunds
                      - others
                    properties:
                      order:
                        type: object
                        properties:
                          itemRevenue:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          otherRevenue:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          fees:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          subsidy:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          vatAmount:
                            nullable: true
                            type: number
                          whtAmount:
                            nullable: true
                            type: number
                          subtotal:
                            type: number
                      refunds:
                        type: object
                        properties:
                          itemRefunds:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          refunds:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          debitOtherRevenues:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          subsidyRefunds:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          vatAmount:
                            nullable: true
                            type: number
                          whtAmount:
                            nullable: true
                            type: number
                          subtotal:
                            type: number
                      others:
                        type: object
                        properties:
                          others:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          vatAmount:
                            nullable: true
                            type: number
                          whtAmount:
                            nullable: true
                            type: number
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/finance/statements/current/{country}:
    get:
      summary: Get a current finance statement.
      security:
        - oAuth: []
      tags:
        - Finance
      parameters:
        - name: country
          in: path
          required: true
          description: The country filter in ISO 3166-1 alpha-2 format.
          schema:
            type: string
        - name: type
          in: query
          description: The type of an account statement
          schema:
            type: string
            default: marketplace
            enum:
              - marketplace
              - consignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - sellerId
                  - number
                  - startDate
                  - endDate
                  - openingBalance
                  - closingBalance
                  - payoutAmount
                  - guaranteeDeposit
                  - currency
                  - type
                properties:
                  sellerId:
                    type: integer
                  number:
                    type: string
                  startDate:
                    type: string
                    format: date-time
                  endDate:
                    type: string
                    format: date-time
                  openingBalance:
                    type: number
                  closingBalance:
                    type: number
                  payoutAmount:
                    type: number
                  currency:
                    type: string
                  country:
                    type: string
                  guaranteeDeposit:
                    type: number
                  paid:
                    type: boolean
                  note:
                    type: string
                  paymentRef:
                    type: string
                  uploadId:
                    type: string
                  paidAt:
                    type: string
                    format: date-time
                  dueDate:
                    type: string
                    format: date-time
                  type:
                    type: string
                    description: Type of an account statement
                    enum:
                      - marketplace
                      - consignment
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/finance/statements/current/{country}/details:
    get:
      summary: Get details of a single finance statement by ID.
      security:
        - oAuth: []
      tags:
        - Finance
      parameters:
        - name: country
          in: path
          required: true
          description: The country filter.
          schema:
            type: string
        - name: type
          in: query
          description: Type of the account statement
          schema:
            type: string
            default: marketplace
            enum:
              - marketplace
              - consignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - currency
                  - type
                  - details
                properties:
                  id:
                    type: integer
                  currency:
                    type: string
                  type:
                    type: string
                    enum:
                      - marketplace
                      - consignment
                  details:
                    type: object
                    required:
                      - order
                      - refunds
                      - others
                    properties:
                      order:
                        type: object
                        properties:
                          itemRevenue:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          otherRevenue:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          fees:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          subsidy:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          vatAmount:
                            nullable: true
                            type: number
                          whtAmount:
                            nullable: true
                            type: number
                          subtotal:
                            type: number
                      refunds:
                        type: object
                        properties:
                          itemRefunds:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          refunds:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          debitOtherRevenues:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          subsidyRefunds:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          vatAmount:
                            nullable: true
                            type: number
                          whtAmount:
                            nullable: true
                            type: number
                          subtotal:
                            type: number
                      others:
                        type: object
                        properties:
                          others:
                            type: object
                            properties:
                              total:
                                type: number
                              groups:
                                type: array
                                nullable: true
                                items:
                                  type: object
                                  properties:
                                    id:
                                      type: integer
                                      description: >-
                                        This field represents the internal
                                        identifier of a transaction type and not
                                        the account statement group
                                    name:
                                      type: string
                                    amount:
                                      type: number
                          vatAmount:
                            nullable: true
                            type: number
                          whtAmount:
                            nullable: true
                            type: number
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/finance/transactions:
    get:
      summary: Retrieve transactions
      description: >-
        Returns a list of transactions for the specified period and statement
        IDs.
      security:
        - oAuth: []
      tags:
        - Finance
      parameters:
        - name: statementIds[]
          in: query
          description: >-
            A list of IDs of the financial statements associated with the
            transactions to retrieve.
          schema:
            type: array
            items:
              type: integer
        - name: sellerId
          in: query
          description: >-
            The ID of the seller to retrieve transactions for. This parameter
            can only be set by an administrator. If the user is not an
            administrator, the parameter is automatically set to the ID of the
            current seller.
          schema:
            type: integer
        - name: startDate
          in: query
          description: The start date of the period for which to retrieve transactions.
          schema:
            type: string
            format: date-time
            example: '2023-04-01T22:00:00.000Z'
        - name: endDate
          in: query
          description: The end date of the period for which to retrieve transactions.
          schema:
            type: string
            format: date-time
            example: '2023-04-01T22:00:00.000Z'
        - name: source
          in: query
          description: The source of the transactions.
          schema:
            type: string
            enum:
              - sellercenter
              - web
              - csv
        - name: country
          in: query
          description: The country filter.
          schema:
            type: string
        - name: orderItemId
          in: query
          description: The ID of the order item associated with the transactions.
          schema:
            type: integer
        - name: orderItemSrcId
          in: query
          description: The source ID of the order item associated with the transactions.
          schema:
            type: string
        - name: orderNumbers[]
          in: query
          description: The order number associated with the transactions.
          schema:
            type: array
            items:
              type: string
        - name: sort
          in: query
          description: The field to sort the results by.
          schema:
            type: string
            enum:
              - id
              - date
        - name: sortDir
          in: query
          description: The direction in which to sort the results ("asc" or "desc").
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: numbers[]
          in: query
          description: Transaction number
          schema:
            type: array
            items:
              type: string
        - name: typeIds[]
          in: query
          description: Transaction type Id
          schema:
            type: array
            items:
              type: integer
        - name: isHybrid
          in: query
          description: Filter by order item field is_hybrid (Size Refill)
          schema:
            type: boolean
        - name: isOutlet
          in: query
          description: Filter by order item field is_outlet
          schema:
            type: boolean
        - name: isPaid
          in: query
          description: Filter by paid statement
          schema:
            type: boolean
        - name: product[]
          in: query
          description: Filter by product data (name / shop sku / seller sku).
          schema:
            type: array
            items:
              type: string
        - name: statementType
          in: query
          description: Filter by statement type of the transaction
          schema:
            type: string
            default: marketplace
            enum:
              - marketplace
              - consignment
        - name: limit
          in: query
          description: The maximum number of items to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: The number of items to skip before starting to return results.
          schema:
            type: integer
      responses:
        '200':
          description: A list of transactions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - date
                        - number
                        - typeId
                        - treStatementGroupId
                        - amount
                        - vatAmount
                        - whtAmount
                        - source
                        - statementId
                        - orderItemId
                        - currency
                        - country
                        - typeName
                        - groupName
                        - orderNumber
                        - statementType
                      properties:
                        id:
                          type: integer
                          description: The ID of the transaction.
                        date:
                          type: string
                          format: date-time
                          description: The date of the transaction.
                        number:
                          type: string
                          description: Transaction number.
                        typeId:
                          type: integer
                          description: The type of the transaction.
                        treStatementGroupId:
                          type: integer
                          description: Transaction Rule Engine group Id
                          example: 2
                          nullable: true
                        amount:
                          type: number
                          description: The amount of the transaction.
                        vatAmount:
                          type: number
                          description: The VAT amount of the transaction.
                        whtAmount:
                          type: number
                          description: The WHT amount of the transaction.
                        source:
                          type: string
                          description: The source of the transaction.
                          enum:
                            - sellercenter
                            - web
                            - csv
                        comment:
                          type: string
                          description: The comment of the transaction.
                        statementId:
                          type: integer
                          description: >-
                            The ID of the statement associated with the
                            transaction. 0 means that statement is current
                        orderItemId:
                          type: integer
                          description: >-
                            The ID of the order item associated with the
                            transaction.
                        currency:
                          type: string
                          example: USD
                          description: >-
                            The currency of the transaction. Three-letter code,
                            ISO 4217 standard.
                        country:
                          type: string
                          example: DE
                          description: >-
                            The country code of the transaction. Two-letter
                            code, ISO 3166-1 alpha-2 standard.
                        typeName:
                          type: string
                          description: The name of the transaction type.
                        groupName:
                          type: string
                          description: The name of the transaction group.
                        orderNumber:
                          type: string
                          description: Order number.
                        statementType:
                          type: string
                          description: >-
                            The 'statementType' field specifies the type of
                            account statement to which the transaction belongs.
                          enum:
                            - marketplace
                            - consignment
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2.1/finance/transactions:
    get:
      summary: Retrieve transaction paginatable collection
      description: Returns a list of transactions by filter criteria
      security:
        - oAuth: []
      tags:
        - Finance
      parameters:
        - name: statementType
          in: query
          description: Filter by the transaction's associated statement type.
          required: false
          schema:
            type: string
            default: marketplace
            enum:
              - marketplace
              - consignment
        - name: sellerId
          in: query
          description: >-
            Filter by the transaction's association with the seller. This filter
            is exclusive to admin clients. The default value will be the seller
            ID of the associated client.
          required: false
          schema:
            type: number
            example: 1
        - name: gteCreatedAt
          in: query
          description: >-
            Filter by the transaction's association with a creation date that is
            greater than or equal to the provided value.
          required: false
          schema:
            type: string
            example: '2024-01-01T22:00:00.000Z'
        - name: lteCreatedAt
          in: query
          description: >-
            Filter by the transaction's association with a creation date that is
            lower than or equal to the provided value.
          required: false
          schema:
            type: string
            example: '2024-01-01T22:00:00.000Z'
        - name: country
          in: query
          description: >-
            Filter by the transaction's association with the country in which
            the orders were placed.
          required: false
          schema:
            type: string
            example: HK
        - name: source
          in: query
          description: >-
            Filter by the transaction's association with the source created by
            the transaction's creator.
          required: false
          schema:
            type: string
            enum:
              - sellercenter
              - api
              - web
              - csv
        - name: orderItemIds[]
          in: query
          description: Filter by the transaction's association with order item identifier.
          required: false
          schema:
            type: array
            items:
              type: integer
        - name: orderItemSrcIds[]
          in: query
          description: >-
            Filter by the transaction's association with order item region
            identifier.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: orderNumbers[]
          in: query
          description: Filter by the transaction's association with order number.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: numbers[]
          in: query
          description: Filter by the transaction's association with transaction number.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: products[]
          in: query
          description: >-
            Filter by the transaction's association with a product using region
            SKU, seller SKU, or name.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: statementId
          in: query
          description: >-
            The identifier of the account statement. The value 0 is representing
            the current statement.
          required: false
          schema:
            type: number
            example: 4
        - name: transactionTypeIds[]
          in: query
          description: Filter by the transaction's association with transaction types.
          required: false
          schema:
            type: array
            items:
              type: integer
        - name: isOutlet
          in: query
          description: >-
            Filter by the transaction's association with order item which is
            outlet.
          required: false
          schema:
            type: boolean
            default: false
        - name: isHybrid
          in: query
          description: >-
            Filter by the transaction's association with order item which is
            hybrid.
          required: false
          schema:
            type: boolean
            default: false
        - name: isPaid
          in: query
          description: >-
            Filter by the transaction's association with account statement is
            paid.
          required: false
          schema:
            type: boolean
            default: false
        - name: sort
          in: query
          description: Sort the collection by predefined options.
          required: false
          schema:
            type: string
            default: createdAt
            enum:
              - createdAt
              - transactionType
              - transactionNumber
              - amount
        - name: sortDir
          in: query
          description: Specify the sorting direction.
          required: false
          schema:
            type: string
            default: desc
            enum:
              - asc
              - desc
        - name: limit
          in: query
          description: The maximum number of items to return.
          required: false
          schema:
            type: integer
            default: 100
        - name: offset
          in: query
          description: The number of items to skip before starting to return results.
          required: false
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A list of transactions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        createdAt:
                          type: string
                          description: The creation date of the transaction.
                        transactionNumber:
                          type: string
                          description: The registration number of the transaction.
                        transactionType:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The identifier of a transaction type.
                            name:
                              type: string
                              description: The name of a transaction type.
                            accountStatementGroup:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: >-
                                    The identifier of an account statement
                                    group.
                                name:
                                  type: string
                                  description: The name of an account statement group.
                              required:
                                - id
                                - name
                          required:
                            - id
                            - name
                        userId:
                          type: integer
                          description: The user id of who created the transaction manually.
                        comment:
                          type: string
                          description: A comment related to a transaction.
                        amount:
                          type: object
                          properties:
                            value:
                              type: number
                              description: Total fee amount of the transaction.
                            vatTax:
                              type: number
                              description: Amount of VAT tax.
                            whtTax:
                              type: number
                              description: Amount of WHT tax.
                            currency:
                              type: string
                              description: >-
                                The currency in which the transaction will be
                                paid.
                          required:
                            - value
                            - vatTax
                            - whtTax
                            - currency
                        accountStatementId:
                          type: integer
                          description: The identifier of the account statement.
                        orderNumber:
                          type: string
                          nullable: true
                          description: >-
                            The order number if the transaction type is
                            associated with an order item.
                        productSku:
                          type: string
                          nullable: true
                          description: >-
                            The product SKU if the transaction type is
                            associated with an order item.
                        country:
                          type: string
                          description: The country in which the orders were placed.
                        isWhtInAmount:
                          type: boolean
                          description: >-
                            Is defining is the amount.whtTax value already
                            included in amount.value.
                        transactionReference:
                          type: integer
                          description: >-
                            The identifier of the transaction reference. (Can be
                            related to an order, order item, product, seller or
                            other)
                        qcUserId:
                          type: integer
                          description: The id of a user who approved a pending transaction.
                        hash:
                          type: string
                          nullable: true
                          description: >-
                            The hash of a transaction to ensure that a
                            transaction is unique.
                        statementType:
                          type: string
                          description: >-
                            The type indicates to which account statement the
                            transaction is associated.
                          enum:
                            - marketplace
                            - consignment
                        accountStatementIsPaid:
                          type: boolean
                          description: Status of account statement payment.
                        accountStatementNumber:
                          type: string
                          description: The number of the account statement.
                        accountStatementStartDate:
                          type: string
                          description: The start date of the account statement.
                        accountStatementEndDate:
                          type: string
                          description: The end date of the account statement.
                        accountStatementPaymentDueDate:
                          type: string
                          format: date-time
                          description: The payment due date of the account statement.
                      required:
                        - createdAt
                        - transactionNumber
                        - transactionType
                        - comment
                        - amount
                        - country
                        - isWhtInAmount
                        - hash
                        - statementType
                        - isPaid
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/finance/variables:
    get:
      summary: Retrieve TRE variables
      description: >
        Returns a list of TRE variables which belongs to Global -> Seller
        inheritance group. This endpoint is only available for the admin role. 

        If seller has no value for specific variable, global value will be
        returned.
      security:
        - oAuth: []
      tags:
        - Finance
      parameters:
        - name: sellerId
          in: query
          description: The ID of the seller to retrieve TRE variables.
          schema:
            type: integer
        - name: sellerSrcId
          in: query
          description: External ID of the seller from third party service.
          schema:
            type: string
        - name: variableName
          in: query
          description: Exact name of TRE variable to retrieve.
          schema:
            type: string
        - name: variableValue
          in: query
          description: Exact value of TRE variable to retrieve.
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of items to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: The number of items to skip before starting to return results.
          schema:
            type: integer
      responses:
        '200':
          description: A list of variables.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        sellerId:
                          type: integer
                        sellerSrcId:
                          type: string
                          description: External seller id.
                        name:
                          type: string
                        description:
                          type: string
                        sellerDescription:
                          type: string
                        type:
                          type: string
                        value:
                          type: number
                          format: float
                        globalValue:
                          type: boolean
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
  /v2/finance/order-item-transactions:
    get:
      summary: Retrieve transactions
      description: Returns a list of transactions for the specified period.
      security:
        - oAuth: []
      tags:
        - Finance
      parameters:
        - name: statementId
          in: query
          description: >-
            The identifier of the account statement. The value 0 is representing
            the current statement.
          schema:
            type: number
            example: 4
        - name: startDate
          in: query
          description: The start date of the period for which to retrieve transactions.
          schema:
            type: string
            format: date-time
            example: '2023-04-01T22:00:00.000Z'
        - name: endDate
          in: query
          description: The end date of the period for which to retrieve transactions.
          schema:
            type: string
            format: date-time
            example: '2023-04-01T22:00:00.000Z'
        - name: products[]
          in: query
          description: The product associated with the transactions.
          schema:
            type: array
            items:
              type: string
        - name: productSkus[]
          in: query
          description: The product SKUs associated with the transactions.
          schema:
            type: array
            items:
              type: string
        - name: orderNumbers[]
          in: query
          description: The order number associated with the transactions.
          schema:
            type: array
            items:
              type: string
        - name: payoutStatus
          in: query
          description: Payout Status of Statement
          schema:
            type: string
            enum:
              - paid
              - unpaid
              - partiallyPaid
        - name: shipmentTypes[]
          in: query
          description: Shipment type
          schema:
            type: array
            items:
              type: string
              enum:
                - dropshipping
                - cross-docking
                - warehouse
        - name: status[]
          in: query
          required: false
          description: Status of an Order Item
          schema:
            type: array
            items:
              type: string
              description: |
                Order Item status.
              example: pending
              enum:
                - pending
                - shipped
                - canceled
                - returned
                - failed
                - delivered
                - ready_to_ship
                - return_shipped_by_customer
                - return_waiting_for_approval
                - return_rejected
                - return_delivered
                - payment_pending
        - name: isHybrid
          in: query
          description: Filter by order item field is_hybrid (Size Refill)
          schema:
            type: boolean
        - name: isOutlet
          in: query
          description: Filter by order item field is_outlet
          schema:
            type: boolean
        - name: statementType
          in: query
          description: Filter by the transaction's associated statement type.
          required: false
          schema:
            type: string
            default: marketplace
            enum:
              - marketplace
              - consignment
        - name: limit
          in: query
          description: The maximum number of items to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: The number of items to skip before starting to return results.
          schema:
            type: integer
        - name: sort
          in: query
          description: The field to sort the results by.
          schema:
            type: string
            enum:
              - id
              - date
              - orderNumber
              - orderDate
              - payoutStatus
              - price
              - commission
              - fees
              - payoutAmount
        - name: sortDir
          in: query
          description: The direction in which to sort the results ("asc" or "desc").
          schema:
            type: string
            enum:
              - asc
              - desc
      responses:
        '200':
          description: A list of transactions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      required:
                        - orderItemId
                        - orderId
                        - commission
                        - fees
                        - vatAmount
                        - whtAmount
                        - payoutAmount
                        - statementId
                        - currency
                        - country
                        - statementType
                      properties:
                        orderItemId:
                          type: integer
                          description: >-
                            The ID of the order item associated with the
                            transaction.
                        orderId:
                          type: integer
                          description: The ID of the order associated with the transaction.
                        commission:
                          type: number
                          description: The commission amount of the transaction.
                        fees:
                          type: number
                          description: The fees amount of the transaction.
                        vatAmount:
                          type: number
                          description: The VAT amount of the transaction.
                        whtAmount:
                          type: number
                          description: The WHT amount of the transaction.
                        payoutAmount:
                          type: number
                          description: >-
                            The payout amount of the transaction related to
                            item.
                        statementId:
                          type: integer
                          description: >-
                            The ID of the statement associated with the
                            transaction. 0 means that transaction belongs to
                            current statement
                        currency:
                          type: string
                          example: USD
                          description: >-
                            The currency of the transaction. Three-letter code,
                            ISO 4217 standard.
                        country:
                          type: string
                          example: DE
                          description: >-
                            The country code of the transaction. Two-letter
                            code, ISO 3166-1 alpha-2 standard.
                        statementType:
                          description: The transaction's associated statement type.
                          type: string
                          default: marketplace
                          enum:
                            - marketplace
                            - consignment
                        payoutStatus:
                          type: string
                          description: The payout status of the transaction.
                        accountStatementPaymentDueDate:
                          type: string
                          format: date-time
                          description: The payment due date of the account statement.
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                        format: int32
                        description: |
                          Entity limit per request
                        example: 20
                      offset:
                        type: integer
                        format: int32
                        description: |
                          Offset for entities in repository
                        example: 10
                      totalCount:
                        type: integer
                        format: int32
                        description: |
                          Total count of entities for request
                        example: 100
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/finance/transaction/types:
    get:
      tags:
        - Finance
      description: >
        This method returns the entire list of transaction types.

        This list is not updated often, so it can be saved locally and not
        called every time.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Transaction info
                  type: object
                  properties:
                    accountStatementSection:
                      type: string
                      description: Account statement section
                      example: other_transactions
                      enum:
                        - item_revenue
                        - other_revenue
                        - subsidy
                        - subsidy_refund
                        - fees
                        - item_refunds
                        - refunds
                        - other_transactions
                        - debit_other_revenues
                    description:
                      type: string
                      description: Description
                    feeType:
                      type: integer
                      description: Fee type
                      nullable: true
                    id:
                      type: integer
                      description: Id
                      example: 1
                    refSource:
                      type: string
                      description: Ref source
                      nullable: true
                      example: sales_order_item
                    type:
                      type: string
                      description: Type
                      enum:
                        - debit
                        - credit
                  required:
                    - accountStatementSection
                    - description
                    - feeType
                    - id
                    - refSource
                    - type
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /v2/finance/transactions/account-statement-groups:
    get:
      tags:
        - Finance
      description: >
        This method returns the entire list of transaction account statement
        groups.
      security:
        - oAuth: []
      parameters:
        - name: statementType
          in: query
          description: Filter by the account statement group's associated statement type.
          schema:
            type: string
            default: marketplace
            enum:
              - marketplace
              - consignment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  description: Transaction account statement group info
                  type: object
                  properties:
                    accountStatementGroupId:
                      type: string
                      description: Account statement group identifier
                      example: 1
                    name:
                      type: string
                      description: Account statement group name
                      example: Payment Deposit
                    outcome:
                      type: object
                      description: Outcome
                      properties:
                        value:
                          type: string
                          description: outcome value
                          example: debit_transaction
                    transactionTypeId:
                      type: integer
                      description: Transaction type identifier
                      example: 1
                    accountStatementSection:
                      type: string
                      description: Account statement section
                      example: fees
                    transactionType:
                      type: string
                      description: Transaction type name
                      example: Selling Fee Credit
                    marker:
                      type: string
                      description: Marker
                      example: account_statement_group-balance-deduction-10
                    statementType:
                      type: string
                      description: Shows to which statement this groups is associated
                      default: marketplace
                      enum:
                        - marketplace
                        - consignment
                    transactionTypeRefSource:
                      type: string
                      description: Transaction type reference source
                      example: seller
                      nullable: true
                  required:
                    - accountStatementGroupId
                    - name
                    - outcome
                    - transactionTypeId
                    - accountStatementSection
                    - transactionType
                    - marker
                    - statementType
                    - transactionTypeRefSource
        '401':
          description: Unauthorized error
        '500':
          description: Service Unavailable
  /v2/finance/transaction:
    post:
      tags:
        - Finance
      description: >
        Creates a transaction.

        This endpoint available only for the admin role.

        Request signing is required for this endpoint (see section "Request
        Signing" above).
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - sellerId
                - transactionTypeId
                - accountStatementGroupId
                - value
                - currency
              properties:
                sellerId:
                  type: integer
                  description: Seller identifier
                  example: 1
                description:
                  type: string
                  description: Transaction description
                  example: Balance Deduction
                accountStatementGroupId:
                  type: integer
                  description: >-
                    Account statement group identifier  - can be fetched by
                    endpoint: /v2/finance/transaction/account_statement_groups
                  example: 1
                transactionTypeId:
                  type: integer
                  description: >-
                    Transaction type identifier - can be fetched by endpoint:
                    /v2/finance/transaction/types
                  example: 1
                value:
                  type: number
                  description: Transaction value (positive or negative)
                  example: 123.45
                currency:
                  type: string
                  description: >-
                    Transaction currency - if the currency is not supported by
                    Seller, the transaction won't be created
                  example: USD
                referenceId:
                  type: integer
                  description: >-
                    Reference identifier - required for order and product
                    context
                  example: 1234
                vatTax:
                  type: number
                  description: VAT tax value
                  example: 12.3
                whtTax:
                  type: number
                  description: WHT tax value
                  example: 12.3
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                description: Transaction info
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                    description: Unique ID of transaction
                  sellerId:
                    type: integer
                    description: Seller Id
                    example: 1
                    nullable: true
                  transactionTypeId:
                    type: integer
                    description: |
                      Transaction type Id.
                      List of types you can find In /v2/transaction/types
                    example: 1
                  treStatementGroupId:
                    type: integer
                    description: Transaction Rule Engine group Id
                    example: 2
                    nullable: true
                  transactionGroupName:
                    type: string
                    description: Transaction Rule Engine group name
                    nullable: true
                  transactionTriggerEventId:
                    type: integer
                    description: >
                      Transaction trigger event Id.

                      List of events you can find In
                      /v2/transaction/trigger-events
                    example: 1
                    nullable: true
                  isUnique:
                    type: boolean
                    description: Is unique transaction
                    nullable: true
                  transactionSource:
                    type: string
                    description: Transaction source
                    enum:
                      - sellercenter
                      - web
                      - csv
                  userId:
                    type: integer
                    description: User Id
                    nullable: true
                  description:
                    type: string
                    description: Info about transaction
                  value:
                    type: number
                    format: float
                    description: Value
                    example: 65.3
                  taxesVat:
                    type: number
                    format: float
                    description: Value-Added Tax
                    nullable: true
                    example: 2.3
                  taxesWht:
                    type: number
                    format: float
                    description: Withholding tax
                    nullable: true
                    example: 1.3
                  isWhtInAmount:
                    type: boolean
                    description: Is Withholding tax in amount
                    example: true
                  ref:
                    type: integer
                    description: >-
                      Reference to the transaction object. For example on Order
                      Item Id.
                    nullable: true
                    example: 12
                  refDate:
                    type: integer
                    nullable: true
                  number:
                    type: string
                    description: Transaction number
                    nullable: true
                  transactionStatementId:
                    type: integer
                    description: Transaction statement Id
                    nullable: true
                  createdAt:
                    type: string
                    format: date-time
                    example: '2021-09-22T23:21:42+02:00'
                    description: Transaction create date-time
                  updatedAt:
                    type: string
                    format: date-time
                    example: '2021-09-22T23:21:42+02:00'
                    description: Transaction last update date-time
                  qcUserId:
                    type: integer
                    description: QC User Id
                    nullable: true
                    example: 44
                  hash:
                    type: string
                    description: Unique hash of transaction
                    nullable: true
                  currency:
                    type: string
                    description: Currency
                    nullable: true
                    example: USD
                  reference:
                    type: integer
                    description: Identifier of the reference type.
                    nullable: true
                  referenceType:
                    type: string
                    description: >-
                      Reference type tels who was the creator of given
                      transaction
                    nullable: true
                required:
                  - id
                  - sellerId
                  - transactionTypeId
                  - treStatementGroupId
                  - transactionTriggerEventId
                  - isUnique
                  - transactionSource
                  - userId
                  - description
                  - value
                  - taxesVat
                  - taxesWht
                  - isWhtInAmount
                  - ref
                  - refDate
                  - number
                  - transactionStatementId
                  - createdAt
                  - updatedAt
                  - qcUserId
                  - hash
                  - currency
                  - reference
                  - referenceType
        '400':
          description: Bad Request
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
  /v2/sellers/{sellerId}/switch:
    post:
      summary: Switch to a provided seller.
      description: >-
        Change your seller to seller with provided sellerId. Authentication
        tokens need refresh if seller differs to your current one.
      parameters:
        - in: path
          name: sellerId
          required: true
          schema:
            type: integer
          description: Numeric Id of Seller
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    enum:
                      - true
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/sellers/credit-note-settings/update:
    post:
      summary: |
        Update the settings of the credit note number for a particular seller.
      security:
        - oAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - prefix
                - nextNumber
              properties:
                generationType:
                  type: string
                  description: >-
                    Accept only 'autoincrement_number', default value is
                    'autoincrement_number'
                  example: autoincrement_number
                prefix:
                  type: string
                  description: Prefix for the credit note number
                  example: ABC
                nextNumber:
                  type: integer
                  description: The next number
                  example: 123
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  generationType:
                    type: string
                    description: Generation type
                    example: autoincrement_number
                  prefix:
                    type: string
                    description: Prefix for the credit note number
                    example: ABC
                  nextNumber:
                    type: integer
                    description: The next number
                    example: 123
                  nextFormatedValue:
                    type: string
                    description: The next formated value
                    example: CNCODEABC123
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/sellers/credit-note-settings:
    get:
      summary: |
        Get the current settings of the credit note number.
      security:
        - oAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  generationType:
                    type: string
                    description: Generation type
                    example: autoincrement_number
                  prefix:
                    type: string
                    description: Prefix for the credit note number
                    example: ABC
                  nextNumber:
                    type: integer
                    description: The next number
                    example: 123
                  nextFormatedValue:
                    type: string
                    description: The next formated value
                    example: CNCODEABC123
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Seller
  /v2/export-images:
    get:
      summary: |
        Triggers export of product images using filters.
      description: >
        Triggers export of product images using filters. 

        Export files are generated in background. This means that for your
        request to trigger export API will return

        you data about scheduled job. Depending on size of export (whether it is
        10 products or 100000 products)

        export generation can take from milliseconds till some minutes.
      security:
        - oAuth: []
      parameters:
        - in: query
          required: false
          name: brandIds[]
          description: Search by brand IDs
          schema:
            type: array
            items:
              type: integer
        - in: query
          required: false
          name: createDateStart
          description: >
            Filter by creation date of product set. It should be less than
            createDateEnd. Date should be given in Y-m-d

            format, for example 2021-01-20 21:33:45.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: createDateEnd
          description: >
            Filter by date of creation of product set. It should be greater than
            createDateStart. Date should be given in Y-m-d

            format, for example 2021-02-14 21:33:45.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: keyword
          description: >
            Search by product name / product sku / seller sku / parent sku. You
            can either use it as a single

            parameter (?keyword=searchTerm) or multiple one
            (?keyword[]=searchTerm1&keyword[]=searchTerm2)
          schema:
            oneOf:
              - type: string
                example: T_shirt
              - type: array
                items:
                  type: string
                  example: T_shirt
        - in: query
          required: false
          name: onlyWithMissingImage
          schema:
            type: boolean
            example: false
          description: >-
            Whether to return only images from products with missing images. If
            not set at all it will default to false.
        - name: orderDirection
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
            example: ASC
        - in: query
          required: false
          name: tags[]
          description: Search by tag ids or names
          schema:
            type: array
            items:
              type: string
        - in: query
          required: false
          name: updateDateStart
          description: >
            Filter by update date of product set. It should be less than
            updateDateEnd. Date should be given in Y-m-d

            format, for example 2021-01-20 21:33:45.
          schema:
            type: string
            format: date
            example: ''
        - in: query
          required: false
          name: updateDateEnd
          description: >
            Filter by update date of product set. It should be greater than
            updateDateStart. Date should be given in Y-m-d

            format, for example 2021-02-14 21:33:45.
          schema:
            type: string
            format: date
            example: ''
      responses:
        '201':
          description: Export job was successfully queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  exportItemId:
                    description: ID of created export job
                    type: integer
                    example: 852
                  uuid:
                    description: UUID of created export job
                    type: string
                    example: 78838546-777e-47c8-ba09-43d49bb9efa5
        '401':
          description: Unauthorized error
        '422':
          description: Entity can not be processed
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: ''
                  title:
                    type: string
                    description: >
                      A short summary of the problem type. Written in English
                      and readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status Transition is not allowed
                  status:
                    type: integer
                    format: int32
                    description: >
                      The HTTP status code generated by the origin server for
                      this occurrence of the problem.
                    minimum: 400
                    maximum: 599
                    example: 400
                  detail:
                    type: string
                    description: >
                      A human readable explanation specific to this occurrence
                      of the problem that is helpful to locate the problem and
                      give advice on how to proceed. Written in English and
                      readable for engineers, usually not suited for non
                      technical stakeholders and not localized.
                    example: Status 'InTransit2' is not valid status for order item.
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
      tags:
        - Product Image
  /v2/archive/orders:
    get:
      tags:
        - Archive
      summary: Get list of archived orders
      operationId: getArchivedOrders
      security:
        - oAuth: []
      parameters:
        - name: orderNr
          description: Order number
          in: query
          required: false
          schema:
            type: string
        - name: createdAtFrom
          description: Filter orders created after this date
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdAtTo
          description: Filter orders created before this date
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: currency
          description: Filter orders by currency
          in: query
          required: false
          schema:
            type: string
        - name: srcId
          description: Filter orders by source id
          in: query
          required: false
          schema:
            type: string
        - name: offset
          description: Number of orders to skip
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          description: Number of orders per page
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        idSalesOrder:
                          type: integer
                        srcId:
                          type: string
                        orderNr:
                          type: string
                        createdAt:
                          type: string
                          format: date-time
                          nullable: false
                        currency:
                          type: string
                        properties:
                          type: object
                        SalesOrderComment:
                          type: array
                          items:
                            type: object
                            properties:
                              src_id:
                                type: string
                              status:
                                type: string
                              content:
                                type: string
                              sc_user:
                                type: string
                                nullable: true
                              username:
                                type: string
                              is_opened:
                                type: integer
                              created_at:
                                type: string
                                format: date-time
                              updated_at:
                                type: string
                                format: date-time
                              is_answered:
                                type: integer
                              comment_type:
                                type: string
                              source_system:
                                type: string
                              fk_sales_order:
                                type: integer
                              fk_sales_order_item:
                                type: integer
                                nullable: true
                              fk_sales_order_comment:
                                type: integer
                                nullable: true
                              id_sales_order_comment:
                                type: integer
                        salesOrderInvoice:
                          type: array
                          items:
                            type: object
                            properties:
                              required:
                                type: integer
                              created_at:
                                type: string
                                format: date-time
                              updated_at:
                                type: string
                                format: date-time
                              fk_sales_order:
                                type: integer
                              id_sales_order_invoice:
                                type: integer
                        OrderItemArchives:
                          type: array
                          items:
                            type: object
                            properties:
                              idSalesOrderItem:
                                type: integer
                              fkSeller:
                                type: integer
                              srcId:
                                type: string
                              properties:
                                type: object
                                properties:
                                  uuid:
                                    type: string
                                  source:
                                    type: string
                                    nullable: true
                                  src_id:
                                    type: string
                                  read_at:
                                    type: string
                                    nullable: true
                                  remarks:
                                    type: string
                                  currency:
                                    type: string
                                  order_nr:
                                    type: string
                                  created_at:
                                    type: string
                                    format: date-time
                                  updated_at:
                                    type: string
                                    format: date-time
                                  gift_option:
                                    type: integer
                                  gift_message:
                                    type: string
                                    nullable: true
                                  voucher_code:
                                    type: string
                                  voucher_type:
                                    type: string
                                    nullable: true
                                  delivery_info:
                                    type: string
                                  id_sales_order:
                                    type: integer
                                  payment_method:
                                    type: string
                                  payout_pending:
                                    type: integer
                                  src_created_at:
                                    type: string
                                    format: date-time
                                  address_billing:
                                    type: string
                                  address_shipping:
                                    type: string
                                  extra_attributes:
                                    type: string
                                    nullable: true
                                  address_updated_at:
                                    type: string
                                    format: date-time
                                  customer_last_name:
                                    type: string
                                  customer_first_name:
                                    type: string
                                  national_registration_number:
                                    type: string
                                    nullable: true
                              inventoryStatusHistory:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    uid:
                                      type: string
                                    status:
                                      type: string
                                    created_at:
                                      type: string
                                      format: date-time
                                    fk_catalog_product:
                                      type: integer
                                    fk_sales_order_item:
                                      type: integer
                                    id_inventory_status_history:
                                      type: integer
                              orderItemOosCancellation:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    shop_sku:
                                      type: string
                                    fk_seller:
                                      type: integer
                                    created_at:
                                      type: string
                                      format: date-time
                                    stock_quantity:
                                      type: integer
                                    stock_updated_at:
                                      type: string
                                      format: date-time
                                    fk_catalog_product:
                                      type: integer
                                    fk_sales_order_item:
                                      type: integer
                              returnRequestItem:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    created_at:
                                      type: string
                                      format: date-time
                                    updated_at:
                                      type: string
                                      format: date-time
                                    returnRequest:
                                      type: object
                                      properties:
                                        comment:
                                          type: string
                                        fk_user:
                                          type: integer
                                        fk_seller:
                                          type: integer
                                        created_at:
                                          type: string
                                          format: date-time
                                        updated_at:
                                          type: string
                                          format: date-time
                                        request_type:
                                          type: string
                                        shipping_date:
                                          type: string
                                          format: date-time
                                        src_created_at:
                                          type: string
                                          format: date-time
                                        src_updated_at:
                                          type: string
                                          format: date-time
                                        id_return_request:
                                          type: integer
                                        return_delivery_type:
                                          type: string
                                        id_supplier_return_oms:
                                          type: integer
                                        supplier_return_number_oms:
                                          type: string
                                    src_created_at:
                                      type: string
                                      format: date-time
                                    src_updated_at:
                                      type: string
                                      format: date-time
                                    fk_return_request:
                                      type: integer
                                    fk_sales_order_item:
                                      type: integer
                                    id_return_request_item:
                                      type: integer
                                    fk_return_request_status:
                                      type: integer
                                    id_supplier_return_item_oms:
                                      type: integer
                              salesOrderItemProperties:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    hsn_code:
                                      type: string
                                    is_outlet:
                                      type: integer
                                    created_at:
                                      type: string
                                      format: date-time
                                    updated_at:
                                      type: string
                                      format: date-time
                                    excise_rate:
                                      type: string
                                    abatement_rate:
                                      type: string
                                    warehouse_name:
                                      type: string
                                      nullable: true
                                    volumetric_size:
                                      type: string
                                      nullable: true
                                    is_free_shipping:
                                      type: integer
                                    sales_due_amount:
                                      type: string
                                      nullable: true
                                    credit_note_number:
                                      type: string
                                      nullable: true
                                    item_serial_number:
                                      type: string
                                      nullable: true
                                    fk_sales_order_item:
                                      type: integer
                                    promotion_discounts:
                                      type: string
                                    cod_collectable_amount:
                                      type: string
                                      nullable: true
                                    id_sales_order_item_properties:
                                      type: integer
                                    fk_sales_order_item_status_detail:
                                      type: string
                                      nullable: true
                              salesOrderItemStatusHistory:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    note:
                                      type: string
                                      nullable: true
                                    user:
                                      type: string
                                    created_at:
                                      type: string
                                      format: date-time
                                    src_created_at:
                                      type: string
                                      nullable: true
                                    fk_sales_order_item:
                                      type: integer
                                    fk_sales_order_item_status:
                                      type: integer
                                    id_sales_order_item_status_history:
                                      type: integer
                              salesOrderItemStatusManifestDetailSalesOrderItem:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    fk_manifest_type:
                                      type: integer
                                    fk_sales_order_item:
                                      type: integer
                                    fk_sales_order_item_status_manifest_detail:
                                      type: integer
                              salesOrderItemStatusTransitionTime:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    fk_sales_order_item:
                                      type: integer
                                    created_to_shipped_business_hours:
                                      type: integer
                              tagManagerSalesOrderItem:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    name:
                                      type: string
                                    entity:
                                      type: string
                                    fk_user:
                                      type: integer
                                    created_at:
                                      type: string
                                      format: date-time
                                    expiration:
                                      type: string
                                      nullable: true
                                    updated_at:
                                      type: string
                                      format: date-time
                                    description:
                                      type: string
                                    id_tag_manager_tag:
                                      type: integer
                              manifestArchives:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    idManifest:
                                      type: integer
                                    properties:
                                      type: object
                                      properties:
                                        fk_seller:
                                          type: integer
                                        created_at:
                                          type: string
                                          format: date-time
                                        updated_at:
                                          type: string
                                          format: date-time
                                        id_manifest:
                                          type: integer
                                        manifest_code:
                                          type: string
                                        tracking_code:
                                          type: string
                                          nullable: true
                                        fk_manifest_type:
                                          type: integer
                                        fk_manifest_status:
                                          type: integer
                                        fk_shipment_provider:
                                          type: string
                                          nullable: true
                        packageArchives:
                          type: array
                          items:
                            type: object
                            properties:
                              idPackage:
                                type: integer
                              properties:
                                type: object
                                properties:
                                  fk_seller:
                                    type: integer
                                  created_at:
                                    type: string
                                    format: date-time
                                  updated_at:
                                    type: string
                                    format: date-time
                                  id_package:
                                    type: integer
                                  package_code:
                                    type: string
                                  tracking_code:
                                    type: string
                                    nullable: true
                                  fk_package_type:
                                    type: integer
                                  fk_package_status:
                                    type: integer
                                  fk_shipment_provider:
                                    type: string
                                    nullable: true
                              packageItem:
                                type: string
                              documentToken:
                                type: string
                              salesOrderDocument:
                                type: string
                  hasNext:
                    description: Information if there is a next page
                    type: boolean
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /filemanager/v1/files/download/{uuid}:
    get:
      summary: Downloads the file associated with the given file entity id
      security:
        - oAuth: []
      tags:
        - Files
      parameters:
        - in: path
          name: uuid
          description: Id of the file entry
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
  /filemanager/v1/files/{uuid}/status:
    get:
      summary: >-
        Get the processing status of the file associated with the given file
        entity id
      description: >
        Returns the processing status of the file with the given file entity
        id. 

        This operation implements long polling. If the file is found and is in
        an intermediate processing status,

        the operation will not complete until processing is finalised or timeout
        is reached (30 secs). In case of timeout the current processing

        status will be returned. 


        ## Status definitions

        **QUEUED, PENDING, PROCESSING** - processing is not finalised yet. You
        can call the endpoint once again


        **FINISHED** - processing is finished. You can download the file 


        **ERROR, EXPIRED, CANCELED** - download operation is not available for
        this file entry
      security:
        - oAuth: []
      tags:
        - Files
      parameters:
        - in: path
          name: uuid
          description: Id of the file entry
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  processStatus:
                    type: string
                    example: FINISHED
                    description: Current status of the file.
        '401':
          description: Unauthorized error
        '403':
          description: Access Denied
        '404':
          description: Entity not found
        '500':
          description: Service Unavailable
        '503':
          description: Service unavailable due to Maintenance Mode
components:
  parameters:
    PathImageId:
      in: path
      name: imageId
      required: true
      schema:
        type: integer
      description: >-
        Numeric Id of Image (Id from /v2/product-set/{productSetId}/images
        endpoint)
    PathCountry:
      in: path
      name: country
      required: true
      schema:
        type: string
      description: Country code
    PathProductSetId:
      in: path
      name: productSetId
      required: true
      schema:
        type: integer
      description: Numeric Id of ProductSet
    ShopSku:
      in: path
      name: shopSku
      required: true
      schema:
        type: string
      description: String shop sku of Product
    SellerSku:
      in: path
      name: sellerSku
      required: true
      schema:
        type: string
      description: String seller sku of Product
    SellerSkus:
      in: query
      name: sellerSkus[]
      required: true
      description: Array of string seller skus
      schema:
        type: array
        items:
          type: string
    ProductIds:
      in: query
      name: productIds[]
      required: false
      description: Array of int product ids
      schema:
        type: array
        items:
          type: integer
    ProductUuids:
      in: query
      name: productUuids[]
      required: false
      description: Array of string product uuids
      schema:
        type: array
        items:
          type: string
    PathWarehouseId:
      in: path
      name: warehouseId
      required: true
      schema:
        type: integer
      description: Numeric Id of Warehouse
    PathProductId:
      in: path
      name: productId
      required: true
      schema:
        type: integer
      description: Numeric Id of Product
    ProfileFieldId:
      in: path
      name: fieldId
      required: true
      schema:
        type: integer
      description: Numeric Id of configuration field
    PathOrderPackageId:
      required: true
      description: Numeric Package Id
      in: path
      name: packageId
      schema:
        type: integer
    PathOrderId:
      required: true
      description: Numeric Order Id
      in: path
      name: orderId
      schema:
        type: integer
    PathOrderItemId:
      required: true
      description: Numeric Order Item Id
      in: path
      name: orderItemId
      schema:
        type: integer
    PathOrderItemIds:
      required: true
      description: Array of numeric Order Item Ids
      in: path
      name: orderItemIds[]
      schema:
        type: array
        items:
          type: integer
    QueryOrderIds:
      required: false
      description: Array of numeric Order Ids
      in: query
      name: orderIds[]
      schema:
        type: array
        items:
          type: integer
    QueryIncludeVoucherDetails:
      name: includeVoucherDetails
      in: query
      description: >-
        Include voucher details in response (only for orders with voucher)
        default: false
      schema:
        type: boolean
    QueryOrderItemIds:
      required: false
      description: Array of numeric Order Item Ids
      in: query
      name: orderItemIds[]
      schema:
        type: array
        items:
          type: integer
    QueryLimit:
      name: limit
      in: query
      required: true
      schema:
        type: integer
        example: 100
    QueryOffset:
      name: offset
      in: query
      required: true
      schema:
        type: integer
        example: 0
    QueryShowFull:
      name: showFull
      in: query
      required: false
      schema:
        type: integer
        example: 0
      allowEmptyValue: true
      description: >
        When set to 0 only the mandatory attributes will be shown. If not set at
        all it defaults to 0, only the value of 1 will display all the
        attributes.
    QueryHideComments:
      name: hideComments
      in: query
      required: false
      schema:
        type: integer
        example: 1
      allowEmptyValue: true
      description: When set to 1 the comments about the attributes are not displayed.
    QueryBrandId:
      name: brandId
      in: query
      required: false
      schema:
        type: integer
      allowEmptyValue: true
      description: Search by Brand ID
    QueryGroupBrandId:
      name: brandId
      in: query
      required: true
      schema:
        type: integer
      allowEmptyValue: false
      description: Search by Brand ID
    QueryName:
      name: name
      in: query
      required: false
      schema:
        type: string
      description: Search by name
    PathCategoryId:
      in: path
      name: categoryId
      required: true
      schema:
        type: integer
      description: Numeric Id of Category
    PathBrandId:
      in: path
      name: brandId
      required: true
      schema:
        type: integer
      description: Numeric Id of Brand
    PathProductSetIds:
      name: productSetIds[]
      in: query
      description: List of ProductSet ids
      required: false
      schema:
        type: array
        items:
          type: integer
        example:
          - 3872
          - 549
      allowEmptyValue: false
    PathProductIds:
      name: productIds[]
      in: query
      description: List of Product ids
      required: false
      schema:
        type: array
        items:
          type: integer
        example:
          - 1234
          - 5678
      allowEmptyValue: false
    PathProductUuids:
      name: productUuids[]
      in: query
      description: List of Product UUIDs
      required: false
      schema:
        type: array
        items:
          type: string
          format: uuid
        example:
          - 550e8400-e29b-41d4-a716-446655440000
          - 550e8400-e29b-41d4-a716-446655440001
      allowEmptyValue: false
    PathProductName:
      name: productName
      in: query
      description: Name of the Product
      required: false
      schema:
        type: string
        example: Sample Product
      allowEmptyValue: false
    SearchQuery:
      in: query
      name: query
      required: true
      schema:
        type: string
      description: Search query
    SearchQueryNotRequired:
      in: query
      name: query
      required: false
      schema:
        type: string
      description: Search query
    ProductFilterStatus:
      in: query
      required: false
      name: status
      description: >
        Sections of product. 


        "all" returns all product sets without filtering.


        "active" will return product sets in active categories, with active
        brand, with at least one product  with stock, with price, synced with
        shop system, with at least one not-deleted image, with at least one
        product with "active" status.


        "inactive-all" - will return product sets where all products has status
        "inactive".


        "deleted-all" - will return product sets where all products has status
        "deleted".


        "image-missing" - will return product sets without images or with all
        images deleted.


        "pending" - return product sets with at least one active product with QC
        status "pending" (product sets which are waiting to be Quality
        Controlled).


        "rejected" - return product sets with at least one active product with
        QC status "rejected" (product sets which are rejected during Quality
        Controlled). You need to update products and fix issues found during
        Quality Control.


        "disapproved" - same as "rejected" but without Not-Authorized products.


        "sold-out" - will return product sets with 0 stock (product sets with
        all products have 0 stock).


        "not-authorized" - will return not authorized product sets.
      schema:
        type: string
        enum:
          - all
          - active
          - inactive-all
          - deleted-all
          - image-missing
          - pending
          - rejected
          - disapproved
          - sold-out
          - not-authorized
    ProductFilterKeyword:
      in: query
      required: false
      name: keyword
      description: >
        Search by product name / product sku / seller sku / parent sku. The
        keyword might be a string or an array of strings.
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
    ProductFilterMultipleKeyword:
      in: query
      required: false
      name: keyword
      description: >
        Search by product name / product sku / seller sku / parent sku. You can
        either use it as a single

        parameter (?keyword=searchTerm) or multiple one
        (?keyword[]=searchTerm1&keyword[]=searchTerm2). You 

        can specify up to 5 keywords at once.
      schema:
        type: array
        items:
          type: string
    ProductFilterCreateDateStart:
      in: query
      required: false
      name: createDateStart
      description: >
        Filter by creation date of product set. It should be less than
        createDateEnd. Date should be given in Y-m-d

        format, for example 2021-01-20.
      schema:
        type: string
        format: date
        example: ''
    ProductFilterCreateDateEnd:
      in: query
      required: false
      name: createDateEnd
      description: >
        Filter by date of creation of product set. It should be greater than
        createDateStart. Date should be given in Y-m-d

        format, for example 2021-02-14.
      schema:
        type: string
        format: date
        example: ''
    ProductFilterUpdateDateStart:
      in: query
      required: false
      name: updateDateStart
      description: >
        Filter by update date of product set. It should be less than
        updateDateEnd. Date should be given in Y-m-d

        format, for example 2021-01-20.
      schema:
        type: string
        format: date
        example: ''
    ProductFilterUpdateDateEnd:
      in: query
      required: false
      name: updateDateEnd
      description: >
        Filter by update date of product set. It should be greater than
        updateDateStart. Date should be given in Y-m-d

        format, for example 2021-02-14.
      schema:
        type: string
        format: date
        example: ''
    ProductFilterBrand:
      in: query
      required: false
      name: brandIds[]
      description: Search by brand IDs
      schema:
        type: array
        items:
          type: integer
    ProductFilterTag:
      in: query
      required: false
      name: tags[]
      description: Search by tag ids or names
      schema:
        type: array
        items:
          type: string
    ProductFilterVisibility:
      in: query
      required: false
      name: visibility
      description: Search by visibility status
      schema:
        type: string
        enum:
          - Syncing
    ProductFilterInStock:
      in: query
      required: false
      name: inStock
      description: If it sets true, the API will only return products that have stock.
      schema:
        type: boolean
    ProductFilterReserved:
      in: query
      required: false
      name: reserved
      description: If it sets true, the API will only return products that have reserve.
      schema:
        type: boolean
    ProductFilterOnlyWithSrcId:
      in: query
      required: false
      name: onlyWithSrcId
      schema:
        type: boolean
    ProductFilterAttributeSetId:
      in: query
      required: false
      name: attributeSetId
      description: >
        Search products by AttributeSet ID. AttributeSet defines which attribute
        certain category will have. For example:

        there can be AttributeSet "Shoes" with attributes like "sole material",
        "heel height" and there can be AttributeSet

        "Jewerly" with another attributes like "percentage of gold". 

        Each category in SellerCenter belongs to one AttributeSet, therefore
        AttributeSet defines which attribute each 

        category has.
      schema:
        type: integer
        example: 321
    ProductFilterProductSetUuids:
      in: query
      required: false
      name: productSetUuids[]
      description: Search by product set uuids
      schema:
        type: array
        items:
          type: string
    ProductFilterProductSetIds:
      name: productSetIds[]
      in: query
      description: List of ProductSet ids
      required: true
      schema:
        type: array
        items:
          type: integer
        example:
          - 1
          - 32000
    ProductSetFilterProductSetIds:
      name: productSetIds[]
      in: query
      description: List of ProductSet IDs
      required: false
      schema:
        type: array
        items:
          type: integer
    OnlyActive:
      name: onlyActive
      in: query
      required: false
      schema:
        type: string
      allowEmptyValue: true
      description: Whether to return all active items. If not set at all - means false.
    ProductFilterCategories:
      in: query
      required: false
      name: categoryIds[]
      description: Search by category ids
      schema:
        type: array
        items:
          type: integer
    AttributeSetId:
      name: attributeSetId
      in: query
      required: false
      schema:
        type: integer
      allowEmptyValue: true
    PathAttributeSetId:
      in: path
      name: attributeSetId
      required: true
      schema:
        type: integer
      allowEmptyValue: false
      description: Numeric Id of Attribute Set
    ProductFilterParentSku:
      in: query
      required: false
      name: parentSku
      description: Search by parent sku
      schema:
        type: string
    ProductFilterOnlyWithTags:
      in: query
      required: false
      name: onlyWithTags
      description: If it sets true, the API will only return products that have tags.
      schema:
        type: boolean
    ProductFilterGroup:
      in: query
      required: false
      name: group
      description: Search by product group
      schema:
        type: string
    QueryProductStatus:
      in: query
      required: false
      name: status
      description: Product status
      schema:
        type: string
        enum:
          - active
          - inactive
          - deleted
    ProductOrderBy:
      name: orderBy
      in: query
      required: false
      description: >
        When "orderBy" is set, you should also provide "orderDirection"
        parameter.
      schema:
        type: string
        example: createdAt
        enum:
          - createdAt
    ProductOrderDirection:
      name: orderDirection
      in: query
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
        example: ASC
    PathManifestId:
      required: true
      description: Numeric Manifest Id
      in: path
      name: manifestId
      schema:
        type: integer
    ManifestType:
      name: type
      in: query
      schema:
        type: string
        enum:
          - forward
          - return
    ManifestStatus:
      name: status
      in: query
      schema:
        type: string
        enum:
          - forward_ready_to_ship
          - forward_received
          - forward_shipped
          - return_ready_to_ship
          - return_received
          - return_shipped
    ManifestCodes:
      name: manifestCodes[]
      in: query
      description: Search by manifest codes.
      schema:
        type: array
        items:
          type: string
          example: my-4231
          description: Manifest code
    ManifestCode:
      name: manifestCode
      in: query
      description: Search by manifest code.
      schema:
        type: string
    ManifestDateStart:
      in: query
      name: dateStart
      description: Search by manifest creation date time.
      schema:
        type: string
        anyOf:
          - format: date-time
        example: '2022-12-11T08:46:12.123456Z'
    ManifestDateEnd:
      in: query
      name: dateEnd
      description: Search by manifest creation date time. Time information is optional.
      schema:
        type: string
        anyOf:
          - format: date-time
        example: '2022-12-11T21:46:12.123456Z'
    ManifestOrderNumbers:
      in: query
      name: orderNumbers[]
      description: Search by order number
      schema:
        type: array
        items:
          type: string
    ManifestSort:
      name: sort
      in: query
      schema:
        type: string
        example: manifestCode
        enum:
          - createdAt
          - manifestCode
    ManifestSortDir:
      in: query
      name: sortDir
      description: Sorting direction
      schema:
        type: string
        enum:
          - asc
          - desc
    SearchBrandsByName:
      in: query
      required: false
      name: name
      description: Search brands by name (optional)
      schema:
        type: string
    ExportItemsFilterExportActions:
      in: query
      required: true
      name: exportActions[]
      description: specifies list of export actions
      schema:
        type: array
        items:
          type: string
          enum:
            - ProductImage
            - Product
            - SellerPriceTemplate
            - SellerStatusTemplate
            - ProductStock
            - Order
            - OrderToShip
            - OrderImportTemplate
            - ProductCreationTemplate
            - FeedErrorReport
            - FeedGeneralErrorReport
            - OrderDocumentsAsPdf
            - ManifestDocumentsAsPdf
            - OrderInvoiceAsPdf
            - Manifest
            - TaggedOrderItems
            - TaggedProducts
            - OrderReturn
            - CategoryMappings
            - User
          example:
            - Product
    ExportItemsFilterOrderBy:
      name: orderBy
      in: query
      required: false
      schema:
        type: string
        example: id_export_item
        enum:
          - id_export_item
          - created_at
          - updated_at
    ExportItemsFilterOrderDirection:
      name: orderDirection
      in: query
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
        example: ASC
    ExportItemsFilterSearchKeyword:
      in: query
      required: false
      name: keyword
      description: Search by "export content" (by name of the export)
      schema:
        type: string
        example: Product - Fashion
    ExportItemsFilterLimit:
      name: limit
      in: query
      required: true
      schema:
        type: integer
        example: 10
        minimum: 1
        maximum: 20
    ExportItemsFilterOffset:
      name: offset
      in: query
      required: true
      schema:
        type: integer
        example: 0
    ExportItemId:
      in: path
      name: exportItemId
      required: true
      schema:
        type: integer
      description: Numeric Id of Export Item
    OrderStatusChangeType:
      in: query
      required: true
      name: type
      description: type of a template to generate
      schema:
        type: string
        enum:
          - order-items
          - order-items-by-package
          - order-numbers
          - order-items-status
        example:
          - order-items-status
    OrderStatusChangeStatus:
      in: query
      required: true
      name: status
      description: order item status to take into account for template generation
      schema:
        type: string
        enum:
          - pending
          - shipped
          - ready-to-ship
        example:
          - ready-to-ship
    PathAttributeId:
      in: path
      name: attributeId
      required: true
      schema:
        type: integer
      description: Numeric Id of Attribute
    QueryAttributesIds:
      in: query
      required: false
      name: attributeIds[]
      description: Search by attribute ids
      schema:
        type: array
        items:
          type: integer
    QueryAttributeSetIds:
      in: query
      required: false
      name: attributeSetIds[]
      description: Search by attribute set ids
      schema:
        type: array
        items:
          type: integer
    OauthAppSort:
      in: query
      required: false
      name: sort
      description: The field to sort the results by.
      schema:
        type: string
        enum:
          - createdAt
          - updatedAt
          - name
    BrandSort:
      in: query
      required: false
      name: sort
      description: The field to sort the results by.
      schema:
        type: string
        enum:
          - createdAt
          - updatedAt
          - name
    QuerySortDir:
      in: query
      required: false
      name: sortDir
      description: >-
        Define which if you like to sort ascending or descending. Default is
        ascending
      example: asc
      schema:
        type: string
        enum:
          - asc
          - desc
    QueryOnlyVisible:
      name: onlyVisible
      in: query
      required: false
      schema:
        type: boolean
      allowEmptyValue: true
      description: >-
        Whether to return visible items only. If not set at all it will default
        to true.
    PeriodFrom:
      in: query
      name: from
      required: false
      schema:
        type: string
        format: date-time
        example: '2020-01-01'
      description: Filter Seller Rating period from
    PeriodTo:
      in: query
      name: to
      required: false
      schema:
        type: string
        format: date-time
        example: '2023-01-01'
      description: Filter Seller Rating period to
    FeedsFilterLimit:
      name: limit
      in: query
      required: true
      schema:
        type: integer
        example: 10
        minimum: 1
        maximum: 20
    FeedsFilterOffset:
      name: offset
      in: query
      required: true
      schema:
        type: integer
        example: 0
    OrderFilterStatus:
      in: query
      required: false
      name: section
      description: >
        Search section

        - status_shipped - returns orders with order items status `shipped`

        - status_delivered - returns orders with order items status `delivered`

        - status_failed - returns orders with order items status `failed`

        - status_canceled - returns orders with order items status `canceled`

        - status_pending - returns orders with order items status `pending`

        - status_ready_to_ship - returns orders with order items status
        `ready_to_ship`

        - status_payment_pending - returns orders with order items status
        `payment_pending`

        - status_returned - returns orders with order items status `returned`

        - status_return_shipped_by_customer - returns orders with order items
        status `return_shipped_by_customer`

        - status_return_rejected - returns orders with order items status
        `return_rejected`

        - status_return_waiting_for_approval - returns orders with order items
        status `return_waiting_for_approval`

        - status_return_delivered - returns orders with order items status
        `return_delivered`

        - group_economy - returns orders with `pending` status and `economy`
        shipment provider type

        - group_express - returns orders with `pending` status and `express`
        shipment provider type

        - group_standard - returns orders with `pending` status and `standard`
        shipment provider type

        - group_digital - returns orders with `pending` status and `digital`
        shipment provider type

        - group_sameday - returns orders with `pending` status and `sameday`
        shipment provider type

        - group_air - returns orders with `pending` status and `air` shipment
        provider type

        - group_surface - returns orders with `pending` status and `surface`
        shipment provider type

        - group_missing_external_invoice_access_key - returns orders with
        `pending` or `canceled` status and invoice key is `empty`

        - group_ready_to_ship_manifested - returns orders with `ready to ship`
        status and manifest is `exists`

        - group_ready_to_ship_nonmanifested - returns orders with `ready to
        ship` status and manifest is `not exists`
      schema:
        type: string
        enum:
          - status_shipped
          - status_delivered
          - status_failed
          - status_canceled
          - status_pending
          - status_ready_to_ship
          - status_payment_pending
          - status_returned
          - status_return_shipped_by_customer
          - status_return_rejected
          - status_return_waiting_for_approval
          - status_return_delivered
          - group_economy
          - group_express
          - group_standard
          - group_digital
          - group_sameday
          - group_air
          - group_surface
          - group_missing_external_invoice_access_key
          - group_kpi_rejection_rate
          - group_kpi_return_rate
          - group_ready_to_ship_manifested
          - group_ready_to_ship_nonmanifested
    OrderFilterOrderNumbers:
      in: query
      required: false
      name: orderNumbers[]
      description: Search by order number
      schema:
        type: array
        items:
          type: string
    OrderFilterPacked:
      in: query
      required: false
      name: packed
      description: |
        Search by packed status
        - fully_packed - all of order items packed
        - partially_packed - part of order items packed
        - not_packed - no order items packed
      schema:
        type: string
        enum:
          - fully_packed
          - partially_packed
          - not_packed
    OrderFilterCustomers:
      in: query
      required: false
      name: customers[]
      description: Search by customer name (first name and last name)
      example:
        - John
        - Malkovic
      schema:
        type: array
        items:
          type: string
    OrderFilterDateEnd:
      in: query
      required: false
      name: dateEnd
      description: >-
        Search by order creation date or date time. Time information is
        optional. By default end time will be at 23:59:59.
      schema:
        type: string
        anyOf:
          - format: date
          - format: date-time
        example: '2022-12-11T21:46:12.123456Z'
    OrderFilterPrintedStatus:
      in: query
      required: false
      name: printedStatus
      description: Search by printed status
      schema:
        type: boolean
    OrderFilterDateStart:
      in: query
      required: false
      name: dateStart
      description: >-
        Search by order creation or date time. Time information is optional. By
        default start time will be at 00:00:00.
      schema:
        type: string
        anyOf:
          - format: date
          - format: date-time
        example: '2022-12-11T08:46:12.123456Z'
    OrderFilterTags:
      in: query
      required: false
      name: tags[]
      description: Search by tag's numeric id.
      schema:
        type: array
        items:
          type: string
    OrderFilterProductSku:
      in: query
      required: false
      name: productSku[]
      description: Search by product sku
      schema:
        type: array
        items:
          type: string
    OrderFilterDelivery:
      in: query
      required: false
      name: delivery
      description: >
        Search by delivery:

        - shippedUnder24h - Orders with the status of the Order Item was set to
        shipped less or equal than 24 hours ago.

        - notShippedUnder24h - Orders with the status of the Order Item was set
        to shipped more than 24 hours ago.

        - notShippedUnder24BusinessHours - Orders with the status of the Order
        Item was set to shipped more than 24 business hours ago.
      schema:
        type: string
        enum:
          - shippedUnder24h
          - notShippedUnder24h
          - notShippedUnder24BusinessHours
    OrderFilterShipmentType:
      in: query
      required: false
      name: shipmentType
      description: |
        Search by shipment type
      schema:
        type: string
        enum:
          - warehouse
          - dropshipping
          - crossdocking
    OrderFilterOutlet:
      in: query
      required: false
      name: outlet
      description: Search orders from outlet only
      schema:
        type: boolean
    OrderFilterPaymentMethods:
      in: query
      required: false
      name: paymentMethods[]
      description: Search by payment methods
      schema:
        type: array
        items:
          type: string
    OrderFilterInvoiceRequired:
      in: query
      required: false
      name: invoiceRequired
      description: >-
        If this field is set to "1" then only orders for which an invoice is
        required will be returned
      schema:
        type: boolean
    OrderFilterCancellationReasons:
      in: query
      required: false
      name: cancelationReasons[]
      description: Search by cancelation reasons
      schema:
        type: array
        items:
          type: string
    OrderFilterFulfillmentType:
      in: query
      required: false
      name: fulfilmentType[]
      description: |
        Search by fulfilment type
        - merchant - means the type of shipment from the seller's warehouse
        - venture - means the type of shipment from the venture's warehouse
      schema:
        type: array
        items:
          type: string
          enum:
            - merchant
            - venture
    OrderFilterOrderSources:
      in: query
      required: false
      name: orderSources[]
      description: Search by order sources
      schema:
        type: array
        items:
          type: string
    OrderFilterSellerNames:
      in: query
      required: false
      name: sellerNames[]
      description: Search by seller name
      schema:
        type: array
        items:
          type: string
    OrderFilterShipmentProviders:
      in: query
      required: false
      name: shipmentProviders[]
      description: Search by shipment provider id
      example:
        - 8532
      schema:
        type: array
        items:
          type: string
    OrderFilterUpdateDateStart:
      in: query
      required: false
      name: updateDateStart
      description: >-
        Search by order item updated date or date time. Will return orders with
        at least one order item updated within the selected range. By default,
        the start time will be set to 00:00:00.
      schema:
        type: string
        anyOf:
          - format: date
          - format: date-time
        example: '2022-12-11T21:46:12.123456Z'
    OrderFilterUpdateDateEnd:
      in: query
      required: false
      name: updateDateEnd
      description: >-
        Search by order item updated date or date time. Will return orders with
        at least one order item updated within the selected range. By default,
        the end time will be set to 23:59:59.
      schema:
        type: string
        anyOf:
          - format: date
          - format: date-time
        example: '2022-12-11T21:46:12.123456Z'
    OrderFilterWarehouses:
      in: query
      required: false
      name: warehouses[]
      description: Search by warehouse name
      schema:
        type: array
        items:
          type: string
    OrderFilterFormat:
      in: query
      required: false
      name: format
      description: Requested format
      schema:
        type: string
        default: csv
        enum:
          - csv
          - xlsx
    OrderSort:
      in: query
      required: false
      name: sort
      description: The field to sort the results by.
      schema:
        type: string
        enum:
          - createdAt
          - updatedAt
    OrderSortDir:
      in: query
      required: false
      name: sortDir
      description: >-
        Define which if you like to sort ascending or descending. Default is
        ascending
      example: asc
      schema:
        type: string
        enum:
          - asc
          - desc
    Uuid:
      in: path
      name: uuid
      required: true
      schema:
        type: string
        pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
        minLength: 36
        maxLength: 36
    CategoryIds:
      in: query
      name: ids[]
      description: Search by category ids
      schema:
        type: array
        items:
          type: integer
    CategoryUuids:
      in: query
      name: uuids[]
      description: Search by category uuids
      schema:
        type: array
        items:
          type: string
    IncludeInaccessible:
      name: includeInaccessible
      in: query
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
    RestrictedOnly:
      name: restrictedOnly
      in: query
      required: false
      schema:
        type: boolean
        enum:
          - true
          - false
    UserId:
      in: path
      name: userId
      required: true
      schema:
        type: integer
      description: Numeric Id of User
    QueryWebhookIds:
      in: query
      name: publicIds[]
      description: Search by webhook ids
      schema:
        type: array
        items:
          type: string
          description: Identifier of a Webhook as assigned by SellerCenter.
          example: 3f0c27aa-ca28-4526-88f0-a13e6c9a007b
    BrandIds:
      name: brandIds[]
      in: query
      required: false
      schema:
        type: array
        items:
          type: integer
      allowEmptyValue: false
    BrandUuids:
      name: brandUuids[]
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
      allowEmptyValue: false
    CategoriesSearchQuery:
      in: query
      name: query
      required: false
      schema:
        type: string
      description: Search query
    RoleId:
      in: path
      name: roleId
      required: true
      schema:
        type: integer
      description: Numeric Id of Role
    TemplateImportType:
      in: query
      name: type
      required: false
      schema:
        type: string
        default: full
        enum:
          - full
          - light
      description: Type of template - full or light version
    ResourceId:
      in: path
      name: resourceId
      required: true
      schema:
        type: integer
      description: Numeric Id of Resource
    SellerIdInPath:
      in: path
      name: sellerId
      required: true
      schema:
        type: integer
      description: Numeric Id of Seller
    SellerIdInQuery:
      in: query
      name: sellerId
      required: false
      schema:
        type: integer
      description: Numeric Id of Seller
    Sku:
      in: query
      name: sku
      required: false
      schema:
        type: string
      description: Sku of product
    Name:
      in: query
      name: name
      required: false
      schema:
        type: string
      description: Name of product
    ProductSellerSku:
      in: query
      name: sellerSku
      required: false
      schema:
        type: string
      description: String seller sku of Product
    SellerUuid:
      in: query
      name: sellerUuid
      required: false
      schema:
        type: string
      description: String uuid of Seller
    Ids:
      in: query
      name: ids[]
      description: Search by ids
      schema:
        type: array
        items:
          type: integer
    Uuids:
      in: query
      name: uuids[]
      description: Search by uuids
      schema:
        type: array
        items:
          type: string
    ExcludeAdmins:
      in: query
      name: excludeAdmins
      required: false
      schema:
        type: boolean
      description: >
        filter to exclude users with the role not in group "seller". 

        When set to "true" only users with the role in group "seller" will be
        returned.
    ExcludeInactive:
      in: query
      name: excludeInactive
      required: false
      schema:
        type: boolean
      description: filter to exclude inactive users
    ImageExportBrandIds:
      in: query
      required: false
      name: brandIds[]
      description: Search by brand IDs
      schema:
        type: array
        items:
          type: integer
    ImageExportCreateDateEnd:
      in: query
      required: false
      name: createDateEnd
      description: >
        Filter by date of creation of product set. It should be greater than
        createDateStart. Date should be given in Y-m-d

        format, for example 2021-02-14 21:33:45.
      schema:
        type: string
        format: date
        example: ''
    ImageExportCreateDateStart:
      in: query
      required: false
      name: createDateStart
      description: >
        Filter by creation date of product set. It should be less than
        createDateEnd. Date should be given in Y-m-d

        format, for example 2021-01-20 21:33:45.
      schema:
        type: string
        format: date
        example: ''
    ImageExportKeyword:
      in: query
      required: false
      name: keyword
      description: >
        Search by product name / product sku / seller sku / parent sku. You can
        either use it as a single

        parameter (?keyword=searchTerm) or multiple one
        (?keyword[]=searchTerm1&keyword[]=searchTerm2)
      schema:
        oneOf:
          - type: string
            example: T_shirt
          - type: array
            items:
              type: string
              example: T_shirt
    ImageExportOnlyWithMissingImage:
      in: query
      required: false
      name: onlyWithMissingImage
      schema:
        type: boolean
        example: false
      description: >-
        Whether to return only images from products with missing images. If not
        set at all it will default to false.
    ImageExportOrderDirection:
      name: orderDirection
      in: query
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
        example: ASC
    ImageExportTags:
      in: query
      required: false
      name: tags[]
      description: Search by tag ids or names
      schema:
        type: array
        items:
          type: string
    ImageExportUpdateDateEnd:
      in: query
      required: false
      name: updateDateEnd
      description: >
        Filter by update date of product set. It should be greater than
        updateDateStart. Date should be given in Y-m-d

        format, for example 2021-02-14 21:33:45.
      schema:
        type: string
        format: date
        example: ''
    ImageExportUpdateDateStart:
      in: query
      required: false
      name: updateDateStart
      description: >
        Filter by update date of product set. It should be less than
        updateDateEnd. Date should be given in Y-m-d

        format, for example 2021-01-20 21:33:45.
      schema:
        type: string
        format: date
        example: ''
    TemplateFormat:
      in: query
      required: false
      name: format
      description: Requested format.
      schema:
        type: string
        default: csv
        enum:
          - csv
          - xlsx
    ParentSku:
      in: path
      name: parentSku
      required: true
      schema:
        type: string
      description: ParentSku of ProductSet
    ConfigSku:
      in: path
      name: configSku
      required: true
      schema:
        type: string
      description: >
        String ConfigSku of ProductSet. Please, refer to description of endpoint
        to get more information about

        what this parameter is. 
    CallbackId:
      in: path
      name: callbackId
      required: true
      schema:
        type: integer
      description: Numeric Id of Webhook Callback
    CallbackUrl:
      name: callbackUrl
      in: path
      required: true
      schema:
        type: string
      description: The Webhook callback url (encoded)
    CallbackSort:
      name: sort
      in: query
      schema:
        type: string
        example: callbackUrl
        enum:
          - callbackUrl
          - lastCall
    SortDir:
      in: query
      required: false
      name: sortDir
      description: >-
        Define which if you like to sort ascending or descending. Default is
        ascending
      example: asc
      schema:
        type: string
        enum:
          - asc
          - desc
  schemas:
    ExportSalesReport:
      type: object
      required:
        - locale
        - currency
      properties:
        locale:
          type: string
          example: en_US
        statementType:
          type: string
          default: marketplace
          description: The statementType of the account statement.
          enum:
            - marketplace
            - consignment
        currency:
          type: string
          example: EUR
          description: >-
            The currency of the account statement. This filter will be ignored
            when a search with a statementId (> 0) is getting executed
        statementId:
          type: number
          default: 0
          description: >-
            The identifier of the account statement. The value 0 should be used
            to get the current open statement (or not provided parameter). This
            filter will be ignored when a search with a statementId (> 0) is
            getting executed
    ExportReportTransaction:
      type: object
      required:
        - locale
        - currency
        - transactionTypeIds
      properties:
        locale:
          type: string
          example: en_US
        transactionTypeIds:
          type: array
          description: >-
            Ids of all used transaction types of a selected account statement.
            Transaction Type Ids are mandatory if all transactions of an account
            statement should be exported or a sub area of the actually statement
            like (specific section or the sum of a section).
          items:
            type: integer
            example: 2
        statementType:
          type: string
          default: marketplace
          description: >-
            The statementType of the account statement. This filter will be
            ignored when a search with a statementId (> 0) is getting executed
          enum:
            - marketplace
            - consignment
        currency:
          type: string
          example: EUR
          description: >-
            The currency of the account statement. This filter will be ignored
            when a search with a statementId (> 0) is getting executed
        statementId:
          type: number
          default: 0
          description: >-
            The identifier of the account statement. The value 0 should be used
            to get the current open statement (or not provided parameter).
        label:
          type: string
          example: Sales Revenue 15 Mar 2024 - 21 Mar 2024
          description: Defines the title of the export file name.
    ExportOrderItemTransaction:
      type: object
      required:
        - locale
        - currency
      properties:
        currency:
          type: string
          example: EUR
          description: The currency which an order item belongs to.
        isHybrid:
          type: boolean
          description: >-
            Filter by the transaction's association with order item which is
            hybrid.
        isOutlet:
          type: boolean
          description: >-
            Filter by the transaction's association with order item which is
            outlet.
        payoutStatus:
          type: string
          description: >-
            Filter by the transaction's association with account statement is
            paid.
          enum:
            - paid
            - unpaid
            - partiallyPaid
        status:
          type: array
          description: String of all possible order item statuses
          items:
            type: string
            enum:
              - pending
              - shipped
              - canceled
              - returned
              - failed
              - delivered
              - ready_to_ship
              - return_shipped_by_customer
              - return_waiting_for_approval
              - return_rejected
              - return_delivered
              - payment_pending
        locale:
          type: string
          example: en_US
        startDate:
          description: >-
            Filter by the transaction's association with a order creation date
            that is greater than or equal to the provided value.
          type: string
          default: null
          example: '2024-01-01T22:00:00.000Z'
        endDate:
          description: >-
            Filter by the transaction's association with a order creation date
            that is lower than or equal to the provided value.
          type: string
          default: null
          example: '2024-01-01T22:00:00.000Z'
        orderNumbers:
          type: array
          description: Search by order number
          items:
            type: string
        products:
          type: array
          description: Search by a product name, sku or seller sku
          items:
            type: string
        shipmentTypes:
          type: array
          description: Shipment type of an order item.
          default: null
          items:
            type: string
          enum:
            - warehouse
            - dropshipping
            - cross-docking
        statementType:
          type: string
          description: The statementType of the account statement.
          default: marketplace
          enum:
            - marketplace
            - consignment
        statementId:
          type: number
          description: >-
            The identifier of the account statement. The value 0 is representing
            the current statement.
          example: 4
    ExportUnifiedTransactions:
      type: object
      required:
        - locale
        - currency
      properties:
        currency:
          type: string
          example: EUR
          description: The currency which an order item belongs to.
        isHybrid:
          type: boolean
          description: >-
            Filter by the transaction's association with order item which is
            hybrid.
          default: false
        isOutlet:
          type: boolean
          description: >-
            Filter by the transaction's association with order item which is
            outlet.
          default: false
        payoutStatus:
          type: string
          description: >-
            Filter by the transaction's association with account statement is
            paid.
          default: unpaid
          enum:
            - paid
            - unpaid
            - partiallyPaid
        locale:
          type: string
          example: en_US
        startDate:
          description: >-
            Filter by the transaction's association with a order creation date
            that is greater than or equal to the provided value.
          type: string
          default: null
          example: '2024-01-01T22:00:00.000Z'
        endDate:
          description: >-
            Filter by the transaction's association with a order creation date
            that is lower than or equal to the provided value.
          type: string
          default: null
          example: '2024-01-01T22:00:00.000Z'
        orderNumbers:
          type: array
          description: Search by order number
          items:
            type: string
        transactionNumbers:
          type: array
          description: Search by concrete transaction numbers
          items:
            type: string
        transactionTypeIds:
          type: array
          description: Search by concrete transaction types
          items:
            type: number
        products:
          type: array
          description: Search by a product name, sku or seller sku
          items:
            type: string
        statementType:
          type: string
          description: The statementType of the account statement.
          default: marketplace
          enum:
            - marketplace
            - consignment
        statementId:
          type: number
          description: >-
            The identifier of the account statement. The value 0 is representing
            the current statement.
          example: 4
    InvoiceTaxDocument:
      type: object
      required:
        - locale
        - statementId
        - currency
      properties:
        locale:
          type: string
          example: en_US
        statementType:
          type: string
          default: marketplace
          description: The statementType of the account statement.
          enum:
            - marketplace
            - consignment
        currency:
          type: string
          example: EUR
          description: >-
            The currency of the account statement. This filter will be ignored
            when a search with a statementId (> 0) is getting executed
        statementId:
          type: number
          default: 0
          description: >-
            The identifier of the account statement. The value 0 should be used
            to get the current open statement. This filter will be ignored when
            a search with a statementId (> 0) is getting executed
        sellerId:
          type: integer
          example: 123456
          description: The identifier of the seller.
    OauthApp:
      type: object
      properties:
        uuid:
          type: string
          description: App UUID
          example: 3f0c27aa-ca28-4526-88f0-a13e6c9a007b
        name:
          type: string
          description: App name
          example: cb56deed3d91799f86e5
        appId:
          type: string
          description: App ID
          example: cb56deed3d91799f86e5
        identifier:
          type: integer
          description: Increment ID in database.
        createdAt:
          type: string
          nullable: false
          example: '2022-09-01 16:35:42'
        updatedAt:
          type: string
          nullable: false
          example: '2022-09-01 16:35:42'
        userId:
          type: integer
          description: Identifier of a user.
          example: 1024
    AclResource:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: integer
          readOnly: true
        label:
          type: integer
          readOnly: true
        description:
          type: integer
          readOnly: true
        maintenanceOnly:
          type: boolean
          default: false
          readOnly: true
        tags:
          type: array
          items:
            type: string
          readOnly: true
    AclRoleResource:
      type: object
      properties:
        roleId:
          type: integer
          readOnly: true
        resourceId:
          type: integer
          readOnly: true
    AclRole:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        displayName:
          type: string
          readOnly: true
        groupName:
          type: string
          readOnly: true
        editableByRoles:
          type: array
          items:
            type: integer
          readOnly: true
        description:
          type: string
          readOnly: true
    AttributeSet:
      type: object
      properties:
        id:
          description: Numeric unique identifier
          type: number
          example: 5642
        name:
          type: string
          example: beauty
        label:
          type: string
          example: Beauty
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Brand:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 111555
        srcId:
          type: string
          nullable: true
          example: ADI5341
          description: Internal id
        uuid:
          type: string
          nullable: true
          example: 1af9fe46-77d2-4ab2-8b4a-8c7eeac8bbc9
        name:
          type: string
          nullable: false
          example: Adidas
        status:
          type: string
          nullable: false
          enum:
            - active
            - inactive
            - deleted
        isActive:
          type: boolean
          nullable: false
          example: true
        isApproved:
          type: boolean
          nullable: false
          example: true
        isRestricted:
          type: boolean
          nullable: false
          example: false
        countries:
          type: string
          nullable: false
          example: RU,KZ
        createdAt:
          type: string
          format: date-time
          nullable: false
          example: '2021-09-22T23:21:42+02:00'
        updatedAt:
          type: string
          format: date-time
          nullable: false
          example: '2021-09-22T23:21:42+02:00'
    ContentScore:
      type: object
      properties:
        status:
          type: string
          example: ok
          description: Always equals to "ok" when calculation completed successfully.
        score:
          type: number
          format: float
          example: 50
          minimum: 0.01
          maximum: 100
          description: >
            Percentage of the score. For example "60.00" means that from 100%
            current data scores to

            only 60 percents. Depending on category configuration there can be
            threshold and products

            with score below that threshold will be auto rejected during product
            QC.
        score_report:
          type: object
          properties:
            points:
              type: number
              description: >
                Number of points product set has now. Different rules can have
                different scoring, for example

                having long enough title is counted for 10 points and length of
                description for 90. So

                when description is not filled at all it can be 0, when it
                filled by 50% of required it

                will be 45.
            maxPoints:
              type: number
              description: >
                Like described in previous property for title it will 10 and for
                description - 90.
            isSuccessful:
              type: boolean
              description: |
                Whether or not rule is considered to be fulfulled.
            productValue:
              type: string
              description: >
                Current product value. Can be useful when you want to get score
                for existing product set, in this

                case you can receive here, for example, 9 for score for title
                length which means that current

                length of title is 9 characters. When you send product data you
                already know this value.
            metric:
              type: string
              description: |
                Human readable and translated metric, can be displayed in UI
              example: Description words
            recommendation:
              type: string
              example: more or equal than 3
            ruleGroup:
              type: string
              enum:
                - AttributeExists
                - CategoryLevel
                - DescriptionBoldPercent
                - DescriptionBullets
                - DescriptionWords
                - TitleChars
                - Barcode
            ruleParameters:
              type: object
              description: >
                Contains configuration data for the rule.



                Rule of group Barcode does not have any configuration.



                Rule of groups CategoryLevel, DescriptionBullets,
                DescriptionWords has property `min` in this

                object.



                Rule of group AttributeExists has property `attributeId` in this
                object.



                Rule of groups DescriptionBoldPercent and TitleChars has
                properties `min` and `max` in this object.
    CalculateContentScore:
      type: object
      required:
        - categoryId
      properties:
        productSetId:
          type: integer
        categoryId:
          type: integer
        name:
          type: string
        description:
          type: string
        shortDescription:
          description: >
            Value of attribute with **name** "short_description" or "highlights"
            (if any). This is legacy parameter and rules

            relying on this parameter are in general not in use.
          type: string
        attributeSetId:
          description: >
            Previously when product changed category initial attribute set was
            kept (for example product was created in 

            category "T-Shirts" with one attribute set, but then moved to
            category "Shoes" which has another attribute set). 

            This parameter was used, among other, to calculate content score.
            Currently this parameter is not used in 

            content score calculation. AttributeSetId is now taken from current
            category. 


            This parameter is deprecated and will be removed in future versions
            of this endpoint.
          deprecated: true
          type: string
        attributes:
          description: >
            Array with attribute IDs as key plus value of attributes. Please,
            see description of endpoint for example value.

            Make sure to send all attributes, even with empty values.
          type: object
          additionalProperties: true
        variations:
          description: >
            Array of products (variations). Only one key is in each variation is
            expected - `ean`, as there is only

            one content score rule for products itself. Deleted variations do
            not participate in calculating content

            score, so when you are sending not yet saved data, then you should
            omit sending deleted variations.
          type: object
          additionalProperties: true
      example:
        productSetId: 364215
        categoryId: 524
        name: Name
        description: Here is the long description
        shortDescription: Short description
        attributeSetId: 12
        attributes:
          '2': value2
          '254': value1
        variations:
          - ean: 4059326403862
    BrandAttribute:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: supplier_type
        options:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 321
              name:
                type: string
                example: Direct
    BrandAttributeOption:
      type: object
      properties:
        id:
          type: integer
          example: 321
        name:
          type: string
          example: Direct
    ProductSetSample:
      type: object
      properties:
        primaryCategoryId:
          type: integer
          example: 2369
        __comment_primaryCategoryId:
          type: string
          example: Id of primary category in our database
        name:
          type: string
          example: Nikon Wide Angle Camera 10 MP black
        __comment_name:
          type: string
          example: Some descriptive product name
        brandId:
          type: integer
          example: 1
        __comment_brandId:
          type: string
          example: Id of a brand in our database
        price:
          type: number
          format: float
          example: 1.99
        __comment_price:
          type: string
          example: Some float value
        description:
          type: string
          example: >-
            It's been the king of football games for years now. FIFA Soccer 12
            delivers an authentic Match Day experience, faster and easier
            navigation, and over 500 officially licensed clubs.  FIFA Soccer 12
            brings to the pitch the game-changing new Player Impact En
        __comment_description:
          type: string
          example: Some descriptive text
        sellerSku:
          type: string
          example: XMPL1
        __comment_sellerSku:
          type: string
          example: Unique text field in our database
        variation:
          type: string
          example: M
        __comment_variation:
          type: string
          nullable: true
          example: >-
            Depending on input type - value from our database or a user-defined
            value. Rarely can be null
        attributes:
          type: object
          properties:
            '74':
              type: integer
              example: 307
            '131':
              type: string
              example: >-
                Best experience ever - super fast and easy navigation - better
                control
            __comment_74:
              type: string
              example: >-
                Id of attribute (PackageType) with id of attribute option (eg
                Parcel)
            __comment_131:
              type: string
              example: Id of attribute (ShortDescription) with some text area
    ProductSetRead:
      type: object
      properties:
        id:
          type: integer
          example: 7865
        uuid:
          type: string
          example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
        srcId:
          description: >-
            ID of image in Shop system. If empty means that image was not yet
            syncronized with Shop and is not visible to end customers.
          example: '94345'
          type: string
          nullable: true
        name:
          type: string
          example: Block Shell Jacket
        parentSku:
          type: string
          description: >-
            SKU of product, which acts as "main" one for ProductSet. Using this
            value you can add new products to ProductSet using XLS files. If
            feature of "parentSku" is disabled, then you should use SKU of first
            product in ProductSet when you work with XLS import files.
          example: NHGB93523-12
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
          description: >-
            Description which will be visible by end customers. Depending on
            settings of your seller and general configuration, there could be
            limit of minimum and maximum length of the description. Also,
            depending on configuration, description should be plain text or may
            contain HTML markup.
          example: >-
            Experience the ultimate expression of functionality at BrandName
            with the Women's Block Shell Jacket. Our model is wearing size *.
            She usually wears a size 8 and is 177cm tall.
        brandId:
          description: >-
            Please, note that not every brand can be used without prior aproval.
            Also, there are some brand-specific limitation for variations (for
            example, for brand A it is possible to use only sizes 34, 35, 36,
            37, 38, 39, 40, but size 35.5 or 33 will lead to validation error).
          type: integer
          example: 78
        primaryCategoryId:
          description: >-
            Please, note that there could limitation for certain sellers in
            which categories seller allowed to create ProductSets. Also, in
            cource of time categories can be marked as inactive (for example
            when category A is splitted to categories B and C).
          type: integer
          example: 309
        attributeSetId:
          description: >-
            Different categories has different AttributeSets. It means that for
            Shoes there is one set of attributes applied and for Hats another
            one. AttributeSet is defined by primary category of product set. In
            very rare cases attribute set of category can be changed to another
            one. In this case in order to successfully save ProductSet you will
            need to pass all required attributes for new AttributeSet. This
            value represent AttributeSet which was set for primary category of
            ProductSet during last save.
          type: integer
          example: 2
        sellerId:
          type: integer
          example: 5623
        categories:
          description: >-
            ProductSet can be listed in multiple additional categories. There is
            a seller-specific limit regarding maximum count of additional
            categories
          type: array
          example:
            - 421
            - 567
          items:
            type: integer
        attributes:
          type: object
          description: >-
            Array of attributes' values. Key is attribute ID and value depends
            on type of attribute. It can be one of: string (for "free text
            attributes" like "Warranty duration"), integer (for attributes with
            list of options, for example "Material" can have some set of fixed
            options), array of integers (for attributes with multiple choise of
            predefined options), null (when you didn't provide value for
            optional attribute), array of strings for attributes which allow
            multiple values with free text.
          example:
            '421': string value
            '533':
              - 4
              - 5
            '567': 123
            '721':
              - string1
              - string2
            '854': null
        sizeSystem:
          description: >
            Nullable field with same value as attribute that represents "size
            system". Please, read description of

            "GET /v2/brands/{brandId}/attributes" for more detailed explanation.
            This field will be removed in future

            versions of this endpoint and "size system" will be passed only in
            array of attributes.
          type: integer
          example: 5
        browseNodes:
          type: array
          example:
            - 421
            - 567
          items:
            type: integer
    ProductSetCreated:
      type: object
      properties:
        id:
          type: integer
          example: 7865
        uuid:
          type: string
          example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
        srcId:
          description: >-
            ID of image in Shop system. If empty means that image was not yet
            syncronized with Shop and is not visible to end customers.
          example: '94345'
          type: string
          nullable: true
        name:
          type: string
          example: Block Shell Jacket
        parentSku:
          type: string
          description: >-
            SKU of product, which acts as "main" one for ProductSet. Using this
            value you can add new products to ProductSet using XLS files. If
            feature of "parentSku" is disabled, then you should use SKU of first
            product in ProductSet when you work with XLS import files.
          example: NHGB93523-12
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
          description: >-
            Description which will be visible by end customers. Depending on
            settings of your seller and general configuration, there could be
            limit of minimum and maximum length of the description. Also,
            depending on configuration, description should be plain text or may
            contain HTML markup.
          example: >-
            Experience the ultimate expression of functionality at BrandName
            with the Women's Block Shell Jacket. Our model is wearing size *.
            She usually wears a size 8 and is 177cm tall.
        brandId:
          description: >-
            Please, note that not every brand can be used without prior aproval.
            Also, there are some brand-specific limitation for variations (for
            example, for brand A it is possible to use only sizes 34, 35, 36,
            37, 38, 39, 40, but size 35.5 or 33 will lead to validation error).
          type: integer
          example: 78
        primaryCategoryId:
          description: >-
            Please, note that there could limitation for certain sellers in
            which categories seller allowed to create ProductSets. Also, in
            cource of time categories can be marked as inactive (for example
            when category A is splitted to categories B and C).
          type: integer
          example: 309
        attributeSetId:
          description: >-
            Different categories has different AttributeSets. It means that for
            Shoes there is one set of attributes applied and for Hats another
            one. AttributeSet is defined by primary category of product set. In
            very rare cases attribute set of category can be changed to another
            one. In this case in order to successfully save ProductSet you will
            need to pass all required attributes for new AttributeSet. This
            value represent AttributeSet which was set for primary category of
            ProductSet during last save.
          type: integer
          example: 2
        sellerId:
          type: integer
          example: 5623
        categories:
          description: >-
            ProductSet can be listed in multiple additional categories. There is
            a seller-specific limit regarding maximum count of additional
            categories
          type: array
          example:
            - 421
            - 567
          items:
            type: integer
        attributes:
          type: object
          description: >-
            Array of attributes' values. Key is attribute ID and value depends
            on type of attribute. It can be one of: string (for "free text
            attributes" like "Warranty duration"), integer (for attributes with
            list of options, for example "Material" can have some set of fixed
            options), array of integers (for attributes with multiple choise of
            predefined options), null (when you didn't provide value for
            optional attribute), array of strings for attributes which allow
            multiple values with free text.
          example:
            '421': string value
            '533':
              - 4
              - 5
            '567': 123
            '721':
              - string1
              - string2
            '854': null
        sizeSystem:
          description: >
            Nullable field with same value as attribute that represents "size
            system". Please, read description of

            "GET /v2/brands/{brandId}/attributes" for more detailed explanation.
            This field will be removed in future

            versions of this endpoint and "size system" will be passed only in
            array of attributes.
          type: integer
          example: 5
        browseNodes:
          type: array
          example:
            - 421
            - 567
          items:
            type: integer
        sellerSku:
          type: string
          example: 68040427550-1
          description: SKU from seller's side. Should be unique across products of seller.
        status:
          type: string
          nullable: false
          enum:
            - active
            - inactive
            - deleted
        sin:
          description: |
            if not null indicates that product set is Hybrid
          type: string
          example: KMPWJ5
    ProductSetWrite:
      type: object
      properties:
        name:
          type: string
          example: Block Shell Jacket
        description:
          type: string
          description: >-
            Description which will be visible by end customers. Depending on
            settings of your seller and general configuration, there could be
            limit of minimum and maximum length of the description. Also,
            depending on configuration, description should be plain text or may
            contain HTML markup.
          example: >-
            Experience the ultimate expression of functionality at BrandName
            with the Women's Block Shell Jacket. Our model is wearing size *.
            She usually wears a size 8 and is 177cm tall.
        parentSku:
          type: string
          example: '68040427550'
          description: >-
            Parent SKU is text identifier for your product set used in exports
            and imports. When you want to add new size to existing product set
            through importing file, you will provide Parent SKU for that new
            size and  it will be added to product set with given Parent SKU. You
            may omit providing Parent SKU, in this  case it will be
            autogenerated: we will take Seller SKU of first product within
            product set and it will be used as Parent SKU.
        brandId:
          type: integer
          description: >-
            Please, note that not every brand can be used without prior
            approval. Also, there are some brand-specific limitation for
            variations (for example, for brand A it is possible to use only
            sizes 34, 35, 36, 37, 38, 39, 40, but size 35.5 or 33 will lead to
            validation error).
          example: 78
        primaryCategoryId:
          type: integer
          description: >-
            Please, note that there could limitation for certain sellers in
            which categories seller allowed to create ProductSets. Also, in
            cource of time categories can be marked as inactive (for example
            when category A is splitted to categories B and C).
          example: 309
        categories:
          type: array
          items:
            type: integer
          description: >-
            ProductSet can be listed in multiple additional categories. There is
            a seller-specific limit regarding maximum count of additional
            categories. Those categories are within one branch of the category
            tree, where the primary category is located.
          example:
            - 421
            - 567
        attributes:
          type: object
          description: >-
            Array of attributes' values. Key is attribute ID and value depends
            on type of attribute. It can be one of: string (for "free text
            attributes" like "Warranty duration"), integer (for attributes with
            list of options, for example "Material" can have some set of fixed
            options), array of integers (for attributes with multiple choise of
            predefined options), null (when you didn't provide value for
            optional attribute), array of strings for attributes which allow
            multiple values with free text.
          example:
            '421': string value
            '533':
              - 4
              - 5
            '567': 123
            '721':
              - string1
              - string2
            '854': null
        sizeSystem:
          description: >
            Represents the id of the attribute option that can represent for ex
            a country (AU). The values depend on the

            attribute mappings for sizeSystem. When creating the productSet this
            field can be null.
          type: integer
          example: 5
        browseNodes:
          type: array
          items:
            type: integer
          example:
            - 421
            - 567
          default: []
          description: >-
            -> Any other category of the category tree, where you think the
            product shall fit also besides main 'categories', so it gets listed
            in the catalog under those categories as well.
    Product:
      type: object
      properties:
        id:
          description: Product identifier
          type: integer
          example: 7865
          readOnly: true
        uuid:
          description: Product UUID identifier
          example: 060cef12-08ef-4ae6-b15e-79398fedc774
          type: string
          readOnly: true
        srcId:
          description: >
            ID of product in Shop system. If empty means that product was not
            yet syncronized with Shop and is

            not visible to end customers.
          example: '94345'
          type: string
          nullable: true
          readOnly: true
        shopSku:
          description: >
            SKU on the shop's side. Usually it is visible to end customer. If
            value is null, it means that product is not yet

            syncronized with shop and SKU was not assigned.
          type: string
          example: NI464AKLCEZ0
          nullable: true
          readOnly: true
        sellerSku:
          description: SKU from seller's side. Should be unique across products of seller.
          type: string
          example: shoe-123
        sin:
          description: >
            Sometimes several sellers are selling same product. In this case
            products of different sellers can be displayed

            using one single product card in shop. This parameter, if set,
            identifies to which product in shop system this

            product of seller belongs to.
          type: string
          example: KMPWJ5
          readOnly: true
        sellerId:
          type: integer
          example: 252
          readOnly: true
        productSetId:
          type: integer
          example: 744
          readOnly: true
        approvalStatus:
          type: string
          description: Product approval status
          example: approved
          readOnly: true
          enum:
            - pending
            - approved
            - rejected
        updatedByUserId:
          type: integer
          example: 8732
          readOnly: true
        status:
          description: Product status
          type: string
          example: active
          enum:
            - active
            - inactive
            - deleted
        variation:
          description: name of variation, usually size like XL, 39, 62.
          type: string
          example: '38'
        taxClassId:
          description: Tax class Id specific for this particular size.
          type: integer
          example: 1
          readOnly: true
        shipmentTypeId:
          description: >-
            Shipment type Id specific for this particular size. The Value
            include 1 - warehouse; 2 - dropshipping; 3 - crossdocking;  if the
            value is empty the variation will be created with the default value
            of this endpoint /v2/seller-settings with this parameter
            product_default_shipment_type
          type: integer
          example: 1
        productIdentifier:
          description: Identifier like EAN, Code-39, etc
          type: string
          example: '460232163234'
        duplicateGroupId:
          type: integer
          example: 51
          readOnly: true
        srcUpdatedAt:
          type: string
          description: Datetime when product was last updated(synced) with shop system.
          format: date-time
          nullable: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          description: name of the product
          example: '1600 Slim Brushed Chrome '
    ProductRead:
      type: object
      properties:
        id:
          description: Product identifier
          type: integer
          example: 7865
          readOnly: true
        uuid:
          description: Product UUID identifier
          example: 060cef12-08ef-4ae6-b15e-79398fedc774
          type: string
          readOnly: true
        srcId:
          description: >
            ID of product in Shop system. If empty means that product was not
            yet syncronized with Shop and is

            not visible to end customers.
          example: '94345'
          type: string
          nullable: true
          readOnly: true
        shopSku:
          description: >
            SKU on the shop's side. Usually it is visible to end customer. If
            value is null, it means that product is not yet

            syncronized with shop and SKU was not assigned.
          type: string
          example: NI464AKLCEZ0
          nullable: true
          readOnly: true
        sellerSku:
          description: SKU from seller's side. Should be unique across products of seller.
          type: string
          example: shoe-123
        sin:
          description: >
            Sometimes several sellers are selling same product. In this case
            products of different sellers can be displayed

            using one single product card in shop. This parameter, if set,
            identifies to which product in shop system this

            product of seller belongs to.
          type: string
          example: KMPWJ5
          readOnly: true
        sellerId:
          type: integer
          example: 252
          readOnly: true
        productSetId:
          type: integer
          example: 744
          readOnly: true
        approvalStatus:
          type: string
          description: Product approval status
          example: approved
          readOnly: true
          enum:
            - pending
            - approved
            - rejected
        updatedByUserId:
          type: integer
          example: 8732
          readOnly: true
        status:
          description: Product status
          type: string
          example: active
          enum:
            - active
            - inactive
            - deleted
        variation:
          description: name of variation, usually size like XL, 39, 62
          type: string
          nullable: true
          example: '38'
        taxClassId:
          description: Tax class Id specific for this particular size.
          type: integer
          example: 1
          readOnly: true
        shipmentTypeId:
          description: Shipment type Id specific for this particular size.
          type: integer
          example: 1
          readOnly: true
        productIdentifier:
          description: Identifier like EAN, Code-39, etc
          type: string
          nullable: true
          example: '460232163234'
        duplicateGroupId:
          type: integer
          example: 51
          readOnly: true
        srcUpdatedAt:
          type: string
          description: Datetime when product was last updated(synced) with shop system.
          format: date-time
          nullable: true
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
    HybridProduct:
      type: object
      properties:
        sin:
          description: >
            Sometimes several sellers are selling same product. In this case
            products of different sellers can be displayed 

            using one single product card in shop. This parameter, if set,
            identifies to which product in shop system this 

            product of seller belongs to.
          type: string
          nullable: false
          example: KMPWJ5
        sku:
          description: >
            SKU on the shop's side. Usually it is visible to end customer. If
            value is null, it means that product is not yet 

            syncronized with shop and SKU was not assigned.
          type: string
          example: NI464AKLCEZ0
          nullable: true
        name:
          type: string
          example: Nike Shoes
        description:
          type: string
          nullable: true
          example: Men's shoes
        productUrl:
          description: |
            For seller to be able to see how product looks like for end user.
          type: string
          nullable: true
          example: https://absolute-product-url
        prices:
          description: >-
            Prices of product, it is an array of object consisting of price ,
            currency and country.
          type: array
          items:
            type: object
            properties:
              price:
                type: number
                nullable: true
                example: 123.56
              currency:
                type: string
                nullable: true
                example: HKD
              country:
                type: string
                nullable: true
                example: HK
        images:
          description: >-
            Images of product, it is an array of object consisting of imageId ,
            displayUrl and position.
          type: array
          nullable: true
          items:
            type: object
            properties:
              imageId:
                type: integer
                nullable: true
                example: 11
              displayUrl:
                type: string
                nullable: true
                example: https://p/lamoda-nike-11111.jpg
              position:
                type: string
                nullable: true
                example: 1
        brandName:
          description: Brand name
          type: string
          example: Nike
    PriceRead:
      type: object
      properties:
        productSetId:
          type: number
          format: integer
          example: 672
        productId:
          type: number
          format: integer
          example: 2223
        price:
          type: number
          format: float
          example: 7.89
          description: |
            Price of a product.
            Might be restricted by maximum or minimum allowed category price.
        salePrice:
          type: number
          format: float
          example: 6
          nullable: true
          description: >
            Sale price of a product. Can be added only if sale price feature is
            unlocked for the country.

            User settings may forbid user from changing it.

            Country settings may require minimum period of time product is
            active before sale price can be set.

            Must be lower than regular price.

            Might be restricted by maximum or minimum allowed category price and
            by allowed discount.
        saleStartDate:
          type: string
          format: date-time
          nullable: true
          description: >
            Start date of a sale pricing. Can be added only if sale price
            feature is unlocked for the country.

            User settings may forbid user from changing it.

            Must be set after 2010-01-01.
        saleEndDate:
          type: string
          format: date-time
          nullable: true
          description: >
            End date of a sale pricing. Can be added only if sale price feature
            is unlocked for the country.

            User settings may forbid user from changing it.

            Must be set in the future and be further in time than saleStartDate.
        country:
          type: string
          example: ID
        status:
          description: Indicates whether certain product should be sold in given country.
          type: string
          example: active
    PriceInGroup:
      type: object
      properties:
        price:
          type: number
          format: float
          example: 7.89
          description: |
            Price of a product.
            Might be restricted by maximum or minimum allowed category price.
        salePrice:
          type: number
          format: float
          example: 6
          nullable: true
          description: >
            Sale price of a product. Can be added only if sale price feature is
            unlocked for the country.

            User settings may forbid user from changing it.

            Country settings may require minimum period of time product is
            active before sale price can be set.

            Must be lower than regular price.

            Might be restricted by maximum or minimum allowed category price and
            by allowed discount.
        saleStartDate:
          type: string
          format: date-time
          nullable: true
          description: >
            Start date of a sale pricing. Can be added only if sale price
            feature is unlocked for the country.

            User settings may forbid user from changing it.

            Must be set after 2010-01-01.
        saleEndDate:
          type: string
          format: date-time
          nullable: true
          description: >
            End date of a sale pricing. Can be added only if sale price feature
            is unlocked for the country.

            User settings may forbid user from changing it.

            Must be set in the future and be further in time than saleStartDate.
        country:
          type: string
          example: ID
        status:
          description: Indicates whether certain product should be sold in given country.
          type: string
          example: active
    GroupedPriceRead:
      type: object
      properties:
        productSetId:
          type: integer
          example: 432
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: integer
                example: 3333
              prices:
                type: array
                items:
                  type: object
                  properties:
                    price:
                      type: number
                      format: float
                      example: 7.89
                      description: >
                        Price of a product.

                        Might be restricted by maximum or minimum allowed
                        category price.
                    salePrice:
                      type: number
                      format: float
                      example: 6
                      nullable: true
                      description: >
                        Sale price of a product. Can be added only if sale price
                        feature is unlocked for the country.

                        User settings may forbid user from changing it.

                        Country settings may require minimum period of time
                        product is active before sale price can be set.

                        Must be lower than regular price.

                        Might be restricted by maximum or minimum allowed
                        category price and by allowed discount.
                    saleStartDate:
                      type: string
                      format: date-time
                      nullable: true
                      description: >
                        Start date of a sale pricing. Can be added only if sale
                        price feature is unlocked for the country.

                        User settings may forbid user from changing it.

                        Must be set after 2010-01-01.
                    saleEndDate:
                      type: string
                      format: date-time
                      nullable: true
                      description: >
                        End date of a sale pricing. Can be added only if sale
                        price feature is unlocked for the country.

                        User settings may forbid user from changing it.

                        Must be set in the future and be further in time than
                        saleStartDate.
                    country:
                      type: string
                      example: ID
                    status:
                      description: >-
                        Indicates whether certain product should be sold in
                        given country.
                      type: string
                      example: active
    GroupRead:
      type: object
      properties:
        name:
          type: string
          example: Super products
    Image:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          example: 7865
        srcId:
          description: >-
            ID of image in Shop system. If empty means that image was not yet
            synchronized with Shop and is not visible to end customers.
          example: '94345'
          type: string
          nullable: true
          readOnly: true
        productSetId:
          type: integer
          readOnly: true
          example: 744
        position:
          description: >-
            Contains information about desired order in which images should be
            displayed to end customer. May contain gaps in case if some image
            was deleted. Positions are usually recalculated starting from 1
            during any update operation (adding new image, for example).
          type: integer
          example: 2
        displayUrl:
          description: Full public URL of image.
          type: string
          example: https://some.domain/path/image.jpg
        createdAt:
          type: string
          readOnly: true
          format: date-time
        updatedAt:
          type: string
          readOnly: true
          format: date-time
    ImageWrite:
      type: object
      properties:
        position:
          description: >-
            Contains information about desired order in which images should be
            displayed to end customer. May contain gaps in case if some image
            was deleted. Positions are usually recalculated starting from 1
            during any update operation (adding new image, for example).
          type: integer
          example: 2
        displayUrl:
          description: Full public URL of image.
          type: string
          example: https://some.domain/path/image.jpg
        overwrite:
          description: >
            Indicates if the existing image at the specified position should be
            replaced.  If set to true, the image currently at the provided
            position will be overwritten  with the new image. If false or not
            provided, the image will be added without  replacing any existing
            image. Default is false.
          type: boolean
          example: false
          default: false
    FormImagePosition:
      type: object
      properties:
        position:
          description: >-
            Contains information about desired order in which images should be
            displayed to end customer. May contain gaps in case if some image
            was deleted. Positions are usually recalculated starting from 1
            during any update operation (adding new image, for example).
          type: integer
          example: 2
    ImagePosition:
      description: >-
        Contains information about desired order in which images should be
        displayed to end customer. May contain gaps in case if some image was
        deleted. Positions are usually recalculated starting from 1 during any
        update operation (adding new image, for example).
      type: integer
      example: 2
    ImageOverwrite:
      description: >
        Indicates if the existing image at the specified position should be
        replaced.  If set to true, the image currently at the provided position
        will be overwritten  with the new image. If false or not provided, the
        image will be added without  replacing any existing image. Default is
        false.
      type: boolean
      example: false
      default: false
    OverwriteMultipart:
      type: object
      properties:
        overwrite:
          description: >
            Indicates if the existing image at the specified position should be
            replaced.  If set to true, the image currently at the provided
            position will be overwritten  with the new image. If false or not
            provided, the image will be added without  replacing any existing
            image. Default is false.
          type: boolean
          example: false
          default: false
    ImageDisplayUrl:
      description: Full public URL of image.
      type: string
      example: https://some.domain/path/image.jpg
    ImportFile:
      type: object
      description: |
        The field name 'file1' is temporary - it will be changed
      required:
        - file1
      properties:
        file1:
          type: string
          format: binary
    ImportProductStockXml:
      type: object
      description: |-
        XML Request Example ``` <Request>
            <Product>
                <SellerSku>AAA3</SellerSku>
                <Quantity>1030</Quantity>
            </Product>
            <Product>
                <SellerSku>AAA1</SellerSku>
                <Quantity>1010</Quantity>
            </Product>
        </Request>
      properties:
        Product:
          type: object
          properties:
            SellerSku:
              type: string
            Quantity:
              type: integer
      xml:
        name: Request
        wrapped: true
    ImportProductCreationXml:
      type: object
      description: |-
        ``` XML Request Example <Request>
          <Product>
            <SellerSku>4105382173aaee4</SellerSku>
            <ParentSku>asd23eadas</ParentSku>
            <Status>active</Status>
            <Name>Magic Product</Name>
            <Variation>XXL</Variation>
            <PrimaryCategory>4</PrimaryCategory>
            <Categories>2,3,5</Categories>
            <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
            <Brand>ASM</Brand>
            <Price>100.00</Price>
            <SalePrice>32.5</SalePrice>
            <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
            <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
            <ShipmentType>dropshipping</ShipmentType>
            <ProductId>xyzabc</ProductId>
            <ProductData>
              <Megapixels>490</Megapixels>
              <OpticalZoom>7</OpticalZoom>
              <SystemMemory>4</SystemMemory>
              <NumberCpus>32</NumberCpus>
              <Network>This is network</Network>
            </ProductData>
            <Quantity>10</Quantity>
          </Product>
          <Product>
            <SellerSku>4105382173aaee4</SellerSku>
            <ParentSku>asd23eadas<ParentSku/>
            <Status>active</Status>
            <Name>Magic Product</Name>
            <Variation>XXL</Variation>
            <PrimaryCategory>4</PrimaryCategory>
            <Categories>2,3,5</Categories>
            <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
            <Brand>ASM</Brand>
            <Price>100.00</Price>
            <SalePrice>32.5</SalePrice>
            <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
            <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
            <ShipmentType>dropshipping</ShipmentType>
            <ProductId>xyzabc</ProductId>
            <ProductData>
              <Megapixels>490</Megapixels>
              <OpticalZoom>7</OpticalZoom>
              <SystemMemory>4</SystemMemory>
              <NumberCpus>32</NumberCpus>
              <Network>This is network</Network>
            </ProductData>
            <Quantity>10</Quantity>
          </Product>
        </Request>
      properties:
        Product:
          type: object
          properties:
            SellerSku:
              type: string
            ParentSku:
              type: string
            Status:
              type: string
            Name:
              type: string
            Variation:
              type: string
            PrimaryCategory:
              type: integer
            Categories:
              type: string
            BrowseNodes:
              type: string
            Description:
              type: string
            Brand:
              type: string
            Price:
              type: number
              example: 123.56
            SalePrice:
              type: number
              example: 123.56
            SaleStartDate:
              type: string
              format: date-time
              example: '2023-11-01 03:33:47'
            SaleEndDate:
              type: string
              format: date-time
              example: '2023-11-12 03:33:47'
            TaxClass:
              type: string
            ShipmentType:
              type: string
            ProductId:
              description: ProductId is not id of product, it is EAN/GTIN
              type: string
            ProductData:
              type: array
              items:
                type: object
                properties:
                  Megapixels:
                    type: integer
                    example: 490
                  OpticalZoom:
                    type: integer
                    example: 7
                  SystemMemory:
                    type: integer
                    example: 4
                  NumberCpus:
                    type: integer
                    example: 7
                  Network:
                    type: string
            Quantity:
              type: integer
      required:
        - SellerSku
        - Name
        - PrimaryCategory
        - Description
        - Brand
        - Price
      xml:
        name: Request
        wrapped: true
    ImportProductUpdateXml:
      type: object
      description: |-
        ``` XML Request Example <Request>
          <Product>
            <SellerSku>4105382173aaee4</SellerSku>
            <ParentSku>asd23eadas</ParentSku>
            <Status>active</Status>
            <Name>Magic Product</Name>
            <Variation>XXL</Variation>
            <PrimaryCategory>4</PrimaryCategory>
            <Categories>2,3,5</Categories>
            <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
            <Brand>ASM</Brand>
            <Price>100.00</Price>
            <SalePrice>32.5</SalePrice>
            <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
            <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
            <ShipmentType>dropshipping</ShipmentType>
            <ProductId>xyzabc</ProductId>
            <ProductData>
              <Megapixels>490</Megapixels>
              <OpticalZoom>7</OpticalZoom>
              <SystemMemory>4</SystemMemory>
              <NumberCpus>32</NumberCpus>
              <Network>This is network</Network>
            </ProductData>
            <Quantity>10</Quantity>
          </Product>
          <Product>
            <SellerSku>4105382173aaee4</SellerSku>
            <ParentSku>asd23eadas<ParentSku/>
            <Status>active</Status>
            <Name>Magic Product</Name>
            <Variation>XXL</Variation>
            <PrimaryCategory>4</PrimaryCategory>
            <Categories>2,3,5</Categories>
            <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
            <Brand>ASM</Brand>
            <Price>100.00</Price>
            <SalePrice>32.5</SalePrice>
            <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
            <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
            <ShipmentType>dropshipping</ShipmentType>
            <ProductId>xyzabc</ProductId>
            <ProductData>
              <Megapixels>490</Megapixels>
              <OpticalZoom>7</OpticalZoom>
              <SystemMemory>4</SystemMemory>
              <NumberCpus>32</NumberCpus>
              <Network>This is network</Network>
            </ProductData>
            <Quantity>10</Quantity>
          </Product>
        </Request>
      properties:
        Product:
          type: object
          properties:
            SellerSku:
              type: string
            ParentSku:
              type: string
            Status:
              type: string
            Name:
              type: string
            Variation:
              type: string
            PrimaryCategory:
              type: integer
            Categories:
              type: string
            BrowseNodes:
              type: string
            Description:
              type: string
            Brand:
              type: string
            Price:
              type: number
              example: 123.56
            SalePrice:
              type: number
              example: 123.56
            SaleStartDate:
              type: string
              format: date-time
              example: '2023-11-02 03:33:47'
            SaleEndDate:
              type: string
              format: date-time
              example: '2023-11-12 03:33:47'
            TaxClass:
              type: string
            ShipmentType:
              type: string
            ProductId:
              type: string
            ProductData:
              type: array
              items:
                type: object
                properties:
                  Megapixels:
                    type: integer
                    example: 490
                  OpticalZoom:
                    type: integer
                    example: 7
                  SystemMemory:
                    type: integer
                    example: 4
                  NumberCpus:
                    type: integer
                    example: 7
                  Network:
                    type: string
            Quantity:
              type: integer
            ProductGroup:
              type: string
      required:
        - SellerSku
      xml:
        name: Request
        wrapped: true
    ImportFileAccepted:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: >-
            <b>File has been successfully uploaded.</b> Please be patient while
            data is being processed.
        errorMessages:
          type: array
          items:
            type: string
            example: >-
              There is no data in uploaded file or all records were invalid and
              have been ignored.
        warningMessages:
          type: array
          items:
            type: string
            example: 'Unknown field: Country'
        feedId:
          type: integer
          example: 7
        feedUuid:
          type: string
          example: 060cef12-08ef-4ae6-b15e-79398fedc774
    ImportStockXmlSuccess:
      type: object
      properties:
        Head:
          type: object
          properties:
            RequestId:
              type: string
              description: The unique identifier for the request.
              example: 1adf8fc6-a08f-47d5-9613-e2af40243e2f
            RequestAction:
              type: string
              description: The action that was successfully performed.
              example: ProductStockUpdate
            ResponseType:
              type: string
              description: The type of the response, if any.
            Timestamp:
              type: string
              format: date-time
              description: The timestamp of when the action was performed.
              example: 2023-05-26T17:26:50+0200
        Body:
          type: object
          properties:
            WarningDetail:
              type: object
              properties:
                Field:
                  type: string
                  description: The field associated with the warning.
                Message:
                  type: string
                  description: A message explaining the warning.
                Value:
                  type: string
                  description: The value that caused the warning.
    ImportStocksXmlError:
      type: object
      properties:
        ErrorResponse:
          type: object
          properties:
            Head:
              type: object
              properties:
                RequestAction:
                  type: string
                  description: The action that was requested when the error occurred.
                  example: ProductStockUpdate
                ErrorType:
                  type: string
                  description: The type of the error.
                  example: Platform
                ErrorCode:
                  type: integer
                  description: The code of the error.
                  example: 30
                ErrorMessage:
                  type: string
                  description: A message describing the error.
                  example: 'E030: Empty Request'
            Body:
              type: object
              properties:
                ErrorDetail:
                  type: array
                  items:
                    type: object
                    properties:
                      Field:
                        type: string
                        description: The field where the error occurred.
                        example: field1
                      Message:
                        type: string
                        description: A message describing the error detail.
                        example: message1
                      Value:
                        type: string
                        description: The value that caused the error.
                        example: value1
                      SellerSku:
                        type: string
                        description: The seller SKU related to the error.
                        example: sku1
    ImportProductCreationXmlSuccess:
      type: object
      properties:
        Head:
          type: object
          properties:
            RequestId:
              type: string
              description: The unique identifier for the request.
              example: cb106552-87f3-450b-aa8b-412246a24b34
            RequestAction:
              type: string
              description: The action that was successfully performed.
              example: ProductCreate
            ResponseType:
              type: string
              description: The type of the response, if any.
            Timestamp:
              type: string
              format: date-time
              description: The timestamp of when the action was performed.
              example: 2016-06-22T04:40:14+0200
        Body:
          type: object
          properties:
            WarningDetail:
              type: object
              properties:
                Field:
                  type: string
                  description: The field associated with the warning.
                Message:
                  type: string
                  description: A message explaining the warning.
                Value:
                  type: string
                  description: The value that caused the warning.
    ImportProductCreationXmlError:
      type: object
      properties:
        ErrorResponse:
          type: object
          properties:
            Head:
              type: object
              properties:
                RequestAction:
                  type: string
                  description: The action that was requested when the error occurred.
                  example: ProductCreate
                ErrorType:
                  type: string
                  description: The type of the error.
                  example: Platform
                ErrorCode:
                  type: integer
                  description: The code of the error.
                  example: 1000
                ErrorMessage:
                  type: string
                  description: A message describing the error.
                  example: >-
                    Could not save product: An exact match of the document is
                    being processed, cb106552-87f3-450b-aa8b-412246a24b34
            Body:
              type: object
              properties:
                ErrorDetail:
                  type: array
                  items:
                    type: object
                    properties:
                      Field:
                        type: string
                        description: The field where the error occurred.
                        example: field1
                      Message:
                        type: string
                        description: A message describing the error detail.
                        example: message1
                      Value:
                        type: string
                        description: The value that caused the error.
                        example: value1
                      SellerSku:
                        type: string
                        description: The seller SKU related to the error.
                        example: sku1
    Brands:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 111555
        srcId:
          type: string
          nullable: true
          example: ADI5341
          description: Internal id
        uuid:
          type: string
          nullable: true
          example: 1af9fe46-77d2-4ab2-8b4a-8c7eeac8bbc9
        name:
          type: string
          nullable: false
          example: Adidas
        status:
          type: string
          nullable: false
          enum:
            - active
            - inactive
            - deleted
        isActive:
          type: boolean
          nullable: false
          example: true
        isApproved:
          type: boolean
          nullable: false
          example: true
        isRestricted:
          type: boolean
          nullable: false
          example: false
        countries:
          type: string
          nullable: false
          example: RU,KZ
        createdAt:
          type: string
          format: date-time
          nullable: false
          example: '2021-09-22T23:21:42+02:00'
        updatedAt:
          type: string
          format: date-time
          nullable: false
          example: '2021-09-22T23:21:42+02:00'
    BrandAttributes:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: supplier_type
        options:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 321
              name:
                type: string
                example: Direct
    StockRead:
      type: object
      properties:
        shopSku:
          description: >-
            SKU on the shop's side. Usually it is visible to end customer. If
            value is null, it means that product is not yet syncronized with
            shop and SKU was not assigned.
          type: string
          example: NI464AKLCEZ0
          nullable: true
        sellerSku:
          description: SKU from seller's side. Should be unique across products of seller.
          type: string
          example: shoe-123
        name:
          description: Product's name
          type: string
          example: Block Shell Jacket
        quantity:
          description: >-
            The sellable stock in the Seller warehouse. This is current quantity
            from catalog product table.
          type: integer
          example: 63
        reservedStock:
          description: >-
            The product stock from Pending or Ready to Ship order items where
            shipment type is drop-shipping or cross-docking.
          type: integer
          example: 11
        preVerificationStock:
          description: The product stock in PreVerification
          type: integer
          example: 11
        available:
          description: >-
            AvailableStock = (Quantity + ReceivedConsignment +
            CanceledConsignment + ReturnedConsignment + FailedConsignment -
            ReservedStock). If PreVerification stock is enabled and is higher
            than ReservedStock when the formula is: AvailableStock = (Quantity +
            ReceivedConsignment + CanceledConsignment + ReturnedConsignment +
            FailedConsignment - PreverificationStock)
          type: integer
          example: 12
        consignments:
          description: >-
            It will be populated if Seller Settings is activated (Seller
            Settings->Order Processing->Fulfilment by Venture) and If at least
            one consignment stock is higher than 0 (e.g receivedConsignment > 0)
          nullable: true
          type: object
          properties:
            received:
              description: Received consignment stock
              type: integer
            quarantined:
              description: Quarantined consignment stock
              type: integer
            defective:
              description: Defective consignment stock
              type: integer
            canceled:
              description: Canceled consignment stock
              type: integer
            returned:
              description: Returned consignment stock
              type: integer
            failed:
              description: Failed consignment stock
              type: integer
        sellableStock:
          description: >-
            ReceivedConsignment + CanceledConsignment + ReturnedConsignment +
            FailedConsignment
          type: integer
          example: 101
        nonSellableStock:
          description: QuarantinedConsignment + DefectiveConsignment
          type: integer
          example: 2
        warehouses:
          description: >-
            It will be populated if feature switch is enabled
            (core:seller/multi_warehouse/enabled) and Seller Settings is
            activated (Seller Settings->Product Management->Enable
            multi-warehouse usage) and If the warehouse stock is higher than 0.
          type: array
          items:
            type: object
            properties:
              name:
                description: Warehouse Name
                type: string
                example: Central Warehouse
              stock:
                description: Warehouse stock
                type: integer
                example: 89
              warehouseId:
                description: Warehouse id
                type: integer
                example: 1
    Warehouse:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          description: Warehouse identifier
          readOnly: true
        sellerId:
          description: Seller identifier
          type: integer
          readOnly: true
        name:
          description: >-
            Warehouse name. It should be unique for seller and contains only
            numbers, letters and underscores
          type: string
        address:
          description: Warehouse address. Address length should be 128 symbols max.
          type: string
        postcode:
          description: Address postcode. It should be 16 symbols max.
          type: string
        city:
          type: string
          description: Warehouse city. It should be 50 symbols max
        country:
          type: string
          description: Warehouse country. It shoud be 50 symbols length max
        status:
          type: string
          default: disabled
          description: Warehouse status.
          enum:
            - active
            - disabled
        longitude:
          type: string
        latitude:
          type: string
        note:
          type: string
        default:
          type: boolean
          default: false
        isSynced:
          type: boolean
          default: false
        isInShoppingMall:
          type: boolean
          default: false
    WarehouseStock:
      type: object
      required:
        - quantity
      properties:
        quantity:
          type: integer
          nullable: false
          example: 144
    ConsignmentStock:
      type: object
      properties:
        id:
          description: Identifier
          type: integer
          readOnly: true
        productId:
          description: Product identifier
          type: integer
          readOnly: true
        received:
          type: integer
          readOnly: true
        quarantined:
          type: integer
          readOnly: true
        defective:
          type: integer
          readOnly: true
        canceled:
          type: integer
          readOnly: true
        returned:
          type: integer
          readOnly: true
        failed:
          type: integer
          readOnly: true
    GeneralError:
      type: object
      properties:
        type:
          type: string
          description: ''
        title:
          type: string
          description: >
            A short summary of the problem type. Written in English and readable
            for engineers, usually not suited for non technical stakeholders and
            not localized.
          example: Status Transition is not allowed
        status:
          type: integer
          format: int32
          description: >
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 400
          maximum: 599
          example: 400
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurrence of the
            problem that is helpful to locate the problem and give advice on how
            to proceed. Written in English and readable for engineers, usually
            not suited for non technical stakeholders and not localized.
          example: Status 'InTransit2' is not valid status for order item.
    Paginator:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          description: |
            Entity limit per request
          example: 20
        offset:
          type: integer
          format: int32
          description: |
            Offset for entities in repository
          example: 10
        totalCount:
          type: integer
          format: int32
          description: |
            Total count of entities for request
          example: 100
    PaginatorWithoutTotalCount:
      type: object
      properties:
        limit:
          type: integer
          format: int32
          description: |
            Entity limit per request
          example: 20
        offset:
          type: integer
          format: int32
          description: |
            Offset for entities in repository
          example: 10
        hasNext:
          type: boolean
          description: |
            True if next page will have at least one result
          example: false
    CustomKpiWrite:
      type: object
      properties:
        externalKpiName:
          type: string
          example: Operational Score
        sellerShortCode:
          type: string
          example: NG1003C
        value:
          type: number
          format: float
          example: 50
          minimum: 0.01
          maximum: 100
    Category:
      type: object
      properties:
        id:
          description: Category identifier
          type: integer
          example: 7865
          readOnly: true
          nullable: true
        parentId:
          description: Category parent identifier
          type: integer
          example: 1285
          nullable: true
          readOnly: true
        name:
          description: Category name
          type: string
          example: Sample category name
          nullable: true
          readOnly: true
        attributeSetId:
          description: Attribute set identifier
          type: integer
          example: 8757345
          nullable: false
          readOnly: true
        pathIds:
          description: Category path identifier list
          type: array
          example:
            - 3461
            - 6783
          items:
            type: integer
        path:
          description: Category path
          type: array
          example:
            - Back To School
            - For Kids
            - Books
          items:
            type: string
        childrenIds:
          description: Category children id list
          type: array
          example:
            - 7834
            - 7835
          items:
            type: integer
        visible:
          description: Whether or not the category is visible
          type: boolean
          example: true
          nullable: false
        fulfillmentVisible:
          description: Whether or not the category is visible in consignment
          type: boolean
          example: true
          nullable: false
        qcDisabled:
          description: Whether or not the category is disabled in quality-control
          type: boolean
          example: false
          nullable: false
        serialNumberRequired:
          description: Whether or not the category requires a serial number
          type: boolean
          example: false
          nullable: false
        status:
          description: Category status
          type: string
          enum:
            - active
            - inactive
            - inherited_inactive
            - deleted
        uuid:
          description: Category UUID identifier
          example: 060cef12-08ef-4ae6-b15e-79398fedc774
          type: string
          readOnly: true
    CategoryBasicInfo:
      type: object
      properties:
        id:
          description: Category identifier
          type: integer
          example: 7865
          readOnly: true
          nullable: true
        parentId:
          description: Category parent identifier
          type: integer
          example: 1285
          nullable: true
          readOnly: true
        name:
          description: Category name
          type: string
          example: Sample category name
          nullable: true
          readOnly: true
        attributeSetId:
          description: Attribute set identifier
          type: integer
          example: 8757345
          nullable: false
          readOnly: true
        pathIds:
          description: Category path identifier list
          type: array
          example:
            - 3461
            - 6783
          items:
            type: integer
        path:
          description: Category path
          type: array
          example:
            - Back To School
            - For Kids
            - Books
          items:
            type: string
        uuid:
          description: Category UUID identifier
          example: 060cef12-08ef-4ae6-b15e-79398fedc774
          type: string
          readOnly: true
    CategoryTree:
      allOf:
        - type: object
          properties:
            id:
              description: Category identifier
              type: integer
              example: 7865
              readOnly: true
              nullable: true
            parentId:
              description: Category parent identifier
              type: integer
              example: 1285
              nullable: true
              readOnly: true
            name:
              description: Category name
              type: string
              example: Sample category name
              nullable: true
              readOnly: true
            attributeSetId:
              description: Attribute set identifier
              type: integer
              example: 8757345
              nullable: false
              readOnly: true
            pathIds:
              description: Category path identifier list
              type: array
              example:
                - 3461
                - 6783
              items:
                type: integer
            path:
              description: Category path
              type: array
              example:
                - Back To School
                - For Kids
                - Books
              items:
                type: string
            uuid:
              description: Category UUID identifier
              example: 060cef12-08ef-4ae6-b15e-79398fedc774
              type: string
              readOnly: true
        - type: object
          properties:
            children:
              type: array
              description: Category children
              items:
                allOf:
                  - type: object
                    properties:
                      id:
                        description: Category identifier
                        type: integer
                        example: 7865
                        readOnly: true
                        nullable: true
                      parentId:
                        description: Category parent identifier
                        type: integer
                        example: 1285
                        nullable: true
                        readOnly: true
                      name:
                        description: Category name
                        type: string
                        example: Sample category name
                        nullable: true
                        readOnly: true
                      attributeSetId:
                        description: Attribute set identifier
                        type: integer
                        example: 8757345
                        nullable: false
                        readOnly: true
                      pathIds:
                        description: Category path identifier list
                        type: array
                        example:
                          - 3461
                          - 6783
                        items:
                          type: integer
                      path:
                        description: Category path
                        type: array
                        example:
                          - Back To School
                          - For Kids
                          - Books
                        items:
                          type: string
                      uuid:
                        description: Category UUID identifier
                        example: 060cef12-08ef-4ae6-b15e-79398fedc774
                        type: string
                        readOnly: true
                  - type: object
                    properties:
                      children:
                        type: array
                        description: Category children
                        example: []
                        items: {}
    CategoryAttribute:
      type: object
      properties:
        id:
          description: >
            Attribute identifier. Please, consider the fact that there could be
            several attributes with

            the same name, but with different IDs. For example, there can be
            AttributeSets "Shoes", "Dresses"

            and "Jewelry". Shoes and Dresses has "color", but there is no such
            attribute for "Jewelry".


            So when you want to create product in "Shoes" or "Dresses" you can
            (and if "color" is mandatory -

            should) pass value of "color". But this attribute "color" will have
            different IDs, probably

            different set of options, maybe different validation rules and so
            on.
          type: integer
          example: 7865
          readOnly: true
          nullable: true
        label:
          description: >
            Attribute label, in general same as name, but can contain spaces and
            non-latin and/or non numeric

            characters. Subject to change. For example, there is attribute with
            label "Colour" but then new

            attribute "Second color" was added to make end users be able to shop
            for perfect colour combination.

            After that attribute with label "Colour" may change its label to
            "Main Colour". You can use this

            property if you are building your own UI for SellerCenter operations
            as label for attribute.
          type: string
          example: Sample attribute label
          nullable: true
          readOnly: true
        name:
          description: Attribute name for internal usage. You can ignore this property.
          type: string
          example: Attribute name
          nullable: false
          readOnly: true
        feedName:
          description: >
            Feed name: this is how attribute is displayed in XLSX exports and
            expected to be in imports. When your

            integration with SellerCenter will generate files for upload to
            SellerCenter, then you need to use this

            property as column name. Very rarely changed, but you need to
            consider that is can happen.
          type: string
          example: Feed name
          nullable: false
          readOnly: true
        groupName:
          description: >
            Attribute's group name. If you implement own UI for SellerCenter it
            is useful to display attributes in

            groups, for example "Delivery", "Product Additional Details". By
            using this field you can split

            attributes in groups and display accordingly.
          type: string
          example: Content
          nullable: true
          readOnly: true
        isMandatory:
          description: |
            Attribute is mandatory.
          type: boolean
          example: false
          nullable: false
          readOnly: true
        isGlobalAttribute:
          description: >
            Is true when attribute does not belong to certain AttributeSet and
            can be set for any product.
          type: boolean
          example: true
          nullable: true
          readOnly: true
        description:
          description: >
            Attribute description. Maybe useful to see more about meaning of
            attribute or when you develop

            own UI for SellerCenter operations.
          type: string
          example: Some description of an attribute
          nullable: true
          readOnly: true
        productType:
          description: >
            Legacy field indicating whether attribute belongs to product
            ("simple"), product set ("config") or very-special

            ("sellercenter"). Please, do not rely on this field as it is subject
            to change in near future. It is left

            for compatibility reasons for some clients of previous versions of
            API.
          type: string
          example: sellercenter
          nullable: false
          readOnly: true
        inputType:
          description: >
            Type of input to display to user. See enum values for possible
            values. This may be

            useful if you develop your own UI for SellerCenter.
          type: string
          enum:
            - checkbox
            - datefield
            - datetime
            - dropdown
            - multiselect
            - numberfield
            - textarea
            - textfield
          example: numberfield
          nullable: false
          readOnly: true
        attributeType:
          description: >
            Type of an attribute, see enum for possible values. It defines how
            SellerCenter stores value of certain

            attribute. For type of "value" - it is stored "as-is", for "option"
            - ID of option stored,

            for "multi_option" - array or option IDs.


            This is useful when you get information about product set and you
            want to understand whether

            123 is plain value or ID of option.


            There is a special attribute type called "system". Attribute with
            those types returned for purposes

            of making aware about logic of those attributes. For example, you
            may see attribute "Brand" among them.

            From this attribute you will see useful information like "is it
            mandatory?", "what is example value of

            it?", "what description can I show to my users while I develop our
            own UI for SellerCenter".


            Attributes of this type should not be sent in array of "attributes"
            when you create or update your

            product sets. Continuing with example of Brand attribute: to pass
            this information you should use

            field brandId in root of payload for creation of product set.
          type: string
          enum:
            - value
            - option
            - multi_option
            - system
          example: system
          nullable: false
          readOnly: true
        exampleValue:
          description: Attribute's example value
          type: string
          nullable: true
          readOnly: true
        maxLength:
          description: |
            Attribute's max length, applicable for string attributes.
          type: integer
          example: 23
          nullable: true
          readOnly: true
        isVisibleForHybrid:
          description: >
            This flag enables/disable if an attribute is visible or not for a
            hybrid product
          type: boolean
          example: true
          nullable: false
          readOnly: true
        attributeDefinitionType:
          description: |
            Is used to define the attribute type
          type: string
          enum:
            - default
            - price_status
            - price
            - special_price
            - sale_start
            - sale_end
          example: price
          nullable: true
          readOnly: true
        attributeDefinitionCountry:
          description: |
            Is used to define the attribute's country/vendor
          type: string
          enum:
            - TW
            - SG
            - PH
            - ID
            - MY
            - HK
          example: MY
          nullable: true
          readOnly: true
        inputMode:
          description: >
            Is used to disable, hide a field. See enum values for possible
            values.
          type: string
          enum:
            - edit
            - display
            - invisible
            - edit_on_create
          example: edit
          nullable: true
          readOnly: true
        forbidEmpty:
          description: |
            If set to true an attribute can not be 0 or NULL.
          type: boolean
          example: true
          nullable: false
          readOnly: true
        options:
          description: >
            Attribute options. List of all option for current attribute.
            Additional validation may apply

            like validation "brand to attribute mappings", "attribute to
            attribute mapping". Example:

            you want to create new product in category "Shoes". Option "45" is
            among options of attribute

            "Size", but there is a mapping which says that if for attribute "Age
            group" there is a value

            "Kids" selected then only allowed sizes are "20", "21", ... "32".
          type: array
          items:
            type: object
            properties:
              id:
                description: >
                  Option identifier. Please note that several attrbiutes can
                  have options with same name,

                  but with different IDs. You need to use right option ID for
                  right attribute. For example,

                  there are attributes "Colour" (ID=1) and "Soil color" (ID=2).
                  "Color" has option "Black"

                  with ID=1234 and "Soil color" has option "Black" with ID=9876.
                  Even though name of options

                  are the same, when you want to pass value for "Soil color" you
                  can send only 9876,
                type: integer
                example: 631
                readOnly: true
                nullable: false
              name:
                description: >
                  Option name. If you implement own UI for SellerCenter you can
                  display this to user, also

                  same value end user in the shop will see. If you are
                  generating XLS files for future

                  upload to SellerCenter then you need also to use this value.
                  Please, note that very rarely

                  this value can be changed (for example, one colour got
                  splitted in two or more, renamed

                  to be more understandable for end user)
                type: string
                example: Black
                nullable: false
                readOnly: true
              isDefault:
                description: >
                  Is option default. Used as hint when this option is most
                  commonly used. It may be useful

                  if you implementing own UI for SellerCenter and this option
                  should be displayed as

                  selected by defaul when your user sees the screen of product
                  set creation.
                type: boolean
                example: false
                nullable: true
                readOnly: true
          nullable: true
          readOnly: true
        isEditionBySellerBlocked:
          description: >
            If set to true then the value of the attribute can not be changed
            after the product was synced with the shop.
          type: boolean
          example: true
          nullable: false
          readOnly: true
        isUsedInConsignmentFormulas:
          description: |
            If set to true then the attribute is used in consignment formulas.
          type: boolean
          example: true
          nullable: false
          readOnly: true
    CategoryAttributeOption:
      type: object
      properties:
        id:
          description: >
            Option identifier. Please note that several attrbiutes can have
            options with same name,

            but with different IDs. You need to use right option ID for right
            attribute. For example,

            there are attributes "Colour" (ID=1) and "Soil color" (ID=2).
            "Color" has option "Black"

            with ID=1234 and "Soil color" has option "Black" with ID=9876. Even
            though name of options

            are the same, when you want to pass value for "Soil color" you can
            send only 9876,
          type: integer
          example: 631
          readOnly: true
          nullable: false
        name:
          description: >
            Option name. If you implement own UI for SellerCenter you can
            display this to user, also

            same value end user in the shop will see. If you are generating XLS
            files for future

            upload to SellerCenter then you need also to use this value. Please,
            note that very rarely

            this value can be changed (for example, one colour got splitted in
            two or more, renamed

            to be more understandable for end user)
          type: string
          example: Black
          nullable: false
          readOnly: true
        isDefault:
          description: >
            Is option default. Used as hint when this option is most commonly
            used. It may be useful

            if you implementing own UI for SellerCenter and this option should
            be displayed as

            selected by defaul when your user sees the screen of product set
            creation.
          type: boolean
          example: false
          nullable: true
          readOnly: true
    CategoryAttributeValidator:
      type: object
      properties:
        maxLength:
          description: Max length
          type: integer
          example: 255
          readOnly: true
          nullable: true
        decimalPlaces:
          description: Decimal places
          type: integer
          example: 2
          nullable: true
          readOnly: true
        type:
          description: Type
          type: string
          example: null
          nullable: true
          readOnly: true
        notEmpty:
          description: Not empty
          type: boolean
          example: true
          nullable: true
          readOnly: true
        signed:
          description: Is signed
          type: boolean
          example: false
          nullable: true
          readOnly: true
        checkedInBlacklist:
          description: Is checked in blacklist
          type: boolean
          example: false
          nullable: true
          readOnly: true
    CategoryMappings:
      type: array
      items:
        type: object
        properties:
          categoryId:
            type: integer
            example: 32
          categoryName:
            type: string
            example: Health
          attributes:
            type: array
            items:
              type: object
              properties:
                attributeId:
                  type: integer
                  example: 80
                options:
                  type: array
                  items:
                    type: integer
                    example: 99
    CategorySettings:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 32
          shopId:
            type: string
            example: 139593
            description: Src ID of the category
          name:
            type: string
            example: Electronics
          restrictions:
            type: array
            items:
              type: object
              properties:
                type:
                  type: string
                  example: price
                  enum:
                    - price
                    - image
                name:
                  type: string
                  example: min_price
                  enum:
                    - image_allowed_background_color
                    - image_max_background_percentage
                    - image_max_blurriness_score
                    - max_discount_percentage
                    - max_price
                    - max_sale_price
                    - min_discount_percentage
                    - min_price
                    - min_sale_price
                description:
                  type: string
                  example: Min Price
                country:
                  type: string
                  example: DE
                  nullable: true
                validationType:
                  type: string
                  example: scalar
                value:
                  type: string
                  example: '10'
    CategoryById:
      type: object
      properties:
        id:
          description: Category identifier
          type: integer
          example: 7865
          readOnly: true
        srcId:
          type: string
          nullable: true
          description: >-
            ID of category in Shop system. If null means that category was not
            yet synchronized with Shop and is not visible to end customers.
          example: '39487664'
        uuid:
          description: Category UUID identifier
          example: 060cef12-08ef-4ae6-b15e-79398fedc774
          type: string
          readOnly: true
        parentId:
          description: Category parent identifier
          type: integer
          example: 1285
          nullable: true
          readOnly: true
        name:
          description: Category name
          type: string
          example: Sample category name
          readOnly: true
        visible:
          description: If the category is visible or not
          type: boolean
          example: true
          nullable: false
          readOnly: true
        status:
          type: string
          enum:
            - active
            - inactive
            - inherited_inactive
            - deleted
        path:
          description: Category path
          type: array
          example:
            - Back To School
            - For Kids
            - Books
          items:
            type: string
    ChildCategory:
      type: object
      properties:
        id:
          description: Category identifier
          type: integer
          example: 7865
          readOnly: true
          nullable: true
        uuid:
          description: Category UUID identifier
          example: 060cef12-08ef-4ae6-b15e-79398fedc774
          type: string
          readOnly: true
        srcId:
          type: string
          nullable: true
          description: >-
            ID of category in Shop system. If null means that category was not
            yet synchronized with Shop and is not visible to end customers.
          example: '39487664'
        status:
          description: Category status
          type: string
          enum:
            - active
            - inactive
            - inherited_inactive
            - deleted
        visible:
          description: Whether or not the category is visible
          type: boolean
          example: true
          nullable: false
        parentId:
          description: Category parent identifier
          type: integer
          example: 1285
          nullable: true
          readOnly: true
        name:
          description: Category name
          type: string
          example: Sample category name
          nullable: true
          readOnly: true
        attributeSetId:
          description: Attribute set identifier
          type: integer
          example: 8757345
          nullable: false
          readOnly: true
        pathIds:
          description: Category path identifier list
          type: array
          example:
            - 3461
            - 6783
          items:
            type: integer
        path:
          description: Category path
          type: array
          example:
            - Back To School
            - For Kids
            - Books
          items:
            type: string
        hasChildren:
          description: Whether or not the category has children
          type: boolean
          example: true
          nullable: false
    MappedAttribute:
      description: Mapped Attribute Options
      type: object
      properties:
        parent:
          description: parent
          type: object
          properties:
            attributeId:
              description: attributeId
              example: 70
              type: integer
            optionId:
              description: optionId
              example: 200
              type: integer
          required:
            - attributeId
            - optionId
        child:
          description: child
          type: object
          properties:
            attributeId:
              description: attributeId
              example: 75
              type: integer
            optionId:
              description: optionId
              example: 208
              type: integer
          required:
            - attributeId
            - optionId
    ProductStock:
      type: object
      properties:
        productId:
          type: integer
          example: 5283
          description: Numeric ID of a product.
        quantity:
          type: integer
          example: 12
          description: The current level of inventory for this product.
    Tag:
      description: Tag
      type: object
      properties:
        id:
          description: numeric ID of Tag
          example: 68
          type: integer
        name:
          description: optionId
          example: bestSellingProduct
          type: string
      required:
        - id
        - name
    TagSeller:
      description: Seller tag
      type: object
      properties:
        sellerId:
          description: Numeric ID of a Seller
          example: 42
          type: integer
        tags:
          description: Tag names
          example:
            - test1
            - test2
          type: array
          items:
            type: string
    RejectedProductSet:
      description: Rejected ProductSet
      type: object
      properties:
        productSetId:
          description: numeric ID of ProductSet
          example: 68
          type: integer
        rejectedReasons:
          description: list of human-readable reasons why ProductSet was rejected
          example:
            - Images missing
            - Wrong category
          type: array
          items:
            type: string
        qcComment:
          description: >-
            It is possible, but not mandatory for the QC person to add a comment
            on the rejection.
          type: string
          example: Some field was wrong
      required:
        - productSetId
        - rejectedReasons
    Order:
      type: object
      properties:
        uuid:
          type: string
          description: Unique order identifier
          example: 9d6ca7ce-4b71-46bf-aa5e-a0727eca880z
        invoiceRequired:
          type: boolean
          description: This flag means that invoice is required for the Order
          example: false
        id:
          type: integer
          description: Unique numeric order identifier
          example: 1111
        regionId:
          type: string
          description: Regions order identifier
          example: 2222-2
        sellerId:
          type: integer
          description: Seller identifier
          example: 222
        number:
          type: string
          description: Order number given by the seller
          example: MY-111143
        customer:
          type: object
          description: Customer name
          properties:
            firstName:
              type: string
              description: First name
              example: John
              nullable: true
            lastName:
              type: string
              description: Last name
              example: Doe
              nullable: true
        address:
          type: object
          description: Order address
          properties:
            billing:
              type: object
              nullable: true
              description: >-
                Info about customer address with restricted access to certain
                fields
              properties:
                firstName:
                  type: string
                  description: Customer first name
                  example: John
                  nullable: true
                lastName:
                  type: string
                  description: Customer last name
                  example: Doe
                  nullable: true
                phone:
                  type: array
                  items:
                    type: string
                  example:
                    - '#####'
                address:
                  type: array
                  items:
                    type: string
                  description: 5 rows to show the address
                  example:
                    - Johannisstr. 20
                    - ''
                    - ''
                    - ''
                    - ''
                email:
                  type: string
                  description: Customer email
                  example: '#####'
                city:
                  type: string
                  description: Customer city
                  example: Berlin
                ward:
                  type: string
                  example: ''
                region:
                  type: string
                  description: Customer region
                  example: ''
                postCode:
                  type: string
                  description: Customer post code
                  example: '10117'
                country:
                  type: string
                  description: Customer country
                  example: Germany
            shipping:
              type: object
              nullable: true
              description: >-
                Info about customer address with restricted access to certain
                fields
              properties:
                firstName:
                  type: string
                  description: Customer first name
                  example: John
                  nullable: true
                lastName:
                  type: string
                  description: Customer last name
                  example: Doe
                  nullable: true
                phone:
                  type: array
                  items:
                    type: string
                  example:
                    - '#####'
                address:
                  type: array
                  items:
                    type: string
                  description: 5 rows to show the address
                  example:
                    - Johannisstr. 20
                    - ''
                    - ''
                    - ''
                    - ''
                email:
                  type: string
                  description: Customer email
                  example: '#####'
                city:
                  type: string
                  description: Customer city
                  example: Berlin
                ward:
                  type: string
                  example: ''
                region:
                  type: string
                  description: Customer region
                  example: ''
                postCode:
                  type: string
                  description: Customer post code
                  example: '10117'
                country:
                  type: string
                  description: Customer country
                  example: Germany
          required:
            - billing
            - shipping
        nationalRegistrationNumber:
          type: string
          nullable: true
          description: It is the registration number of the customer
          example: '11114389'
        payoutPending:
          type: boolean
          description: >-
            Flag that specifies whether the order will generate transactions or
            put them on hold until other requirements are met
          example: false
        gift:
          type: object
          properties:
            option:
              type: boolean
              description: Gift option
              example: false
            message:
              description: Gift message
              example: msg
          required:
            - option
            - message
        voucher:
          type: object
          properties:
            code:
              type: string
              description: Voucher code
              example: code
            type:
              type: string
              description: Voucher type
              example: type
          required:
            - code
            - type
        deliveryInfo:
          type: string
          description: Additional info about delivery
          example: 1 D
        paymentMethod:
          type: string
          description: Order payment method
          example: NpsPayment
        currency:
          type: string
          description: Currency
          example: ARS
        remarks:
          type: string
          description: Additional info about order
          example: ''
        createdAt:
          type: string
          format: datetime
          description: Date and time when the order was created
          example: '2021-09-22T23:21:42.123456Z'
        updatedAt:
          type: string
          format: datetime
          description: >-
            Date and time when the order was updated. The dates returned will
            follow the same format as in the example
          example: '2021-09-22T23:21:42.123456Z'
        addressUpdatedAt:
          type: string
          format: datetime
          description: >-
            Date and time when address was updated last time. The dates returned
            will follow the same format as in the example
          example: '2021-09-22T23:21:42.123456Z'
        exchangeByOrderId:
          type: string
          description: >-
            It indicates that current order is exchange order for other order.
            This field contains a new order ID
          nullable: true
          example: null
        exchangeForOrderId:
          type: string
          description: >-
            It indicates that current order is exchange order for other order.
            This field contains an old order ID
          nullable: true
          example: null
        extraAttributes:
          type: string
          description: Additional attributes set by the seller.
          example: null
        statusList:
          type: object
          description: >-
            Status list from order items as keys with count of items with
            particular status as a value
          example:
            pending: 2
            canceled: 1
        source:
          type: string
          description: Order source
          nullable: true
          example: Zalora MY
        itemCount:
          type: integer
          description: Amount of items in order
          example: 1
        unitPriceSumWithFees:
          type: number
          format: float
          description: Sum of unit prices from items with fees
          example: 10200.5
        shippingFeeSstSum:
          type: number
          format: float
          description: Sum of shipping fee SST tax
          example: 10.5
        grandTotal:
          type: number
          format: float
          description: Sum of paid prices from items with fees
          example: 100.5
        targetToShip:
          type: string
          description: >-
            Promised shipment date. It works only if Promised Shipping Date
            Feature is Enabled. The dates returned will follow the same format
            as in the example
          nullable: true
          example: '2022-12-23T05:36:23.123456Z'
        shipmentProviderType:
          type: string
          description: Calculated shipment provider type across all order items
          nullable: true
          enum:
            - express
            - standard
            - economy
            - digital
            - air
            - surface
            - mixed
            - sameday
          example: standard
        shipmentProviderPreSelected:
          type: boolean
          description: Information if the shipment provider has been pre-selected
          example: true
        packedItemsCount:
          type: integer
          description: Amount of packed order items
          example: 3
        orderItemIds:
          type: array
          items:
            type: integer
          description: Ids of the order items in the order
          example:
            - 1111
        items:
          type: array
          description: Order items
          items:
            type: object
            properties:
              id:
                type: integer
                description: Unique numeric identifier
                example: 1111
              srcId:
                type: string
                description: Order item src ID
                example: MY-32022990
              sellerId:
                type: integer
                description: Seller ID
                example: 11112
              orderId:
                type: integer
                description: Order ID
                example: 111134
              uuid:
                type: string
                description: Unique string ID
                example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
              status:
                type: string
                description: |
                  Order Item status.
                example: pending
                enum:
                  - pending
                  - shipped
                  - canceled
                  - returned
                  - failed
                  - delivered
                  - ready_to_ship
                  - return_shipped_by_customer
                  - return_waiting_for_approval
                  - return_rejected
                  - return_delivered
                  - payment_pending
              isProcessable:
                type: boolean
                description: >-
                  It's true if order item shipment type is not `consignment` and
                  src_status is not `awaiting_fulfillment`
                example: true
              failureReason:
                type: object
                properties:
                  type:
                    type: string
                    description: |
                      Failure reason type.
                    nullable: true
                    example: null
                    enum:
                      - canceled
                      - returned
                      - failed
                      - return_rejected
                      - canceled_system
                  name:
                    type: string
                    description: Reason name
                    nullable: true
                    example: null
                  description:
                    type: string
                    description: Reason description
                    nullable: true
                    example: null
                  details:
                    type: string
                    description: Reason details
                    example: ''
                required:
                  - type
                  - name
                  - description
                  - details
              shipment:
                type: object
                properties:
                  type:
                    type: string
                    description: Shipment type.
                    example: crossdocking
                    enum:
                      - warehouse
                      - dropshipping
                      - crossdocking
                      - dropshipping_crossdocking
                      - crossdocking_dropshipping
                  crossdockingDeliveryType:
                    type: string
                    description: Crossdocking delivery type
                    nullable: true
                    example: null
                    enum:
                      - send_to_warehouse
                      - pickup
                  method:
                    type: string
                    description: >-
                      Shipment method received from the Shop. It is intended to
                      indicate where the order should be send to. Possible
                      options are "home", "pickup", "address", "none"
                    example: home
                    enum:
                      - home
                      - pickup
                      - address
                      - none
                  preProvider:
                    nullable: true
                    description: Pre-defined shipment provider
                    type: object
                    properties:
                      uuid:
                        type: string
                        nullable: true
                        example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                      name:
                        type: string
                        description: Shipment provider name
                        example: DafitiCarrier
                      default:
                        type: boolean
                        description: True if it is the default shipment provider
                        example: true
                      digitalType:
                        type: string
                        description: Digital type
                        nullable: true
                        example: null
                      trackingUrl:
                        type: string
                        description: Tracking URL
                        nullable: true
                        example: https://example.com/tracking/
                    required:
                      - uuid
                      - name
                      - isDefault
                      - digitalType
                      - trackingUrl
                  provider:
                    nullable: true
                    description: Shipment provider
                    type: object
                    properties:
                      uuid:
                        type: string
                        nullable: true
                        example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                      name:
                        type: string
                        description: Shipment provider name
                        example: DafitiCarrier
                      default:
                        type: boolean
                        description: True if it is the default shipment provider
                        example: true
                      digitalType:
                        type: string
                        description: Digital type
                        nullable: true
                        example: null
                      trackingUrl:
                        type: string
                        description: Tracking URL
                        nullable: true
                        example: https://example.com/tracking/
                    required:
                      - uuid
                      - name
                      - isDefault
                      - digitalType
                      - trackingUrl
                  providerPreselected:
                    type: boolean
                    description: Is shipment provider preselected
                    example: false
                  providerProduct:
                    type: string
                    example: ''
                  providerType:
                    type: string
                    description: Shipment provider type
                    nullable: true
                    example: null
                    enum:
                      - express
                      - standard
                      - economy
                      - digital
                      - air
                      - surface
                      - sameday
                  weight:
                    type: number
                    format: float
                    description: Weight
                    example: 0.5
                  trackingCode:
                    type: string
                    description: Tracking code
                    example: '123'
                  preTrackingCode:
                    type: string
                    description: PRE tracking code
                    nullable: true
                    example: null
                required:
                  - type
                  - crossdockingDeliveryType
                  - method
                  - preProvider
                  - provider
                  - providerPreselected
                  - providerProduct
                  - providerType
                  - weight
                  - trackingCode
                  - preTrackingCode
              invoiceNumber:
                type: string
                description: Invoice Number
                nullable: true
                example: 123re
              invoiceAccesskey:
                type: string
                description: Invoice Access Key
                nullable: true
                example: null
              inTransit:
                type: boolean
                description: Order item is in transit
                example: false
              premium:
                type: boolean
                description: The flag indicates if the order item is premium or not
                example: false
              targetToShipAt:
                type: string
                description: >-
                  Promised shipment date. It works only if Promised Shipping
                  Date Feature is Enabled. The dates returned will follow the
                  same format as in the example
                nullable: true
                example: '2022-12-23T05:36:23.123456Z'
              product:
                type: object
                properties:
                  name:
                    type: string
                    description: Product name.
                    example: Short de Baño Azul Topper Slim
                  sku:
                    type: string
                    description: Product SKU
                    example: TO076AT24RKHAR-2474097
                  variation:
                    type: string
                    description: Variation value as received from the Shop
                    nullable: true
                    example: '-'
                  sellerSku:
                    type: string
                    description: Seller SKU
                    example: 164097_L
                required:
                  - name
                  - sku
                  - variation
                  - sellerSku
              unitPrice:
                type: number
                format: float
                description: Order item price
                example: 2499
              taxAmount:
                type: number
                format: float
                description: Tax amount for the order item
                example: 433.71
              taxPercent:
                type: number
                format: float
                description: Tax percent for the order item
                example: 21
              paidPrice:
                type: number
                format: float
                description: Paid price
                example: 2499
              paidCommission:
                type: number
                format: float
                description: Paid commission
                nullable: true
                example: null
              shippingFee:
                type: number
                format: float
                description: Shipping fee
                example: 0
              shippingServiceCost:
                type: number
                format: float
                description: Shipping service cost
                nullable: true
                example: null
              walletCredits:
                type: number
                format: float
                description: >-
                  Indicated that the customer used wallet as payment aside from
                  possible voucher
                example: 0
              storeCredits:
                type: number
                format: float
                description: Store credits
                example: 0
              shippingVoucherAmount:
                type: number
                format: float
                description: Shipping voucher amount
                example: 0
              priceAfterDiscount:
                type: number
                format: float
                description: Price after discount
                example: 0
              salesDueAmount:
                type: number
                format: float
                description: Sales due amount
                example: 245
              itemSerialNumber:
                type: string
                description: Serial number
                nullable: true
                example: null
              abatementRate:
                type: string
                description: Abatement rate
                nullable: true
                example: null
              exciseRate:
                type: string
                description: Excise rate
                nullable: true
                example: null
              hsnCode:
                type: string
                description: HSN code
                nullable: true
                example: null
              codCollectableAmount:
                type: string
                description: Cod collectable amount
                nullable: true
                example: null
              purchase:
                type: object
                properties:
                  orderSrcId:
                    type: integer
                    description: Order src ID
                    nullable: true
                    example: 555
                  orderNumber:
                    type: string
                    description: Order number
                    nullable: true
                    example: MPDS-D1405061201
                  deliveryInfo:
                    type: string
                    description: Delivery info
                    nullable: true
                    example: null
                required:
                  - orderSrcId
                  - orderNumber
                  - deliveryInfo
              createdAt:
                type: string
                format: datetime
                description: Date and time when the order item was created
                example: '2021-09-22T23:21:42.123456Z'
              updatedAt:
                type: string
                format: datetime
                nullable: true
                description: >-
                  Date and time when the order item was updated. The dates
                  returned will follow the same format as in the example
                example: '2021-09-22T23:21:42.123456Z'
              lastStatusChangedAt:
                type: string
                format: datetime
                nullable: true
                description: >
                  Date when the order item status was updated.

                  Not every Order Item update changes its status. This is the
                  difference between this field and updated_at. The dates
                  returned will follow the same format as in the example
                example: '2021-09-22T23:21:42.123456Z'
              warehouseName:
                type: string
                description: Warehouse name
                nullable: true
                example: null
              extraAttributes:
                type: object
                description: >-
                  Extra attributes which were passed to SellerCenter on
                  getMarketPlaceOrders call.
                nullable: true
                properties:
                  installment_fee:
                    type: number
                    format: float
                    description: Installment fee
                    example: 20.5
                  delivery_type:
                    type: string
                    description: Delivery type
                    example: standard
                  has_transfer_shipping_flat_fee:
                    type: boolean
                    description: >-
                      Indicates, whether the order item has transfer shipping
                      flat fee
                    example: false
                  price_excluded_tax:
                    type: number
                    format: float
                    description: Price excluded tax
                    example: 24.99
                  sales_service_tax:
                    type: number
                    format: float
                    description: Sales service tax
                    example: 433.71
                  gst_free:
                    type: string
                    description: Indicates, whether the order item is GST free
                    example: '0'
                  shipping_fee_sst:
                    type: number
                    format: float
                    description: Shipping fee SST
                    example: 10.5
              isHybrid:
                type: boolean
                description: >-
                  Indicates, whether the product is a hybrid product for the
                  Hybrid Depth / Size Fill feature.
                example: false
              isOutlet:
                type: boolean
                description: Indicates, whether the order item has "outlet" flag.
                example: false
              actions:
                type: array
                description: Possible next actions for order item
                example:
                  - status_set_to_shipped
                  - status_set_to_cancelled
                items:
                  type: string
                  enum:
                    - create_manifest
                    - create_pickup_request
                    - generate_checklist
                    - generate_picklist
                    - generate_invoice
                    - generate_shipping_label
                    - generate_shipping_parcel
                    - generate_export_invoice
                    - generate_manifest
                    - generate_carrier_manifest
                    - generate_credit_note
                    - set_invoice_number
                    - set_invoice_access_key
                    - set_tracking_code
                    - set_shipment_provider
                    - status_set_to_delivered
                    - status_set_to_shipped
                    - status_set_to_canceled
                    - status_set_to_packed_by_marketplace
                    - status_set_to_ready_to_ship
                    - status_set_to_returned
                    - status_set_to_rejected
                    - status_set_to_return_rejected
                    - status_set_to_failed_delivery
                    - status_set_to_payment_pending
                    - status_set_to_return_delivered
                    - status_set_to_return_waiting_for_approval
                    - status_set_to_return_shipped_by_customer
              vouchers:
                type: array
                description: Discount list
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: Discount code
                      example: AAA
                    amount:
                      type: number
                      format: float
                      description: Discount amount
                      example: 14.5
                    cashbackPercentage:
                      type: integer
                      description: Promotion defined percentage value for cashback
                      example: 0
                    voucherSellerShare:
                      type: number
                      format: float
                      description: >-
                        Promotion defined percentage value for the voucher,
                        which is covered/funded by the seller
                      example: 0
                    cashbackSellerShare:
                      type: number
                      format: float
                      description: >-
                        Promotion defined percentage value for the cashback,
                        which is covered/funded by the seller
                      example: 0
                    amountFundedBySeller:
                      type: number
                      format: float
                      description: >-
                        Actual calculated amount based on the voucher seller
                        share percentage and the discount amount
                      example: 0
                    cashbackAmountFundedBySeller:
                      type: string
                      description: >-
                        Actual calculated amount based on the cashback seller
                        share percentage and the discount amount
                      example: 0
                  required:
                    - code
                    - amount
                    - cashbackPercentage
                    - voucherSellerShare
                    - cashbackSellerShare
                    - amountFundedBySeller
                    - cashbackAmountFundedBySeller
              manifestStatus:
                example: forward_ready_to_ship
                type: string
                description: Manifest status
                nullable: true
                enum:
                  - forward_ready_to_ship
                  - forward_received
                  - forward_shipped
                  - return_ready_to_ship
                  - return_received
                  - return_shipped
              isPickupRequestSent:
                type: boolean
                example: false
                description: The flag shows if Pickup Request has been sent for the item
              discountAmount:
                type: number
                format: float
                description: Discount value
                example: 0
            required:
              - id
              - srcId
              - sellerId
              - orderId
              - uuid
              - status
              - isProcessable
              - failureReason
              - shipment
              - invoiceNumber
              - invoiceAccesskey
              - inTransit
              - premium
              - targetToShipAt
              - product
              - unitPrice
              - taxAmount
              - taxPercent
              - paidPrice
              - paidCommission
              - shippingFee
              - shippingServiceCost
              - walletCredits
              - storeCredits
              - shippingVoucherAmount
              - priceAfterDiscount
              - salesDueAmount
              - itemSerialNumber
              - abatementRate
              - exciseRate
              - hsnCode
              - codCollectableAmount
              - purchase
              - createdAt
              - updatedAt
              - lastStatusChangedAt
              - warehouseName
              - extraAttributes
              - isHybrid
              - isOutlet
              - actions
              - vouchers
      required:
        - uuid
        - invoiceRequired
        - id
        - sellerId
        - number
        - customer
        - address
        - nationalRegistrationNumber
        - payoutPending
        - gift
        - voucher
        - deliveryInfo
        - paymentMethod
        - currency
        - remarks
        - createdAt
        - updatedAt
        - addressUpdatedAt
        - exchangeByOrderId
        - extraAttributes
        - statusList
        - source
        - itemCount
        - unitPriceSumWithFees
        - targetToShip
        - shipmentProviderPreSelected
        - packedItemsCount
        - orderItemIds
        - items
        - shippingFeeSstSum
    OrderArchive:
      type: object
      properties:
        idSalesOrder:
          type: integer
        srcId:
          type: string
        orderNr:
          type: string
        createdAt:
          type: string
          format: date-time
          nullable: false
        currency:
          type: string
        properties:
          type: object
        SalesOrderComment:
          type: array
          items:
            type: object
            properties:
              src_id:
                type: string
              status:
                type: string
              content:
                type: string
              sc_user:
                type: string
                nullable: true
              username:
                type: string
              is_opened:
                type: integer
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              is_answered:
                type: integer
              comment_type:
                type: string
              source_system:
                type: string
              fk_sales_order:
                type: integer
              fk_sales_order_item:
                type: integer
                nullable: true
              fk_sales_order_comment:
                type: integer
                nullable: true
              id_sales_order_comment:
                type: integer
        salesOrderInvoice:
          type: array
          items:
            type: object
            properties:
              required:
                type: integer
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
              fk_sales_order:
                type: integer
              id_sales_order_invoice:
                type: integer
        OrderItemArchives:
          type: array
          items:
            type: object
            properties:
              idSalesOrderItem:
                type: integer
              fkSeller:
                type: integer
              srcId:
                type: string
              properties:
                type: object
                properties:
                  uuid:
                    type: string
                  source:
                    type: string
                    nullable: true
                  src_id:
                    type: string
                  read_at:
                    type: string
                    nullable: true
                  remarks:
                    type: string
                  currency:
                    type: string
                  order_nr:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  gift_option:
                    type: integer
                  gift_message:
                    type: string
                    nullable: true
                  voucher_code:
                    type: string
                  voucher_type:
                    type: string
                    nullable: true
                  delivery_info:
                    type: string
                  id_sales_order:
                    type: integer
                  payment_method:
                    type: string
                  payout_pending:
                    type: integer
                  src_created_at:
                    type: string
                    format: date-time
                  address_billing:
                    type: string
                  address_shipping:
                    type: string
                  extra_attributes:
                    type: string
                    nullable: true
                  address_updated_at:
                    type: string
                    format: date-time
                  customer_last_name:
                    type: string
                  customer_first_name:
                    type: string
                  national_registration_number:
                    type: string
                    nullable: true
              inventoryStatusHistory:
                type: array
                items:
                  type: object
                  properties:
                    uid:
                      type: string
                    status:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    fk_catalog_product:
                      type: integer
                    fk_sales_order_item:
                      type: integer
                    id_inventory_status_history:
                      type: integer
              orderItemOosCancellation:
                type: array
                items:
                  type: object
                  properties:
                    shop_sku:
                      type: string
                    fk_seller:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    stock_quantity:
                      type: integer
                    stock_updated_at:
                      type: string
                      format: date-time
                    fk_catalog_product:
                      type: integer
                    fk_sales_order_item:
                      type: integer
              returnRequestItem:
                type: array
                items:
                  type: object
                  properties:
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    returnRequest:
                      type: object
                      properties:
                        comment:
                          type: string
                        fk_user:
                          type: integer
                        fk_seller:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                        request_type:
                          type: string
                        shipping_date:
                          type: string
                          format: date-time
                        src_created_at:
                          type: string
                          format: date-time
                        src_updated_at:
                          type: string
                          format: date-time
                        id_return_request:
                          type: integer
                        return_delivery_type:
                          type: string
                        id_supplier_return_oms:
                          type: integer
                        supplier_return_number_oms:
                          type: string
                    src_created_at:
                      type: string
                      format: date-time
                    src_updated_at:
                      type: string
                      format: date-time
                    fk_return_request:
                      type: integer
                    fk_sales_order_item:
                      type: integer
                    id_return_request_item:
                      type: integer
                    fk_return_request_status:
                      type: integer
                    id_supplier_return_item_oms:
                      type: integer
              salesOrderItemProperties:
                type: array
                items:
                  type: object
                  properties:
                    hsn_code:
                      type: string
                    is_outlet:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    excise_rate:
                      type: string
                    abatement_rate:
                      type: string
                    warehouse_name:
                      type: string
                      nullable: true
                    volumetric_size:
                      type: string
                      nullable: true
                    is_free_shipping:
                      type: integer
                    sales_due_amount:
                      type: string
                      nullable: true
                    credit_note_number:
                      type: string
                      nullable: true
                    item_serial_number:
                      type: string
                      nullable: true
                    fk_sales_order_item:
                      type: integer
                    promotion_discounts:
                      type: string
                    cod_collectable_amount:
                      type: string
                      nullable: true
                    id_sales_order_item_properties:
                      type: integer
                    fk_sales_order_item_status_detail:
                      type: string
                      nullable: true
              salesOrderItemStatusHistory:
                type: array
                items:
                  type: object
                  properties:
                    note:
                      type: string
                      nullable: true
                    user:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    src_created_at:
                      type: string
                      nullable: true
                    fk_sales_order_item:
                      type: integer
                    fk_sales_order_item_status:
                      type: integer
                    id_sales_order_item_status_history:
                      type: integer
              salesOrderItemStatusManifestDetailSalesOrderItem:
                type: array
                items:
                  type: object
                  properties:
                    fk_manifest_type:
                      type: integer
                    fk_sales_order_item:
                      type: integer
                    fk_sales_order_item_status_manifest_detail:
                      type: integer
              salesOrderItemStatusTransitionTime:
                type: array
                items:
                  type: object
                  properties:
                    fk_sales_order_item:
                      type: integer
                    created_to_shipped_business_hours:
                      type: integer
              tagManagerSalesOrderItem:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    entity:
                      type: string
                    fk_user:
                      type: integer
                    created_at:
                      type: string
                      format: date-time
                    expiration:
                      type: string
                      nullable: true
                    updated_at:
                      type: string
                      format: date-time
                    description:
                      type: string
                    id_tag_manager_tag:
                      type: integer
              manifestArchives:
                type: array
                items:
                  type: object
                  properties:
                    idManifest:
                      type: integer
                    properties:
                      type: object
                      properties:
                        fk_seller:
                          type: integer
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                        id_manifest:
                          type: integer
                        manifest_code:
                          type: string
                        tracking_code:
                          type: string
                          nullable: true
                        fk_manifest_type:
                          type: integer
                        fk_manifest_status:
                          type: integer
                        fk_shipment_provider:
                          type: string
                          nullable: true
        packageArchives:
          type: array
          items:
            type: object
            properties:
              idPackage:
                type: integer
              properties:
                type: object
                properties:
                  fk_seller:
                    type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  id_package:
                    type: integer
                  package_code:
                    type: string
                  tracking_code:
                    type: string
                    nullable: true
                  fk_package_type:
                    type: integer
                  fk_package_status:
                    type: integer
                  fk_shipment_provider:
                    type: string
                    nullable: true
              packageItem:
                type: string
              documentToken:
                type: string
              salesOrderDocument:
                type: string
    OrderCustomer:
      type: object
      description: Customer name
      properties:
        firstName:
          type: string
          description: First name
          example: John
          nullable: true
        lastName:
          type: string
          description: Last name
          example: Doe
          nullable: true
    OrderAddress:
      type: object
      description: Order address
      properties:
        billing:
          type: object
          nullable: true
          description: Info about customer address with restricted access to certain fields
          properties:
            firstName:
              type: string
              description: Customer first name
              example: John
              nullable: true
            lastName:
              type: string
              description: Customer last name
              example: Doe
              nullable: true
            phone:
              type: array
              items:
                type: string
              example:
                - '#####'
            address:
              type: array
              items:
                type: string
              description: 5 rows to show the address
              example:
                - Johannisstr. 20
                - ''
                - ''
                - ''
                - ''
            email:
              type: string
              description: Customer email
              example: '#####'
            city:
              type: string
              description: Customer city
              example: Berlin
            ward:
              type: string
              example: ''
            region:
              type: string
              description: Customer region
              example: ''
            postCode:
              type: string
              description: Customer post code
              example: '10117'
            country:
              type: string
              description: Customer country
              example: Germany
        shipping:
          type: object
          nullable: true
          description: Info about customer address with restricted access to certain fields
          properties:
            firstName:
              type: string
              description: Customer first name
              example: John
              nullable: true
            lastName:
              type: string
              description: Customer last name
              example: Doe
              nullable: true
            phone:
              type: array
              items:
                type: string
              example:
                - '#####'
            address:
              type: array
              items:
                type: string
              description: 5 rows to show the address
              example:
                - Johannisstr. 20
                - ''
                - ''
                - ''
                - ''
            email:
              type: string
              description: Customer email
              example: '#####'
            city:
              type: string
              description: Customer city
              example: Berlin
            ward:
              type: string
              example: ''
            region:
              type: string
              description: Customer region
              example: ''
            postCode:
              type: string
              description: Customer post code
              example: '10117'
            country:
              type: string
              description: Customer country
              example: Germany
      required:
        - billing
        - shipping
    OrderAddressItem:
      type: object
      nullable: true
      description: Info about customer address with restricted access to certain fields
      properties:
        firstName:
          type: string
          description: Customer first name
          example: John
          nullable: true
        lastName:
          type: string
          description: Customer last name
          example: Doe
          nullable: true
        phone:
          type: array
          items:
            type: string
          example:
            - '#####'
        address:
          type: array
          items:
            type: string
          description: 5 rows to show the address
          example:
            - Johannisstr. 20
            - ''
            - ''
            - ''
            - ''
        email:
          type: string
          description: Customer email
          example: '#####'
        city:
          type: string
          description: Customer city
          example: Berlin
        ward:
          type: string
          example: ''
        region:
          type: string
          description: Customer region
          example: ''
        postCode:
          type: string
          description: Customer post code
          example: '10117'
        country:
          type: string
          description: Customer country
          example: Germany
    OrderGift:
      type: object
      properties:
        option:
          type: boolean
          description: Gift option
          example: false
        message:
          description: Gift message
          example: msg
      required:
        - option
        - message
    OrderVoucher:
      type: object
      properties:
        code:
          type: string
          description: Voucher code
          example: code
        type:
          type: string
          description: Voucher type
          example: type
      required:
        - code
        - type
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          description: Unique numeric identifier
          example: 1111
        srcId:
          type: string
          description: Order item src ID
          example: MY-32022990
        sellerId:
          type: integer
          description: Seller ID
          example: 11112
        orderId:
          type: integer
          description: Order ID
          example: 111134
        uuid:
          type: string
          description: Unique string ID
          example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
        status:
          type: string
          description: |
            Order Item status.
          example: pending
          enum:
            - pending
            - shipped
            - canceled
            - returned
            - failed
            - delivered
            - ready_to_ship
            - return_shipped_by_customer
            - return_waiting_for_approval
            - return_rejected
            - return_delivered
            - payment_pending
        isProcessable:
          type: boolean
          description: >-
            It's true if order item shipment type is not `consignment` and
            src_status is not `awaiting_fulfillment`
          example: true
        failureReason:
          type: object
          properties:
            type:
              type: string
              description: |
                Failure reason type.
              nullable: true
              example: null
              enum:
                - canceled
                - returned
                - failed
                - return_rejected
                - canceled_system
            name:
              type: string
              description: Reason name
              nullable: true
              example: null
            description:
              type: string
              description: Reason description
              nullable: true
              example: null
            details:
              type: string
              description: Reason details
              example: ''
          required:
            - type
            - name
            - description
            - details
        shipment:
          type: object
          properties:
            type:
              type: string
              description: Shipment type.
              example: crossdocking
              enum:
                - warehouse
                - dropshipping
                - crossdocking
                - dropshipping_crossdocking
                - crossdocking_dropshipping
            crossdockingDeliveryType:
              type: string
              description: Crossdocking delivery type
              nullable: true
              example: null
              enum:
                - send_to_warehouse
                - pickup
            method:
              type: string
              description: >-
                Shipment method received from the Shop. It is intended to
                indicate where the order should be send to. Possible options are
                "home", "pickup", "address", "none"
              example: home
              enum:
                - home
                - pickup
                - address
                - none
            preProvider:
              nullable: true
              description: Pre-defined shipment provider
              type: object
              properties:
                uuid:
                  type: string
                  nullable: true
                  example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                name:
                  type: string
                  description: Shipment provider name
                  example: DafitiCarrier
                default:
                  type: boolean
                  description: True if it is the default shipment provider
                  example: true
                digitalType:
                  type: string
                  description: Digital type
                  nullable: true
                  example: null
                trackingUrl:
                  type: string
                  description: Tracking URL
                  nullable: true
                  example: https://example.com/tracking/
              required:
                - uuid
                - name
                - isDefault
                - digitalType
                - trackingUrl
            provider:
              nullable: true
              description: Shipment provider
              type: object
              properties:
                uuid:
                  type: string
                  nullable: true
                  example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                name:
                  type: string
                  description: Shipment provider name
                  example: DafitiCarrier
                default:
                  type: boolean
                  description: True if it is the default shipment provider
                  example: true
                digitalType:
                  type: string
                  description: Digital type
                  nullable: true
                  example: null
                trackingUrl:
                  type: string
                  description: Tracking URL
                  nullable: true
                  example: https://example.com/tracking/
              required:
                - uuid
                - name
                - isDefault
                - digitalType
                - trackingUrl
            providerPreselected:
              type: boolean
              description: Is shipment provider preselected
              example: false
            providerProduct:
              type: string
              example: ''
            providerType:
              type: string
              description: Shipment provider type
              nullable: true
              example: null
              enum:
                - express
                - standard
                - economy
                - digital
                - air
                - surface
                - sameday
            weight:
              type: number
              format: float
              description: Weight
              example: 0.5
            trackingCode:
              type: string
              description: Tracking code
              example: '123'
            preTrackingCode:
              type: string
              description: PRE tracking code
              nullable: true
              example: null
          required:
            - type
            - crossdockingDeliveryType
            - method
            - preProvider
            - provider
            - providerPreselected
            - providerProduct
            - providerType
            - weight
            - trackingCode
            - preTrackingCode
        invoiceNumber:
          type: string
          description: Invoice Number
          nullable: true
          example: 123re
        invoiceAccesskey:
          type: string
          description: Invoice Access Key
          nullable: true
          example: null
        inTransit:
          type: boolean
          description: Order item is in transit
          example: false
        premium:
          type: boolean
          description: The flag indicates if the order item is premium or not
          example: false
        targetToShipAt:
          type: string
          description: >-
            Promised shipment date. It works only if Promised Shipping Date
            Feature is Enabled. The dates returned will follow the same format
            as in the example
          nullable: true
          example: '2022-12-23T05:36:23.123456Z'
        product:
          type: object
          properties:
            name:
              type: string
              description: Product name.
              example: Short de Baño Azul Topper Slim
            sku:
              type: string
              description: Product SKU
              example: TO076AT24RKHAR-2474097
            variation:
              type: string
              description: Variation value as received from the Shop
              nullable: true
              example: '-'
            sellerSku:
              type: string
              description: Seller SKU
              example: 164097_L
          required:
            - name
            - sku
            - variation
            - sellerSku
        unitPrice:
          type: number
          format: float
          description: Order item price
          example: 2499
        taxAmount:
          type: number
          format: float
          description: Tax amount for the order item
          example: 433.71
        taxPercent:
          type: number
          format: float
          description: Tax percent for the order item
          example: 21
        paidPrice:
          type: number
          format: float
          description: Paid price
          example: 2499
        paidCommission:
          type: number
          format: float
          description: Paid commission
          nullable: true
          example: null
        shippingFee:
          type: number
          format: float
          description: Shipping fee
          example: 0
        shippingServiceCost:
          type: number
          format: float
          description: Shipping service cost
          nullable: true
          example: null
        walletCredits:
          type: number
          format: float
          description: >-
            Indicated that the customer used wallet as payment aside from
            possible voucher
          example: 0
        storeCredits:
          type: number
          format: float
          description: Store credits
          example: 0
        shippingVoucherAmount:
          type: number
          format: float
          description: Shipping voucher amount
          example: 0
        priceAfterDiscount:
          type: number
          format: float
          description: Price after discount
          example: 0
        salesDueAmount:
          type: number
          format: float
          description: Sales due amount
          example: 245
        itemSerialNumber:
          type: string
          description: Serial number
          nullable: true
          example: null
        abatementRate:
          type: string
          description: Abatement rate
          nullable: true
          example: null
        exciseRate:
          type: string
          description: Excise rate
          nullable: true
          example: null
        hsnCode:
          type: string
          description: HSN code
          nullable: true
          example: null
        codCollectableAmount:
          type: string
          description: Cod collectable amount
          nullable: true
          example: null
        purchase:
          type: object
          properties:
            orderSrcId:
              type: integer
              description: Order src ID
              nullable: true
              example: 555
            orderNumber:
              type: string
              description: Order number
              nullable: true
              example: MPDS-D1405061201
            deliveryInfo:
              type: string
              description: Delivery info
              nullable: true
              example: null
          required:
            - orderSrcId
            - orderNumber
            - deliveryInfo
        createdAt:
          type: string
          format: datetime
          description: Date and time when the order item was created
          example: '2021-09-22T23:21:42.123456Z'
        updatedAt:
          type: string
          format: datetime
          nullable: true
          description: >-
            Date and time when the order item was updated. The dates returned
            will follow the same format as in the example
          example: '2021-09-22T23:21:42.123456Z'
        lastStatusChangedAt:
          type: string
          format: datetime
          nullable: true
          description: >
            Date when the order item status was updated.

            Not every Order Item update changes its status. This is the
            difference between this field and updated_at. The dates returned
            will follow the same format as in the example
          example: '2021-09-22T23:21:42.123456Z'
        warehouseName:
          type: string
          description: Warehouse name
          nullable: true
          example: null
        extraAttributes:
          type: object
          description: >-
            Extra attributes which were passed to SellerCenter on
            getMarketPlaceOrders call.
          nullable: true
          properties:
            installment_fee:
              type: number
              format: float
              description: Installment fee
              example: 20.5
            delivery_type:
              type: string
              description: Delivery type
              example: standard
            has_transfer_shipping_flat_fee:
              type: boolean
              description: Indicates, whether the order item has transfer shipping flat fee
              example: false
            price_excluded_tax:
              type: number
              format: float
              description: Price excluded tax
              example: 24.99
            sales_service_tax:
              type: number
              format: float
              description: Sales service tax
              example: 433.71
            gst_free:
              type: string
              description: Indicates, whether the order item is GST free
              example: '0'
            shipping_fee_sst:
              type: number
              format: float
              description: Shipping fee SST
              example: 10.5
        isHybrid:
          type: boolean
          description: >-
            Indicates, whether the product is a hybrid product for the Hybrid
            Depth / Size Fill feature.
          example: false
        isOutlet:
          type: boolean
          description: Indicates, whether the order item has "outlet" flag.
          example: false
        actions:
          type: array
          description: Possible next actions for order item
          example:
            - status_set_to_shipped
            - status_set_to_cancelled
          items:
            type: string
            enum:
              - create_manifest
              - create_pickup_request
              - generate_checklist
              - generate_picklist
              - generate_invoice
              - generate_shipping_label
              - generate_shipping_parcel
              - generate_export_invoice
              - generate_manifest
              - generate_carrier_manifest
              - generate_credit_note
              - set_invoice_number
              - set_invoice_access_key
              - set_tracking_code
              - set_shipment_provider
              - status_set_to_delivered
              - status_set_to_shipped
              - status_set_to_canceled
              - status_set_to_packed_by_marketplace
              - status_set_to_ready_to_ship
              - status_set_to_returned
              - status_set_to_rejected
              - status_set_to_return_rejected
              - status_set_to_failed_delivery
              - status_set_to_payment_pending
              - status_set_to_return_delivered
              - status_set_to_return_waiting_for_approval
              - status_set_to_return_shipped_by_customer
        vouchers:
          type: array
          description: Discount list
          items:
            type: object
            properties:
              code:
                type: string
                description: Discount code
                example: AAA
              amount:
                type: number
                format: float
                description: Discount amount
                example: 14.5
              cashbackPercentage:
                type: integer
                description: Promotion defined percentage value for cashback
                example: 0
              voucherSellerShare:
                type: number
                format: float
                description: >-
                  Promotion defined percentage value for the voucher, which is
                  covered/funded by the seller
                example: 0
              cashbackSellerShare:
                type: number
                format: float
                description: >-
                  Promotion defined percentage value for the cashback, which is
                  covered/funded by the seller
                example: 0
              amountFundedBySeller:
                type: number
                format: float
                description: >-
                  Actual calculated amount based on the voucher seller share
                  percentage and the discount amount
                example: 0
              cashbackAmountFundedBySeller:
                type: string
                description: >-
                  Actual calculated amount based on the cashback seller share
                  percentage and the discount amount
                example: 0
            required:
              - code
              - amount
              - cashbackPercentage
              - voucherSellerShare
              - cashbackSellerShare
              - amountFundedBySeller
              - cashbackAmountFundedBySeller
        manifestStatus:
          example: forward_ready_to_ship
          type: string
          description: Manifest status
          nullable: true
          enum:
            - forward_ready_to_ship
            - forward_received
            - forward_shipped
            - return_ready_to_ship
            - return_received
            - return_shipped
        isPickupRequestSent:
          type: boolean
          example: false
          description: The flag shows if Pickup Request has been sent for the item
        discountAmount:
          type: number
          format: float
          description: Discount value
          example: 0
      required:
        - id
        - srcId
        - sellerId
        - orderId
        - uuid
        - status
        - isProcessable
        - failureReason
        - shipment
        - invoiceNumber
        - invoiceAccesskey
        - inTransit
        - premium
        - targetToShipAt
        - product
        - unitPrice
        - taxAmount
        - taxPercent
        - paidPrice
        - paidCommission
        - shippingFee
        - shippingServiceCost
        - walletCredits
        - storeCredits
        - shippingVoucherAmount
        - priceAfterDiscount
        - salesDueAmount
        - itemSerialNumber
        - abatementRate
        - exciseRate
        - hsnCode
        - codCollectableAmount
        - purchase
        - createdAt
        - updatedAt
        - lastStatusChangedAt
        - warehouseName
        - extraAttributes
        - isHybrid
        - isOutlet
        - actions
        - vouchers
    OrderItemReturn:
      type: object
      properties:
        orderItemId:
          type: integer
          nullable: false
          description: Order Item Id
        returnComment:
          type: string
          nullable: true
          description: Return comment
        shipmentProvider:
          type: string
          nullable: true
          description: Shipment Provider
        srcId:
          type: string
          nullable: true
          description: Src Id
        trackingCode:
          type: string
          nullable: true
          description: Tracking code
      required:
        - orderItemId
        - returnComment
        - shipmentProvider
        - srcId
        - trackingCode
    OrderItemReturns:
      type: array
      description: Collection of Return objects for given Order Items Ids
      items:
        type: object
        properties:
          orderItemId:
            type: integer
            nullable: false
            description: Order Item Id
          returnComment:
            type: string
            nullable: true
            description: Return comment
          shipmentProvider:
            type: string
            nullable: true
            description: Shipment Provider
          srcId:
            type: string
            nullable: true
            description: Src Id
          trackingCode:
            type: string
            nullable: true
            description: Tracking code
        required:
          - orderItemId
          - returnComment
          - shipmentProvider
          - srcId
          - trackingCode
    OrderItemProduct:
      type: object
      properties:
        name:
          type: string
          description: Product name.
          example: Short de Baño Azul Topper Slim
        sku:
          type: string
          description: Product SKU
          example: TO076AT24RKHAR-2474097
        variation:
          type: string
          description: Variation value as received from the Shop
          nullable: true
          example: '-'
        sellerSku:
          type: string
          description: Seller SKU
          example: 164097_L
      required:
        - name
        - sku
        - variation
        - sellerSku
    OrderItemDigital:
      type: object
      properties:
        isDigital:
          type: boolean
          example: false
        deliveryInfo:
          type: string
          nullable: true
          example: null
    OrderItemPurchase:
      type: object
      properties:
        orderSrcId:
          type: integer
          description: Order src ID
          nullable: true
          example: 555
        orderNumber:
          type: string
          description: Order number
          nullable: true
          example: MPDS-D1405061201
        deliveryInfo:
          type: string
          description: Delivery info
          nullable: true
          example: null
      required:
        - orderSrcId
        - orderNumber
        - deliveryInfo
    OrderItemFailureReason:
      type: object
      properties:
        type:
          type: string
          description: |
            Failure reason type.
          nullable: true
          example: null
          enum:
            - canceled
            - returned
            - failed
            - return_rejected
            - canceled_system
        name:
          type: string
          description: Reason name
          nullable: true
          example: null
        description:
          type: string
          description: Reason description
          nullable: true
          example: null
        details:
          type: string
          description: Reason details
          example: ''
      required:
        - type
        - name
        - description
        - details
    OrderItemShipment:
      type: object
      properties:
        type:
          type: string
          description: Shipment type.
          example: crossdocking
          enum:
            - warehouse
            - dropshipping
            - crossdocking
            - dropshipping_crossdocking
            - crossdocking_dropshipping
        crossdockingDeliveryType:
          type: string
          description: Crossdocking delivery type
          nullable: true
          example: null
          enum:
            - send_to_warehouse
            - pickup
        method:
          type: string
          description: >-
            Shipment method received from the Shop. It is intended to indicate
            where the order should be send to. Possible options are "home",
            "pickup", "address", "none"
          example: home
          enum:
            - home
            - pickup
            - address
            - none
        preProvider:
          nullable: true
          description: Pre-defined shipment provider
          type: object
          properties:
            uuid:
              type: string
              nullable: true
              example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
            name:
              type: string
              description: Shipment provider name
              example: DafitiCarrier
            default:
              type: boolean
              description: True if it is the default shipment provider
              example: true
            digitalType:
              type: string
              description: Digital type
              nullable: true
              example: null
            trackingUrl:
              type: string
              description: Tracking URL
              nullable: true
              example: https://example.com/tracking/
          required:
            - uuid
            - name
            - isDefault
            - digitalType
            - trackingUrl
        provider:
          nullable: true
          description: Shipment provider
          type: object
          properties:
            uuid:
              type: string
              nullable: true
              example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
            name:
              type: string
              description: Shipment provider name
              example: DafitiCarrier
            default:
              type: boolean
              description: True if it is the default shipment provider
              example: true
            digitalType:
              type: string
              description: Digital type
              nullable: true
              example: null
            trackingUrl:
              type: string
              description: Tracking URL
              nullable: true
              example: https://example.com/tracking/
          required:
            - uuid
            - name
            - isDefault
            - digitalType
            - trackingUrl
        providerPreselected:
          type: boolean
          description: Is shipment provider preselected
          example: false
        providerProduct:
          type: string
          example: ''
        providerType:
          type: string
          description: Shipment provider type
          nullable: true
          example: null
          enum:
            - express
            - standard
            - economy
            - digital
            - air
            - surface
            - sameday
        weight:
          type: number
          format: float
          description: Weight
          example: 0.5
        trackingCode:
          type: string
          description: Tracking code
          example: '123'
        preTrackingCode:
          type: string
          description: PRE tracking code
          nullable: true
          example: null
      required:
        - type
        - crossdockingDeliveryType
        - method
        - preProvider
        - provider
        - providerPreselected
        - providerProduct
        - providerType
        - weight
        - trackingCode
        - preTrackingCode
    OrderItemShipmentProvider:
      type: object
      properties:
        uuid:
          type: string
          nullable: true
          example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
        name:
          type: string
          description: Shipment provider name
          example: DafitiCarrier
        default:
          type: boolean
          description: True if it is the default shipment provider
          example: true
        digitalType:
          type: string
          description: Digital type
          nullable: true
          example: null
        trackingUrl:
          type: string
          description: Tracking URL
          nullable: true
          example: https://example.com/tracking/
      required:
        - uuid
        - name
        - isDefault
        - digitalType
        - trackingUrl
    OrderItemPackage:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 123
        srcId:
          type: string
          description: Package src ID
          nullable: true
          example: MY-32022990
        orderItemIds:
          type: array
          description: Order items ids within package
          example:
            - 144
            - 152
          items:
            type: integer
      required:
        - id
        - orderItemIds
    OrderItemInputFailureReason:
      type: object
      properties:
        reason:
          type: string
          example: Changed mind
          nullable: true
    OrderItemInputFailureReasonAndDetails:
      type: object
      required:
        - reason
      properties:
        reason:
          type: string
          description: >-
            Failure reason. The list of reasons you can find
            /v2/orders-failure-reasons.
          example: Not reachable
        reasonDetail:
          type: string
          description: Additional information
          example: Details
          nullable: true
    OrderFinance:
      type: object
      properties:
        orderId:
          type: integer
          description: Order Id
          example: 1
        currency:
          type: string
          description: Order currency
          example: USD
        shippingFeeItems:
          type: number
          format: float
          description: Sum of Order Item shipping fee.
          example: 23.43
        shippingServiceCostItems:
          type: number
          format: float
          description: Sum of Order Item shipping service cost.
          example: 43.43
        voucherTotal:
          type: number
          format: float
          description: Sum of Order Item vouchers.
          example: 150.3
        grandTotal:
          type: number
          format: float
          description: Total price
          example: 250.23
        unitPrice:
          type: number
          format: float
          description: Order price
          example: 2499
        taxAmount:
          type: number
          format: float
          description: Tax amount
          example: 433.71
        paidPrice:
          type: number
          format: float
          description: Paid price
          example: 2499
        walletCredits:
          type: number
          format: float
          description: >-
            Indicated that the customer used wallet as payment aside from
            possible voucher
          example: 0
        storeCredits:
          type: number
          format: float
          description: Store credits
          example: 0
        shippingVoucherAmount:
          type: number
          format: float
          description: Shipping voucher amount
          example: 0
        transactionSummary:
          type: array
          description: Calculated transaction data for Order
          items:
            type: object
            properties:
              transactionTypeId:
                type: integer
                description: Transaction Type Id
                example: 22
              description:
                type: string
                description: >-
                  The description is taken from the TRE group or from the
                  description of the transaction type.
                example: Commission
              amount:
                type: number
                format: float
                description: Amount
                example: 54.43
              currency:
                type: string
                description: Currency
                example: USD
            required:
              - transactionTypeId
              - description
              - amount
              - currency
        installmentFee:
          type: number
          format: float
          description: Installment fee
          example: 20.5
        numberOfInstallments:
          type: integer
          description: Number of installments
          example: 3
        shippingFeeSstSum:
          type: number
          format: float
          description: Sum of shipping fee SST tax
          example: 10.5
      required:
        - orderId
        - currency
        - shippingFeeItems
        - shippingServiceCostItems
        - voucherTotal
        - grandTotal
        - unitPrice
        - taxAmount
        - paidPrice
        - walletCredits
        - storeCredits
        - shippingVoucherAmount
        - transactionSummary
        - installmentFee
        - numberOfInstallments
        - shippingFeeSstSum
    InvoiceNumber:
      type: object
      properties:
        generationType:
          type: string
          description: Generation type
          example: autoincrement_number | order_number | show_dialog
        prefix:
          type: string
          description: Prefix for the credit note number
          example: ABC
        nextNumber:
          type: integer
          description: The next number
          example: 123
        nextFormatedValue:
          type: string
          description: The next formated value
          example: ABC123
    ReuploadAccepted:
      type: object
      properties:
        success:
          type: boolean
          example: true
    SellerRead:
      type: object
      properties:
        id:
          type: integer
          example: 32
        uuid:
          type: string
          example: 093a9e34-xxxx-xxxx-xxxx-53766e338abf
        srcId:
          type: string
          example: '131'
          description: >-
            ID of the seller in the shop system. It is intentionally a string as
            in some systems this ID may be not numeric.
        shortCode:
          type: string
          example: CI100AA
        status:
          type: string
          example: active
          enum:
            - active
            - inactive
            - deleted
        name:
          type: string
          example: GFG eCommerce Technologies GmbH
        companyName:
          type: string
          example: GFG eCommerce Technologies GmbH
        email:
          type: string
          example: seller@example.com
        taxClass:
          type: string
          example: national
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        verified:
          type: boolean
        listed:
          type: boolean
          example: false
        delistReasons:
          type: array
          items:
            type: object
            properties:
              reasonIdentifier:
                type: integer
                example: 1
              reason:
                type: string
                description: Reason for why the seller was delisted
                enum:
                  - USER_DEFINED
                  - HOLIDAY_MODE
                  - DAILY_ORDER_LIMIT
                  - PENDING_ORDER_LIMIT
                  - PENDING_TO_SHIPPED_ORDER_LIMIT
                example: DAILY_ORDER_LIMIT
              message:
                type: string
                description: >-
                  Message for why the seller was delisted. This text might be
                  shown to the seller but will not be translated.
                example: Daily Order Limit reached
              reasonLimit:
                type: integer
                description: >
                  Optional limit for the delisted reason. E.g., the reason
                  DAILY_ORDER_LIMIT might have a limit of 100 orders per day.
                example: 100
        profileFields:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: shop_name
              displayValue:
                type: string
                description: >
                  Some fields, like dropdowns, have different internal values
                  and "human readable" value. For example,

                  field "country" can have internal value "CL" and display value
                  "Chile". In most cases, however, 

                  displayValue is equal to value.
                example: some name
              value:
                type: string
                example: some name
    SellerProfileGeneralRead:
      type: object
      properties:
        id:
          type: integer
          example: 123
        value:
          type: string
          example: 000-111-222-33345
          description: >
            If type=file then value is json string with two fields:
            "originalName" and "url". url - is a temporal link Example:
            {"originalName": "file1.pdf", "url":
            "https://some-s3-bucket.s3.amazonaws.com/path/to/your/object?Expires=EXPIRATION_TIMESTAMP&Signature=SIGNATURE"}
            If type<>file then value is plain value that can be presented in the
            UI
    SellerProfileGeneralWrite:
      type: object
      properties:
        id:
          type: integer
          example: 123
        value:
          type: string
          example: 000-111-222-33345
    SellerContractIds:
      type: object
      required:
        - contractIds
      properties:
        contractIds:
          type: array
          items:
            type: integer
          example:
            - 123456
            - 654321
    Manifest:
      description: Manifest
      type: object
      properties:
        manifestId:
          example: 68
          type: integer
        shipmentProvider:
          example: DHL
          type: string
        trackingCode:
          example: 123ABC456EFG
          type: string
        type:
          example: forward
          type: string
          enum:
            - forward
            - return
        manifestCode:
          example: 123ABC456EFG
          type: string
        orderItems:
          type: array
          items:
            description: OrderItem
            type: object
            properties:
              orderItemId:
                example: 1
                type: integer
              returnReason:
                example: Product not available
                type: string
        actions:
          type: array
          items:
            type: string
            enum:
              - print_manifest
              - status_set_to_shipped
              - print_credit_note
        status:
          example: forward_ready_to_ship
          type: string
          enum:
            - forward_ready_to_ship
            - forward_received
            - forward_shipped
            - return_ready_to_ship
            - return_received
            - return_shipped
        packagesCount:
          example: 1
          type: integer
        createdAt:
          description: Created At
          type: string
          format: date-time
          example: '2022-05-04T12:39:13+00:00'
    ManifestDetail:
      description: Manifest
      type: object
      properties:
        manifestId:
          example: 68
          type: integer
          description: Manifest Id
        manifestCode:
          example: my-4231
          type: string
          description: Manifest code
        trackingCode:
          example: 123ABC456EFG
          type: string
          description: Tracking Code
        orderItems:
          type: array
          items:
            description: OrderItem
            type: object
            properties:
              orderItemId:
                example: 1
                type: integer
              returnReason:
                example: Product not available
                type: string
        status:
          example: forward_ready_to_ship
          type: string
          description: Manifest status
          enum:
            - forward_ready_to_ship
            - forward_received
            - forward_shipped
            - return_ready_to_ship
            - return_received
            - return_shipped
        type:
          type: string
          description: Manifest type
          example: forward
          enum:
            - forward
            - return
        shipmentProviderId:
          example: 1
          type: integer
          description: Shipment Provider Id
          nullable: true
        createdAt:
          description: Created At
          type: string
          format: date-time
          example: '2022-05-04T12:39:13+00:00'
        sellerId:
          type: integer
          description: Seller Id
          example: 1
      required:
        - id
        - code
        - trackingCode
        - status
        - type
        - shipmentProviderId
        - createdAt
        - sellerId
    ManifestDocument:
      type: object
      properties:
        DocumentType:
          example: manifest
          type: string
        MimeType:
          example: text/html
          type: string
        File:
          example: 0eWxlPmJvZHkgeyBmb250LXNpemU6MTBweDsgZm9udC1mYW1pbHk
          type: string
          description: the manifest file encoded base64
    ManifestOrderItem:
      description: OrderItem
      type: object
      properties:
        orderItemId:
          example: 1
          type: integer
        returnReason:
          example: Product not available
          type: string
    ExportItem:
      type: object
      properties:
        id:
          type: integer
        userId:
          example: 524
          type: integer
          description: >
            ID of user who triggered export. When you request exports you can
            see also exports

            which were created by another users from the same Seller
        sellerId:
          example: 4089
          type: integer
        status:
          type: string
          enum:
            - Finished
            - Processing
            - Error
            - Queued
            - Expired
        isDeleted:
          type: boolean
          description: >
            Export files has limited time of storage and after it they are
            deleted. This

            flag indicates that physical was already deleted and if you need to
            download

            this export then you will need to generate it again.
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
          description: datetime when this export file scheduled for deletion
        requestedFormats:
          type: array
          description: formats which were requested for export
          items:
            type: string
            enum:
              - csv
              - xlsx
        downloadLinks:
          type: array
          items:
            type: string
          description: |
            list of relative links to download export files. For some types of
            export files are generated in several formats, therefore you may
            have several links to download files.
        exportContent:
          example: Products - Shoes
          type: string
          description: >
            short description of export file to distinguish between different
            export items
        uuid:
          example: a8fd052d-f29a-471a-b92b-52bb0d2c0be4
          type: string
          description: |
            Unique identifier of file. You can use it to download file.
        note:
          type: string
          description: >
            Note on export item. It can be used to store some additional
            information eg. failure reason
    ProductSetsImages:
      type: array
      items:
        type: object
        properties:
          productSetId:
            type: integer
            example: 5
          images:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 1357
                displayUrl:
                  type: string
                  description: URL of the image
                  example: https://example.com/image-1.jpg
                srcId:
                  type: string
                  nullable: true
                  description: >-
                    ID of image in Shop system. If null means that image was not
                    yet synchronized with Shop and is not visible to end
                    customers.
                  example: '39487664'
    ProductSetsCoverImages:
      type: array
      items:
        type: object
        properties:
          productSetId:
            type: integer
            example: 5
          imageUrl:
            type: string
            nullable: true
            example: https://example.com/image-1.jpg
    ProductSkusImages:
      type: array
      items:
        type: object
        properties:
          productSetId:
            type: integer
            nullable: false
            example: 5
          shopSku:
            description: >
              SKU on the shop's side. Usually it is visible to end customer. If
              value is null, it means that product is not yet

              synchronized with shop and SKU was not assigned.
            type: string
            example: NI464AKLCEZ0
            nullable: false
            readOnly: true
          sellerSku:
            description: >
              SKU from seller's side. Should be unique across products of
              seller.
            type: string
            example: shoe-123
          mainImageUrl:
            type: string
            nullable: true
            example: https://example.com/image-1.jpg
    ProductSetsTags:
      type: array
      items:
        type: object
        properties:
          tagId:
            type: integer
            nullable: true
            example: 5
          tagName:
            type: string
            nullable: true
            example: Fresh products
          productSetId:
            type: integer
            nullable: false
            example: 5
    Rating:
      type: object
      properties:
        overallScore:
          description: Overall rating of seller
          type: number
          format: float
          example: 10
        endDate:
          description: Seller rating's end date
          type: string
          format: date-time
          example: '2022-05-22T23:59:59+00:00'
        calculationDate:
          description: Seller rating's calculation date
          type: string
          format: date-time
          example: '2022-05-22T23:59:59+00:00'
        kpis:
          description: List of KPIs
          type: array
          items:
            type: object
            properties:
              name:
                description: name of the KPI
                type: string
                example: Average Business Delivery Time From Shipped
              period:
                description: calculation period of the KPI by day
                type: integer
                example: 30
              kpiValue:
                description: KPI value
                type: number
                format: float
                example: 1
              kpiUnit:
                description: unit KPI value
                type: string
                example: hrs
              rating:
                description: KPI rating
                type: string
                example: Extremely Good
              score:
                description: KPI score
                type: number
                format: float
                example: 1
              weight:
                description: KPI weight
                type: number
                format: float
                example: 10
              sellerRatingScore:
                description: Actual score per KPI
                type: number
                format: float
                example: 10
    Statistics:
      type: object
      properties:
        LastDataUpdate:
          description: >-
            As response is cached, this value informs you on datetime when
            statistics were gathered.
          type: string
          format: date-time
          example: '2022-05-22T23:59:59+00:00'
        result:
          description: Seller rating's end date
          type: object
          properties:
            Products:
              type: object
              properties:
                Total:
                  type: integer
                  description: Total number of products
                  example: 131
                Status:
                  type: object
                  properties:
                    Active:
                      description: Number of active products
                      type: string
                      example: 22
                    All:
                      description: Number of all products
                      type: string
                      example: 32
                    Deleted:
                      description: Number of deleted products
                      type: string
                      example: 2
                    ImageMissing:
                      description: Number of products with image missing
                      type: string
                      example: 5
                    Inactive:
                      description: Number of inactive products
                      type: string
                      example: 3
                    Live:
                      description: Number of live products
                      type: string
                      example: 4
                    Pending:
                      description: Number of product pending
                      type: string
                      example: 8
                    PoorQuality:
                      description: Number of products with poor quality
                      type: string
                      example: 9
                    SoldOut:
                      description: Number of sold out products
                      type: string
                      example: 15
            Orders:
              type: object
              properties:
                Status:
                  type: object
                  properties:
                    Canceled:
                      description: Number of canceled orders
                      type: integer
                    Delivered:
                      description: Number of delivered orders
                      type: integer
                    Digital:
                      description: Number of digital orders
                      type: integer
                    Economy:
                      description: Number of Economy shipping type status orders
                      type: integer
                    Express:
                      description: Number of Express shipping type status orders
                      type: integer
                    Failed:
                      description: Number of failed orders
                      type: integer
                    NoExtInvoiceKey:
                      description: Number of orders with no external invoice key
                      type: integer
                    NotPrintedPending:
                      description: Number of not printed pending orders
                      type: integer
                    NotPrintedReadyToShip:
                      description: Number of not printed ready to ship orders
                      type: integer
                    Pending:
                      description: Number of pending orders
                      type: integer
                    ReadyToShip:
                      description: Number of ready to ship orders
                      type: integer
                    ReturnRejected:
                      description: Number of orders with return rejected
                      type: integer
                    ReturnShippedByCustomer:
                      description: Number of orders shipped by the customer
                      type: integer
                    ReturnWaitingForApproval:
                      description: Number of orders with return waiting for approval
                      type: integer
                    Returned:
                      description: Number of returned orders
                      type: integer
                    Shipped:
                      description: Number of shipped orders
                      type: integer
                    Standard:
                      description: Number of orders with Standard shipping type
                      type: integer
                Total:
                  type: integer
                  example: 12
                  description: Total number of orders
            OrdersItemsPending:
              type: object
              properties:
                Today:
                  description: Number of order items pending in the last 24h
                  type: integer
                Yesterday:
                  description: Number of order items pending in the last 48h
                  type: integer
                Older:
                  description: Number of order items pending for more than 48h
                  type: integer
            AccountHealth:
              type: object
              properties:
                Day:
                  type: object
                  properties:
                    TwoDaysShippedPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders shipped within 48h
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    ReturnPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders returned
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    CancellationPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of order canceled
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                Week:
                  type: object
                  properties:
                    TwoDaysShippedPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders shipped within 48h
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    ReturnPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders returned
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    CancellationPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of order canceled
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                Month:
                  type: object
                  properties:
                    TwoDaysShippedPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders shipped within 48h
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    ReturnPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders returned
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    CancellationPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of order canceled
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                Alltime:
                  type: object
                  properties:
                    TwoDaysShippedPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders shipped within 48h
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    ReturnPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders returned
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    CancellationPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of order canceled
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                Year:
                  type: object
                  properties:
                    TwoDaysShippedPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders shipped within 48h
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    ReturnPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of orders returned
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
                    CancellationPercentage:
                      type: object
                      properties:
                        Percentage:
                          description: Percent of order canceled
                          type: number
                          format: float
                        Text:
                          description: A text label for the percentage grade
                          type: string
    Metrics:
      type: object
      properties:
        statistic_type:
          type: string
          enum:
            - year
            - month
            - week
            - day
            - alltime
        sku_number:
          type: integer
        sku_active_number:
          type: integer
        sales_total:
          type: number
          format: float
        orders:
          type: integer
        commissions:
          type: number
          format: float
        two_day_shipment_percentage:
          type: number
          format: float
        returns_percentage:
          type: number
          format: float
        cancellations_percentage:
          type: number
          format: float
    Kpi:
      type: object
      properties:
        name:
          description: name of the KPI
          type: string
          example: Average Business Delivery Time From Shipped
        period:
          description: calculation period of the KPI by day
          type: integer
          example: 30
        kpiValue:
          description: KPI value
          type: number
          format: float
          example: 1
        kpiUnit:
          description: unit KPI value
          type: string
          example: hrs
        rating:
          description: KPI rating
          type: string
          example: Extremely Good
        score:
          description: KPI score
          type: number
          format: float
          example: 1
        weight:
          description: KPI weight
          type: number
          format: float
          example: 10
        sellerRatingScore:
          description: Actual score per KPI
          type: number
          format: float
          example: 10
    OrderItemIds:
      type: object
      required:
        - orderItemIds
      properties:
        orderItemIds:
          type: array
          items:
            type: integer
          example:
            - 123456
            - 654321
    SetInvoiceNumber:
      type: object
      required:
        - orderItemId
        - invoiceNumber
      properties:
        orderItemId:
          type: integer
          example: 1
        invoiceNumber:
          type: string
          example: INV-20
    SetInvoiceAccessKey:
      type: object
      required:
        - orderItems
      properties:
        orderItems:
          type: array
          items:
            type: object
            required:
              - orderItemId
              - accessKey
            properties:
              orderItemId:
                type: integer
                example: 1
              accessKey:
                type: string
                example: '12345678901234567890123456789012345678901234'
              documentUrl:
                type: string
                description: The URL to the shipment document (optional)
              InvoiceEncodedXml:
                type: string
                description: >-
                  The invoice base64 encoded xml. Actually, it is replacement of
                  DocumentUrl parameter. If both parameters are set, EncodedXml
                  is used.
    Attribute:
      type: object
      properties:
        id:
          description: >
            Attribute identifier. Please, consider the fact that there could be
            several attributes with

            the same name, but with different IDs. For example, there can be
            AttributeSets "Shoes", "Dresses"

            and "Jewelry". Shoes and Dresses has "color", but there is no such
            attribute for "Jewelry".


            So when you want to create product in "Shoes" or "Dresses" you can
            (and if "color" is mandatory -

            should) pass value of "color". But this attribute "color" will have
            different IDs, probably

            different set of options, maybe different validation rules and so
            on.
          type: integer
          example: 7865
          readOnly: true
          nullable: true
        label:
          description: >
            Attribute label, in general same as name, but can contain spaces and
            non-latin and/or non numeric

            characters. Subject to change. For example, there is attribute with
            label "Colour" but then new

            attribute "Second color" was added to make end users be able to shop
            for perfect colour combination.

            After that attribute with label "Colour" may change its label to
            "Main Colour". You can use this

            property if you are building your own UI for SellerCenter operations
            as label for attribute.
          type: string
          example: Sample attribute label
          nullable: true
          readOnly: true
        name:
          description: Attribute name for internal usage. You can ignore this property.
          type: string
          example: Attribute name
          nullable: false
          readOnly: true
        feedName:
          description: >
            Feed name: this is how attribute is displayed in XLSX exports and
            expected to be in imports. When your

            integration with SellerCenter will generate files for upload to
            SellerCenter, then you need to use this

            property as column name. Very rarely changed, but you need to
            consider that is can happen.
          type: string
          example: Feed name
          nullable: false
          readOnly: true
        groupName:
          description: >
            Attribute's group name. If you implement own UI for SellerCenter it
            is useful to display attributes in

            groups, for example "Delivery", "Product Additional Details". By
            using this field you can split

            attributes in groups and display accordingly.
          type: string
          example: Content
          nullable: true
          readOnly: true
        isMandatory:
          description: |
            Attribute is mandatory.
          type: boolean
          example: false
          nullable: false
          readOnly: true
        isGlobalAttribute:
          description: >
            Is true when attribute does not belong to certain AttributeSet and
            can be set for any product.
          type: boolean
          example: true
          nullable: true
          readOnly: true
        description:
          description: >
            Attribute description. Maybe useful to see more about meaning of
            attribute or when you develop

            own UI for SellerCenter operations.
          type: string
          example: Some description of an attribute
          nullable: true
          readOnly: true
        productType:
          description: >
            Legacy field indicating whether attribute belongs to product
            ("simple"), product set ("config") or very-special

            ("sellercenter"). Please, do not rely on this field as it is subject
            to change in near future. It is left

            for compatibility reasons for some clients of previous versions of
            API.
          type: string
          example: sellercenter
          nullable: false
          readOnly: true
        inputType:
          description: >
            Type of input to display to user. See enum values for possible
            values. This may be

            useful if you develop your own UI for SellerCenter.
          type: string
          enum:
            - checkbox
            - datefield
            - datetime
            - dropdown
            - multiselect
            - numberfield
            - textarea
            - textfield
          example: numberfield
          nullable: false
          readOnly: true
        attributeType:
          description: >
            Type of an attribute, see enum for possible values. It defines how
            SellerCenter stores value of certain

            attribute. For type of "value" - it is stored "as-is", for "option"
            - ID of option stored,

            for "multi_option" - array or option IDs.


            This is useful when you get information about product set and you
            want to understand whether

            123 is plain value or ID of option.


            There is a special attribute type called "system". Attribute with
            those types returned for purposes

            of making aware about logic of those attributes. For example, you
            may see attribute "Brand" among them.

            From this attribute you will see useful information like "is it
            mandatory?", "what is example value of

            it?", "what description can I show to my users while I develop our
            own UI for SellerCenter".


            Attributes of this type should not be sent in array of "attributes"
            when you create or update your

            product sets. Continuing with example of Brand attribute: to pass
            this information you should use

            field brandId in root of payload for creation of product set.
          type: string
          enum:
            - value
            - option
            - multi_option
            - system
          example: system
          nullable: false
          readOnly: true
        exampleValue:
          description: Attribute's example value
          type: string
          nullable: true
          readOnly: true
        maxLength:
          description: |
            Attribute's max length, applicable for string attributes.
          type: integer
          example: 23
          nullable: true
          readOnly: true
        isVisibleForHybrid:
          description: >
            This flag enables/disable if an attribute is visible or not for a
            hybrid product
          type: boolean
          example: true
          nullable: false
          readOnly: true
        attributeDefinitionType:
          description: |
            Is used to define the attribute type
          type: string
          enum:
            - default
            - price_status
            - price
            - special_price
            - sale_start
            - sale_end
          example: price
          nullable: true
          readOnly: true
        attributeDefinitionCountry:
          description: |
            Is used to define the attribute's country/vendor
          type: string
          enum:
            - TW
            - SG
            - PH
            - ID
            - MY
            - HK
          example: MY
          nullable: true
          readOnly: true
        inputMode:
          description: >
            Is used to disable, hide a field. See enum values for possible
            values.
          type: string
          enum:
            - edit
            - display
            - invisible
            - edit_on_create
          example: edit
          nullable: true
          readOnly: true
        forbidEmpty:
          description: |
            If set to true an attribute can not be 0 or NULL.
          type: boolean
          example: true
          nullable: false
          readOnly: true
        options:
          description: >
            Attribute options. List of all option for current attribute.
            Additional validation may apply

            like validation "brand to attribute mappings", "attribute to
            attribute mapping". Example:

            you want to create new product in category "Shoes". Option "45" is
            among options of attribute

            "Size", but there is a mapping which says that if for attribute "Age
            group" there is a value

            "Kids" selected then only allowed sizes are "20", "21", ... "32".
          type: array
          items:
            type: object
            properties:
              id:
                description: >
                  Option identifier. Please note that several attrbiutes can
                  have options with same name,

                  but with different IDs. You need to use right option ID for
                  right attribute. For example,

                  there are attributes "Colour" (ID=1) and "Soil color" (ID=2).
                  "Color" has option "Black"

                  with ID=1234 and "Soil color" has option "Black" with ID=9876.
                  Even though name of options

                  are the same, when you want to pass value for "Soil color" you
                  can send only 9876,
                type: integer
                example: 631
                readOnly: true
                nullable: false
              name:
                description: >
                  Option name. If you implement own UI for SellerCenter you can
                  display this to user, also

                  same value end user in the shop will see. If you are
                  generating XLS files for future

                  upload to SellerCenter then you need also to use this value.
                  Please, note that very rarely

                  this value can be changed (for example, one colour got
                  splitted in two or more, renamed

                  to be more understandable for end user)
                type: string
                example: Black
                nullable: false
                readOnly: true
              isDefault:
                description: >
                  Is option default. Used as hint when this option is most
                  commonly used. It may be useful

                  if you implementing own UI for SellerCenter and this option
                  should be displayed as

                  selected by defaul when your user sees the screen of product
                  set creation.
                type: boolean
                example: false
                nullable: true
                readOnly: true
          nullable: true
          readOnly: true
        isEditionBySellerBlocked:
          description: >
            If set to true then the value of the attribute can not be changed
            after the product was synced with the shop.
          type: boolean
          example: true
          nullable: false
          readOnly: true
        isUsedInConsignmentFormulas:
          description: |
            If set to true then the attribute is used in consignment formulas.
          type: boolean
          example: true
          nullable: false
          readOnly: true
    AttributeOptions:
      type: object
      properties:
        id:
          description: >
            Option identifier. Please note that several attrbiutes can have
            options with same name,

            but with different IDs. You need to use right option ID for right
            attribute. For example,

            there are attributes "Colour" (ID=1) and "Soil color" (ID=2).
            "Color" has option "Black"

            with ID=1234 and "Soil color" has option "Black" with ID=9876. Even
            though name of options

            are the same, when you want to pass value for "Soil color" you can
            send only 9876,
          type: integer
          example: 631
          readOnly: true
          nullable: false
        name:
          description: >
            Option name. If you implement own UI for SellerCenter you can
            display this to user, also

            same value end user in the shop will see. If you are generating XLS
            files for future

            upload to SellerCenter then you need also to use this value. Please,
            note that very rarely

            this value can be changed (for example, one colour got splitted in
            two or more, renamed

            to be more understandable for end user)
          type: string
          example: Black
          nullable: false
          readOnly: true
        isDefault:
          description: >
            Is option default. Used as hint when this option is most commonly
            used. It may be useful

            if you implementing own UI for SellerCenter and this option should
            be displayed as

            selected by defaul when your user sees the screen of product set
            creation.
          type: boolean
          example: false
          nullable: true
          readOnly: true
    AttributeValidator:
      type: object
      properties:
        maxLength:
          description: Max length
          type: integer
          example: 255
          readOnly: true
          nullable: true
        decimalPlaces:
          description: Decimal places
          type: integer
          example: 2
          nullable: true
          readOnly: true
        type:
          description: Type
          type: string
          example: null
          nullable: true
          readOnly: true
        notEmpty:
          description: Not empty
          type: boolean
          example: true
          nullable: true
          readOnly: true
        signed:
          description: Is signed
          type: boolean
          example: false
          nullable: true
          readOnly: true
        checkedInBlacklist:
          description: Is checked in blacklist
          type: boolean
          example: false
          nullable: true
          readOnly: true
    Feed:
      type: object
      properties:
        id:
          type: integer
        userId:
          example: 524
          type: integer
          description: |
            ID of the feed.
        sellerId:
          example: 4089
          description: >-
            ID of seller for who this feed is. Useful when your user role allow
            you to manage multiple sellers.
          type: integer
        status:
          type: string
          enum:
            - Finished
            - Processing
            - Error
            - Queued
            - Canceled
        action:
          type: string
          description: >
            Feed action ("what type of feed it was"). Types can be added,
            removed and renamed. You can

            use this string in UI to display to user or create your
            mapping/translation for that.
          enum:
            - ProductCreate
            - ProductUpdate
            - ProductRemove
            - Image
            - SendToWarehouse
            - ReturnFromWarehouse
            - ProductCategoryMigrate
            - SellerAttributeImport
            - PendingTransactionApprove
            - CsvShippingFee
            - CsvCancellationFee
            - CsvReturnDeliveryFee
            - CsvReturnHandlingFee
            - CsvReturnToSellerFee
            - CsvMarkAsPaid
            - CsvDebitUpload
            - CsvCreditUpload
            - OrderSetStatusReadyToShip
            - OrderSetInvoiceAccessKey
            - PromotionMassQcImport
            - SellerFeesImport
            - SubsidySkuImport
            - SellerCounterfeitBrandConfiguration
            - FinanceQcImport
            - OrderCreateForwardManifest
            - CsvInventoryStatusUpload
            - OrderSetStatusToShipped
            - SellerMailSend
            - CounterfeitBrandUpdate
            - OrderSetStatusToDelivered
            - CreateThirdPartyOrder
            - OrderUpdateManifestStatus
            - ProductMassQcImport
            - CategorySetupImport
            - TransactionOrderItemImport
            - TransactionProductImport
            - TransactionSellerItemImport
            - UnauthorizeMultipleProductsImport
            - SellerProfileMassUpdate
            - PromotionEligibleProductsImport
            - PendingTransactionReject
            - PackageWeightImport
            - ConsignmentReplenishmentImport
            - OrderItemTagImport
            - FeedConfigChangePol
            - FeedConfigChangePsol
            - SellerTagImport
            - ProductTagImport
            - SellerRatingCustomKpiSellerValuesImport
            - ImportExternalSellerFiles
            - UpdateInventoryStatusImport
            - AttributePropertiesImport
            - ConsignmentSerialNumberSetupImport
            - ConsignmentRequestImport
            - OrderLogisticsImport
            - ProductStockUpdate
            - ConsignmentReturnRequestImport
            - ProductWarehouseStockUpdate
            - CategoriesRestrictionImport
            - OrderSetStatusReturned
            - OrderSetStatusReturnReceived
            - OrderSetStatusReturnApproved
            - OrderSetStatusReturnRejected
            - CategoryAttributeMappingImport
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        source:
          type: string
          description: way Feed was created (API, XLS, UI).
        requestedFormats:
          type: array
          items:
            type: string
        downloadLinks:
          type: array
          items:
            type: string
          description: |
            list of relative links to download export files. For some types of
            export files are generated in several formats, therefore you may
            have several links to download files.
        totalRecords:
          description: >
            Feed can contain multiple items and this number indicated total
            number of recognized items
          example: 4089
          type: integer
        processedRecords:
          description: >
            Feed items are processed in chunks and using this number you can see
            how many items were processed.
          example: 123
          type: integer
        failedRecords:
          description: >
            How many items were failed to process (contains wrong data,
            validation failed for data, etc).
          example: 64
          type: integer
        failureReportExportItemid:
          example: 64
          description: >
            ID of related export item. Can be null if there is no related error
            for feed. If present, you can

            get information about this export item by doing another request to
            export endpoint. Export item can

            have download link and by using it you can download CSV or XLSX file
            with errors or warnings related

            to this feed.
          type: integer
          nullable: true
    FeedItemError:
      type: object
      properties:
        itemId:
          type: string
          format: uuid
        errorCode:
          type: integer
        fieldName:
          type: string
        errorMessage:
          type: string
        sellerSku:
          type: string
    FeedItemWarning:
      type: object
      properties:
        itemId:
          type: string
          format: uuid
        message:
          type: string
        fieldName:
          type: string
        sellerSku:
          type: string
    FeedRawInput:
      type: object
      properties:
        FeedUuid:
          example: 2283380623-57c9-4163-b062-9f558d1934c2
          type: string
        MimeType:
          example: text/html
          type: string
        File:
          example: 0eWxlPmJvZHkgeyBmb250LXNpemU6MTBweDsgZm9udC1mYW1pbHk
          type: string
          description: the manifest file encoded base64
    QcRejectReason:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: |
            Id of the reject reason.
        name:
          type: string
          example: Wrong description
          description: >
            The name of the reject reason in venture locale. The ones set to
            'Not Authorized' will have (Not Authorized) added as suffix.
        type:
          type: string
          example: product
          enum:
            - product
            - seller
            - consignment
            - promotion
            - finance
        isSetToNotAuthorized:
          type: boolean
          example: false
          description: >
            If true, this reason can be used to set product to not authorized
            status.

            Not authorized products are taken offline and blocked from going to
            product QC. Cannot be edited after saving.
        isEnabled:
          type: boolean
          example: true
          description: |
            Whether or not the reject reason is currently enabled.
    CreateWebhook:
      type: object
      properties:
        webhookId:
          type: string
          example: 7dffaa4e-1713-42c2-84ba-1d2fbd4537ab
        createdAt:
          type: string
          readOnly: true
          format: date-time
    UpdateWebhook:
      type: object
      properties:
        webhookId:
          type: string
          example: 7dffaa4e-1713-42c2-84ba-1d2fbd4537ab
        updatedAt:
          type: string
          readOnly: true
          format: date-time
    LastVersionUploaded:
      description: ProductSet upload statuses
      type: object
      properties:
        productSetId:
          description: numeric ID of ProductSet
          type: object
          properties:
            syncClass:
              description: >-
                Used to know if the icon for product uploaded should be
                displayed or not
              example: iconset-visible
              type: string
            message:
              description: >
                Message for the product set containing successful message or
                error message. If the product set is

                uploaded the message will be "Uploaded to shop", all other
                messages representing that product was not uploaded 

                successfully
              type: string
              example: Latest version not yet uploaded to shop
            dirtStatus:
              description: Represents a flag to know if the product set has dirty data
              type: boolean
              example: true
    WebhookEntity:
      type: object
      properties:
        name:
          type: string
          description: Human readable string identifier of an Entity.
          example: Metrics
        events:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Human readable string identifier of an Event.
                example: Updated
              alias:
                type: string
                description: >-
                  Human readable string identifier of an Event combined with its
                  Entity.
                example: onMetricsUpdated
    Webhook:
      type: object
      properties:
        publicId:
          type: string
          description: Identifier of a Webhook as assigned by SellerCenter.
          example: 3f0c27aa-ca28-4526-88f0-a13e6c9a007b
        sellerId:
          type: integer
          description: Identifier of a Seller as assigned by SellerCenter.
          example: 1024
        callbackUrl:
          type: string
          description: The webhook url that will be called by SellerCenter.
          example: https://sellercenter.com/callbacks
        creationSource:
          type: string
          description: The webhook source of creation.
          nullable: false
          enum:
            - web
            - api
        createdAt:
          type: string
          nullable: false
          example: '2022-09-01 16:35:42'
        updatedAt:
          type: string
          nullable: false
          example: '2022-09-01 16:35:42'
        isEnabled:
          type: boolean
          nullable: false
          example: true
        events:
          type: array
          description: List of webhook related events identified by its alias.
          items:
            type: object
            properties:
              name:
                type: string
                description: Human readable string identifier of an Event.
                example: Updated
              alias:
                type: string
                description: >-
                  Human readable string identifier of an Event combined with its
                  Entity.
                example: onMetricsUpdated
    WebhookCallback:
      type: object
      properties:
        id:
          type: integer
          description: Identifier of a Webhook Callback
          example: 1
        sellerId:
          type: integer
          description: Identifier of a Seller as assigned by SellerCenter.
          example: 1024
        url:
          type: string
          description: The webhook url that will be called by SellerCenter.
          example: https://sellercenter.com/callbacks
        status:
          type: string
          enum:
            - success
            - fail
            - inprogress
            - queueing_failed
          description: Status of the webhook callback.
          example: inprogress
        createdAt:
          type: string
          nullable: false
          example: '2023-10-25T23:30:34+00:00'
        lastCallAt:
          type: string
          nullable: false
          example: '2023-10-25T23:30:34+00:00'
        event:
          type: string
          nullable: false
          example: onOrderItemsStatusChanged
        payload:
          type: string
          nullable: false
          example: >-
            {"event":"onOrderItemsStatusChanged","payload":{"OrderId":1,"OrderItemIds":["2"],"NewStatus":"ready_to_ship"}}
    WebhookEntityEvent:
      type: object
      properties:
        name:
          type: string
          description: Human readable string identifier of an Event.
          example: Updated
        alias:
          type: string
          description: >-
            Human readable string identifier of an Event combined with its
            Entity.
          example: onMetricsUpdated
    VisibilityRule:
      type: object
      properties:
        productSetId:
          type: integer
          example: 1
          description: |
            Id of the ProductSet
        hasAtLeastOneActiveProduct:
          type: boolean
          example: true
          description: |
            The flag shows if the ProductSet has at least one active Product
        isSellerActive:
          type: boolean
          example: true
          description: |
            The flag shows if the Seller of the ProductSet is active or not
        isBrandActive:
          type: boolean
          example: true
          description: |
            The flag shows if the Brand of the ProductSet is active or not
        hasZeroPrices:
          type: boolean
          example: true
          description: >
            The flag shows if any variations of the ProductSet has a price with
            0 value
        hasZeroStocks:
          type: boolean
          example: true
          description: >
            The flag shows if any variations of the ProductSet have no stocks in
            the warehouse
        hasImages:
          type: boolean
          example: true
          description: |
            The flag shows if at least 1 image was uploaded for the ProductSet
        hasActiveCategories:
          type: boolean
          example: true
          description: |
            The flag shows if at least 1 image was uploaded for the ProductSet
        isBrandApproved:
          type: boolean
          example: true
          description: |
            The flag shows if the Brand of the ProductSet is approved or not
        isProductSetAuthorized:
          type: boolean
          example: true
          description: |
            The flag shows if the ProductSet is authorized or not
        isLatestVersionUploaded:
          type: boolean
          example: true
          description: >
            The flag shows if the latest version of the ProductSet was uploaded
            to the store
        latestVersionUploadedMessage:
          type: string
          example: >-
            Latest version not yet uploaded to shopLatest version not yet
            uploaded to shop
          description: >
            A detailed message (with error) about the latest uploaded version of
            the ProductSet
        qualityControlStatus:
          type: string
          enum:
            - accepted
            - rejected
            - pending
          example: pending
          description: >
            The quality control status of the ProductSet without details
            (comment/reject reason)
    UserCreate:
      type: object
      properties:
        aclRoleId:
          type: integer
          description: Role Id
          example: 2
        apiKey:
          type: string
          example: 093a9e34dqw2312241gcz53766e338abf
        email:
          type: string
          example: email@gmail.com
        languageId:
          type: integer
          description: Language Id
          example: 3
        name:
          type: string
          example: John
        notifyNewUser:
          type: boolean
        sellerId:
          type: integer
          example: 1
        status:
          type: string
          enum:
            - active
            - inactive
        enablePassword:
          type: boolean
          description: >-
            Indicates whether the user is allowed to use a password for
            authentication
          example: true
        switchableSellerIds:
          type: array
          items:
            type: integer
          description: Array of seller IDs that the user can switch between
          example:
            - 1
            - 2
            - 232
    UserUpdate:
      type: object
      properties:
        roleId:
          type: integer
          description: Role Id
          example: 2
        apiKey:
          type: string
          example: 093a9e34dqw2312241gcz53766e338abf
        email:
          type: string
          example: email@gmail.com
        name:
          type: string
          example: John
        status:
          type: string
          enum:
            - active
            - inactive
        enablePassword:
          type: boolean
          description: >-
            Indicates whether the user is allowed to use a password for
            authentication
          example: true
        switchableSellerIds:
          type: array
          items:
            type: integer
          description: Array of seller IDs that the user can switch between
          example:
            - 1
            - 2
            - 232
    User:
      type: object
      properties:
        id:
          type: integer
          example: 32
        email:
          type: string
          example: test@example.com
        name:
          type: string
          example: Test name
        apiKey:
          type: string
          example: 5b7878b7b1ed868cc549c2c2f7202309bcfe9737
          description: Only available for admin users
        aclRoleId:
          type: integer
          example: 2
        sellerId:
          type: integer
          example: 1
        status:
          type: string
          example: active
        enablePassword:
          type: boolean
          example: true
          description: Indicates if the password is enabled for the user
        switchableSellers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: '123'
              name:
                type: string
                example: Seller Name
          description: List of switchable sellers with their IDs and names
    UserChangePassword:
      type: object
      properties:
        currentPassword:
          type: string
          description: Current password
        newPassword:
          type: string
          description: New password
    OrdersCounters:
      type: object
      properties:
        pending:
          type: object
          description: >
            Counter of pending order items (order items in status "pending").
            Order items may have field

            shipping_provider_type with possible values 'express', 'standard',
            'economy', 'air', 'surface',

            'sameday' or null.



            For order items with not-null shipping_provider_type you can find
            counter for that particular provider type. If

            you develop your own UI for SellerCenter: when count for certain
            shipping provider type is not zero, then you

            can show filter for this particular shipping provider type. For
            example: pendingEconomyCount=6 and all other

            counters are equal to 0. In this case it make sense to show in UI
            section "Pending", sub-section "Economy" and

            no sections "Air", "Surface" and others.
          properties:
            pending:
              type: integer
              description: Count of all pending order items.
            notPrintedPendingCount:
              type: integer
              description: Count of all pending order items which were not printed.
            pendingExpressCount:
              type: integer
              description: Count of pending order items with shipping_provider_type=express
            pendingEconomyCount:
              type: integer
              description: Count of pending order items with shipping_provider_type=economy
            pendingStandardCount:
              type: integer
              description: >-
                Count of pending order items with
                shipping_provider_type=standard
            pendingSamedayCount:
              type: integer
              description: Count of pending order items with shipping_provider_type=sameday
            pendingAirCount:
              type: integer
              description: Count of pending order items with shipping_provider_type=air
            pendingSurfaceCount:
              type: integer
              description: Count of pending order items with shipping_provider_type=surface
        readyToShipCount:
          type: integer
          description: Count or order items in "ready to ship" status.
        paymentPendingCount:
          type: integer
          description: >
            Count or order items in "payment_pending" status. This status is
            separate status from "pending". If you want

            to display in your UI "overall" count of pending order items, then
            recommended formula is "payment pending count +

            pending count".
        notPrintedReadyToShipCount:
          type: integer
          description: >
            Count of order items in status "ready_to_ship" which were not
            printed yet.
        shippedCount:
          type: integer
          description: Count of order items in status "shipped".
    OrderHistory:
      type: object
      properties:
        orderItemId:
          type: integer
          description: Order item identifier
          example: 1111
        shopSku:
          type: string
          description: Shop SKU
          example: 164097_L
        status:
          type: string
          description: |
            Order Item status.
          example: pending
          enum:
            - pending
            - shipped
            - canceled
            - returned
            - failed
            - delivered
            - ready_to_ship
            - return_shipped_by_customer
            - return_waiting_for_approval
            - return_rejected
            - return_delivered
            - payment_pending
        note:
          type: string
          description: Additional information
        createdAt:
          type: string
          description: Date when change occurred
          example: '2021-09-22T23:21:42.123456Z'
        editor:
          type: string
          description: Author of the change
          example: admin@sellercenter.net
      required:
        - orderItemId
        - shopSku
        - status
        - createdAt
    OrderItemStatus:
      type: string
      description: |
        Order Item status.
      example: pending
      enum:
        - pending
        - shipped
        - canceled
        - returned
        - failed
        - delivered
        - ready_to_ship
        - return_shipped_by_customer
        - return_waiting_for_approval
        - return_rejected
        - return_delivered
        - payment_pending
    SellerContract:
      type: object
      properties:
        contractId:
          description: Id of the contract
          type: integer
          example: 123
        sellerId:
          description: Id of the seller
          type: integer
          example: 123
        type:
          description: Type of the contract
          type: string
          enum:
            - terms
            - contract
        url:
          description: Url of the contract file
          type: string
          example: https://example.com/contract.pdf
        approvedAt:
          type: string
          format: date-time
          nullable: true
          description: Date and time when the contract was approved
          example: '2022-11-01 03:33:47'
        createdAt:
          type: string
          format: date-time
          description: Date and time when the contract was created
          example: '2022-11-01 03:33:47'
        updatedAt:
          type: string
          format: date-time
          description: Date and time when the contract was last updated
          example: '2022-11-01 03:33:47'
        expirationDate:
          type: string
          format: date-time
          description: Date and time when the contract will expire
          example: '2022-11-01 03:33:47'
    SellerPayoutTransactionStatement:
      type: object
      properties:
        statementNumber:
          type: string
          description: Url of the contract file
          example: TEST1234-20221122
        createdAt:
          type: string
          format: date-time
          description: Date and time when the statement was created
          example: '2022-11-01 03:33:47'
        updatedAt:
          type: string
          format: date-time
          description: Date and time when the statement was last updated
          example: '2022-11-01 03:33:47'
        openingBalance:
          type: number
          format: float
          description: The opening balance
        itemRevenue:
          type: number
          format: float
          description: The revenue generated by the item.
        shipmentFee:
          type: number
          format: float
          description: Cost of shipping.
        shipmentFeeCredit:
          type: number
          format: float
          description: Shipping credit, if any.
        otherRevenueTotal:
          type: number
          format: float
        feesTotal:
          type: number
          format: float
          description: Sum of Payment Fee & Return to Seller Fee
        subtotal1:
          type: number
          format: float
          description: (Sum of Item Revenue, Other Revenue) - Fees(Total)
        refunds:
          type: number
          format: integer
          description: Sum of all refunds, if any.
        feesOnRefundsTotal:
          type: number
          format: float
          description: Accumulated fees on refunds issued.
        subtotal2:
          type: number
          format: float
          description: (Sum of Subtotal1) - Refunds
        closingBalance:
          type: number
          format: float
          description: Closing Balance
        guaranteeDeposit:
          type: number
          format: float
          description: Guarantee Deposit
        payout:
          type: number
          format: float
          description: Amount to be Paid Out to Seller for Statement
        paid:
          type: boolean
          description: Payout Status of Statement. 1 is Paid. 0 is Not Paid
        paymentReference:
          type: string
    Transaction:
      description: Transaction info
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Unique ID of transaction
        sellerId:
          type: integer
          description: Seller Id
          example: 1
          nullable: true
        transactionTypeId:
          type: integer
          description: |
            Transaction type Id.
            List of types you can find In /v2/transaction/types
          example: 1
        treStatementGroupId:
          type: integer
          description: Transaction Rule Engine group Id
          example: 2
          nullable: true
        transactionGroupName:
          type: string
          description: Transaction Rule Engine group name
          nullable: true
        transactionTriggerEventId:
          type: integer
          description: |
            Transaction trigger event Id.
            List of events you can find In /v2/transaction/trigger-events
          example: 1
          nullable: true
        isUnique:
          type: boolean
          description: Is unique transaction
          nullable: true
        transactionSource:
          type: string
          description: Transaction source
          enum:
            - sellercenter
            - web
            - csv
        userId:
          type: integer
          description: User Id
          nullable: true
        description:
          type: string
          description: Info about transaction
        value:
          type: number
          format: float
          description: Value
          example: 65.3
        taxesVat:
          type: number
          format: float
          description: Value-Added Tax
          nullable: true
          example: 2.3
        taxesWht:
          type: number
          format: float
          description: Withholding tax
          nullable: true
          example: 1.3
        isWhtInAmount:
          type: boolean
          description: Is Withholding tax in amount
          example: true
        ref:
          type: integer
          description: Reference to the transaction object. For example on Order Item Id.
          nullable: true
          example: 12
        refDate:
          type: integer
          nullable: true
        number:
          type: string
          description: Transaction number
          nullable: true
        transactionStatementId:
          type: integer
          description: Transaction statement Id
          nullable: true
        createdAt:
          type: string
          format: date-time
          example: '2021-09-22T23:21:42+02:00'
          description: Transaction create date-time
        updatedAt:
          type: string
          format: date-time
          example: '2021-09-22T23:21:42+02:00'
          description: Transaction last update date-time
        qcUserId:
          type: integer
          description: QC User Id
          nullable: true
          example: 44
        hash:
          type: string
          description: Unique hash of transaction
          nullable: true
        currency:
          type: string
          description: Currency
          nullable: true
          example: USD
        reference:
          type: integer
          description: Identifier of the reference type.
          nullable: true
        referenceType:
          type: string
          description: Reference type tels who was the creator of given transaction
          nullable: true
      required:
        - id
        - sellerId
        - transactionTypeId
        - treStatementGroupId
        - transactionTriggerEventId
        - isUnique
        - transactionSource
        - userId
        - description
        - value
        - taxesVat
        - taxesWht
        - isWhtInAmount
        - ref
        - refDate
        - number
        - transactionStatementId
        - createdAt
        - updatedAt
        - qcUserId
        - hash
        - currency
        - reference
        - referenceType
    TransactionType:
      description: Transaction info
      type: object
      properties:
        accountStatementSection:
          type: string
          description: Account statement section
          example: other_transactions
          enum:
            - item_revenue
            - other_revenue
            - subsidy
            - subsidy_refund
            - fees
            - item_refunds
            - refunds
            - other_transactions
            - debit_other_revenues
        description:
          type: string
          description: Description
        feeType:
          type: integer
          description: Fee type
          nullable: true
        id:
          type: integer
          description: Id
          example: 1
        refSource:
          type: string
          description: Ref source
          nullable: true
          example: sales_order_item
        type:
          type: string
          description: Type
          enum:
            - debit
            - credit
      required:
        - accountStatementSection
        - description
        - feeType
        - id
        - refSource
        - type
    TransactionAccountStatementGroup:
      description: Transaction account statement group info
      type: object
      properties:
        accountStatementGroupId:
          type: string
          description: Account statement group identifier
          example: 1
        name:
          type: string
          description: Account statement group name
          example: Payment Deposit
        outcome:
          type: object
          description: Outcome
          properties:
            value:
              type: string
              description: outcome value
              example: debit_transaction
        transactionTypeId:
          type: integer
          description: Transaction type identifier
          example: 1
        accountStatementSection:
          type: string
          description: Account statement section
          example: fees
        transactionType:
          type: string
          description: Transaction type name
          example: Selling Fee Credit
        marker:
          type: string
          description: Marker
          example: account_statement_group-balance-deduction-10
        statementType:
          type: string
          description: Shows to which statement this groups is associated
          default: marketplace
          enum:
            - marketplace
            - consignment
        transactionTypeRefSource:
          type: string
          description: Transaction type reference source
          example: seller
          nullable: true
      required:
        - accountStatementGroupId
        - name
        - outcome
        - transactionTypeId
        - accountStatementSection
        - transactionType
        - marker
        - statementType
        - transactionTypeRefSource
    TransactionTriggerEvent:
      description: Transaction info
      type: object
      properties:
        id:
          type: integer
          description: Id
          example: 1
        name:
          type: string
          description: Trigger name
          example: order_item_shipped
        label:
          type: string
          description: Display name
          example: Item Shipped
      required:
        - id
        - name
        - label
    TransactionStatement:
      description: Transaction info
      type: object
      properties:
        id:
          type: integer
          description: Id
          example: 1
        sellerId:
          type: integer
          description: Seller Id
          example: 2
        startDate:
          type: string
          format: date-time
          example: '2021-09-22T23:21:42+02:00'
          description: Transaction statement start date.
        endDate:
          type: string
          format: date-time
          example: '2021-09-22T23:21:42+02:00'
          description: Transaction statement end date.
        openingBalance:
          type: number
          format: float
          description: Balance before transaction
          example: 32.5
        guaranteeDeposit:
          type: string
          description: Guarantee deposit
          nullable: true
        closingBalance:
          type: number
          format: float
          description: Balance after transaction
          nullable: true
          example: 30.6
        payout:
          type: number
          format: float
          description: Payout amount
          nullable: true
          example: 2.4
        currency:
          type: string
          description: Currency
          example: USD
        createdAt:
          type: string
          format: date-time
          example: '2021-09-22T23:21:42+02:00'
          description: Transaction statement create date-time.
        updatedAt:
          type: string
          format: date-time
          example: '2021-09-22T23:21:42+02:00'
          description: Transaction statement last update date-time.
        paid:
          type: boolean
          description: Is paid
          example: false
        note:
          type: string
          description: Additional info about statement
        userId:
          type: integer
          description: User Id
          nullable: true
        number:
          type: string
          description: Statement number
          nullable: true
        uuid:
          type: string
          description: Unique string identifier
        paymentRef:
          type: string
          description: Payment reference
          nullable: true
        uploadId:
          type: integer
          description: Upload Id
          nullable: true
        paidAt:
          type: string
          format: date-time
          example: '2021-09-22T23:21:42+02:00'
          description: Date of payment.
          nullable: true
        dueAt:
          type: string
          format: date-time
          example: '2021-09-22T23:21:42+02:00'
          description: Due at.
          nullable: true
      required:
        - id
        - sellerId
        - startDate
        - endDate
        - openingBalance
        - guaranteeDeposit
        - closingBalance
        - payout
        - currency
        - createdAt
        - updatedAt
        - paid
        - note
        - userId
        - number
        - uuid
        - paymentRef
        - uploadId
        - paidAt
        - dueAt
    Role:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: |
            Id of role.
        name:
          type: string
          example: maintenance
          description: |
            The name of the role.
        displayName:
          type: string
          example: Maintenance
          description: |
            The display name of the role.
        group:
          type: string
          example: venture
          description: |
            What group the role belongs to.
        description:
          type: string
          example: Some details about the role
          description: |
            A descriptive text of the user role.
        canBeEditedByRoleIds:
          type: array
          items:
            type: integer
            example: 1
          description: Ids of roles that can edit the role
        userCount:
          type: integer
          example: 103
          description: |
            How many users share the user role.
        canEdit:
          type: boolean
          example: true
          description: >
            Whether or not you have enough rights to edit the role. Use this to
            check whether or not to show the resources.
        canDelete:
          type: boolean
          example: false
          description: >
            Whether or not you can delete the role. If there are users that are
            assigned to the role, this will

            be false even if you have enough permissions for deletion.
        resources:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
                description: |
                  Id of user resource.
              name:
                type: string
                example: login
                description: |
                  The name of the user resource.
              label:
                type: string
                example: Frontend login
                description: |
                  The label of the user resource.
              description:
                type: string
                example: Some details about the user resource
                description: |
                  A descriptive text of the user resource.
              maintenanceOnly:
                type: boolean
                example: true
                description: >
                  Whether or not the resource is only available for maintenance
                  user.
              tags:
                type: array
                items:
                  type: string
                  example: seller
    UserResource:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: |
            Id of user resource.
        name:
          type: string
          example: login
          description: |
            The name of the user resource.
        label:
          type: string
          example: Frontend login
          description: |
            The label of the user resource.
        description:
          type: string
          example: Some details about the user resource
          description: |
            A descriptive text of the user resource.
        maintenanceOnly:
          type: boolean
          example: true
          description: |
            Whether or not the resource is only available for maintenance user.
        tags:
          type: array
          items:
            type: string
            example: seller
    ApiKeyGenerate:
      type: object
      properties:
        apiKey:
          type: string
          example: 3b521ea8c6e7fcaf7e9ed82fc9a869bc
          description: The generated api key.
    RoleAdd:
      type: object
      properties:
        id:
          type: integer
          example: 123
          description: |
            Id of role.
        displayName:
          type: string
          example: Maintenance
          description: |
            The display name of the role.
        group:
          type: string
          example: venture
          description: |
            What group the role belongs to.
        description:
          type: string
          example: Some details about the role
          description: |
            A descriptive text of the user role.
        canBeEditedByRoleIds:
          type: array
          items:
            type: integer
            example: 1
          description: Ids of roles that can edit the role
    RoleEdit:
      type: object
      properties:
        id:
          type: integer
          example: 123
          description: |
            Id of role.
        displayName:
          type: string
          example: Maintenance
          description: |
            The display name of the role.
        group:
          type: string
          example: venture
          description: |
            What group the role belongs to.
        description:
          type: string
          example: Some details about the role
          description: |
            A descriptive text of the user role.
        canBeEditedByRoleIds:
          type: array
          items:
            type: integer
            example: 1
          description: Ids of roles that can edit the role
    Resources:
      type: object
      properties:
        enabledResourcesList:
          type: array
          description: |
            The list of enabled resources.
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
                description: |
                  Id of user resource.
              name:
                type: string
                example: login
                description: |
                  The name of the user resource.
              label:
                type: string
                example: Frontend login
                description: |
                  The label of the user resource.
              description:
                type: string
                example: Some details about the user resource
                description: |
                  A descriptive text of the user resource.
              maintenanceOnly:
                type: boolean
                example: true
                description: >
                  Whether or not the resource is only available for maintenance
                  user.
              tags:
                type: array
                items:
                  type: string
                  example: seller
        resourcesList:
          type: array
          description: |
            The list of available resources.
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
                description: |
                  Id of user resource.
              name:
                type: string
                example: login
                description: |
                  The name of the user resource.
              label:
                type: string
                example: Frontend login
                description: |
                  The label of the user resource.
              description:
                type: string
                example: Some details about the user resource
                description: |
                  A descriptive text of the user resource.
              maintenanceOnly:
                type: boolean
                example: true
                description: >
                  Whether or not the resource is only available for maintenance
                  user.
              tags:
                type: array
                items:
                  type: string
                  example: seller
    FinanceStatement:
      type: object
      required:
        - id
        - sellerId
        - number
        - startDate
        - endDate
        - dueDate
        - openingBalance
        - closingBalance
        - payoutAmount
        - guaranteeDeposit
        - paid
        - paidAt
        - note
        - currency
        - country
        - type
      properties:
        id:
          type: integer
          description: >-
            The ID of the statement associated with the transaction. 0 means
            statement is current
        sellerId:
          type: integer
        number:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        paidAt:
          type: string
          format: date-time
        note:
          type: string
          format: string
          nullable: true
        openingBalance:
          type: number
        closingBalance:
          type: number
        payoutAmount:
          type: number
        guaranteeDeposit:
          type: number
        paid:
          type: boolean
        currency:
          type: string
          example: USD
          description: >-
            The currency of the transaction. Three-letter code, ISO 4217
            standard.
        country:
          type: string
          example: US
          description: >-
            The country code of the transaction. Two-letter code, ISO 3166-1
            alpha-2 standard.
        type:
          type: string
          example: marketplace
          description: The type of the account statement
          enum:
            - marketplace
            - consignment
    FinanceStatementDetails:
      type: object
      required:
        - id
        - currency
        - country
        - details
      properties:
        id:
          type: integer
        currency:
          type: string
          example: USD
          description: >-
            The currency of the transaction. Three-letter code, ISO 4217
            standard.
        country:
          type: string
          example: DE
          description: >-
            The country code of the transaction. Two-letter code, ISO 3166-1
            alpha-2 standard.
        details:
          type: object
          required:
            - order
            - refunds
            - others
          properties:
            order:
              type: object
              properties:
                itemRevenue:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                otherRevenue:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                fees:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                subsidy:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                vatAmount:
                  nullable: true
                  type: number
                whtAmount:
                  nullable: true
                  type: number
                subtotal:
                  type: number
            refunds:
              type: object
              properties:
                itemRefunds:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                refunds:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                debitOtherRevenues:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                subsidyRefunds:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                vatAmount:
                  nullable: true
                  type: number
                whtAmount:
                  nullable: true
                  type: number
                subtotal:
                  type: number
            others:
              type: object
              properties:
                others:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                vatAmount:
                  nullable: true
                  type: number
                whtAmount:
                  nullable: true
                  type: number
    FinanceStatementDetailsGroup:
      type: object
      properties:
        total:
          type: number
        groups:
          type: array
          nullable: true
          items:
            type: object
            properties:
              id:
                type: integer
                description: >-
                  This field represents the internal identifier of a transaction
                  type and not the account statement group
              name:
                type: string
              amount:
                type: number
    FinanceTransaction:
      type: object
      required:
        - id
        - date
        - number
        - typeId
        - treStatementGroupId
        - amount
        - vatAmount
        - whtAmount
        - source
        - statementId
        - orderItemId
        - currency
        - country
        - typeName
        - groupName
        - orderNumber
        - statementType
      properties:
        id:
          type: integer
          description: The ID of the transaction.
        date:
          type: string
          format: date-time
          description: The date of the transaction.
        number:
          type: string
          description: Transaction number.
        typeId:
          type: integer
          description: The type of the transaction.
        treStatementGroupId:
          type: integer
          description: Transaction Rule Engine group Id
          example: 2
          nullable: true
        amount:
          type: number
          description: The amount of the transaction.
        vatAmount:
          type: number
          description: The VAT amount of the transaction.
        whtAmount:
          type: number
          description: The WHT amount of the transaction.
        source:
          type: string
          description: The source of the transaction.
          enum:
            - sellercenter
            - web
            - csv
        comment:
          type: string
          description: The comment of the transaction.
        statementId:
          type: integer
          description: >-
            The ID of the statement associated with the transaction. 0 means
            that statement is current
        orderItemId:
          type: integer
          description: The ID of the order item associated with the transaction.
        currency:
          type: string
          example: USD
          description: >-
            The currency of the transaction. Three-letter code, ISO 4217
            standard.
        country:
          type: string
          example: DE
          description: >-
            The country code of the transaction. Two-letter code, ISO 3166-1
            alpha-2 standard.
        typeName:
          type: string
          description: The name of the transaction type.
        groupName:
          type: string
          description: The name of the transaction group.
        orderNumber:
          type: string
          description: Order number.
        statementType:
          type: string
          description: >-
            The 'statementType' field specifies the type of account statement to
            which the transaction belongs.
          enum:
            - marketplace
            - consignment
    FinanceTransactionsV2-1:
      type: object
      properties:
        createdAt:
          type: string
          description: The creation date of the transaction.
        transactionNumber:
          type: string
          description: The registration number of the transaction.
        transactionType:
          type: object
          properties:
            id:
              type: integer
              description: The identifier of a transaction type.
            name:
              type: string
              description: The name of a transaction type.
            accountStatementGroup:
              type: object
              properties:
                id:
                  type: integer
                  description: The identifier of an account statement group.
                name:
                  type: string
                  description: The name of an account statement group.
              required:
                - id
                - name
          required:
            - id
            - name
        userId:
          type: integer
          description: The user id of who created the transaction manually.
        comment:
          type: string
          description: A comment related to a transaction.
        amount:
          type: object
          properties:
            value:
              type: number
              description: Total fee amount of the transaction.
            vatTax:
              type: number
              description: Amount of VAT tax.
            whtTax:
              type: number
              description: Amount of WHT tax.
            currency:
              type: string
              description: The currency in which the transaction will be paid.
          required:
            - value
            - vatTax
            - whtTax
            - currency
        accountStatementId:
          type: integer
          description: The identifier of the account statement.
        orderNumber:
          type: string
          nullable: true
          description: >-
            The order number if the transaction type is associated with an order
            item.
        productSku:
          type: string
          nullable: true
          description: >-
            The product SKU if the transaction type is associated with an order
            item.
        country:
          type: string
          description: The country in which the orders were placed.
        isWhtInAmount:
          type: boolean
          description: >-
            Is defining is the amount.whtTax value already included in
            amount.value.
        transactionReference:
          type: integer
          description: >-
            The identifier of the transaction reference. (Can be related to an
            order, order item, product, seller or other)
        qcUserId:
          type: integer
          description: The id of a user who approved a pending transaction.
        hash:
          type: string
          nullable: true
          description: The hash of a transaction to ensure that a transaction is unique.
        statementType:
          type: string
          description: >-
            The type indicates to which account statement the transaction is
            associated.
          enum:
            - marketplace
            - consignment
        accountStatementIsPaid:
          type: boolean
          description: Status of account statement payment.
        accountStatementNumber:
          type: string
          description: The number of the account statement.
        accountStatementStartDate:
          type: string
          description: The start date of the account statement.
        accountStatementEndDate:
          type: string
          description: The end date of the account statement.
        accountStatementPaymentDueDate:
          type: string
          format: date-time
          description: The payment due date of the account statement.
      required:
        - createdAt
        - transactionNumber
        - transactionType
        - comment
        - amount
        - country
        - isWhtInAmount
        - hash
        - statementType
        - isPaid
    FinanceVariable:
      type: object
      properties:
        sellerId:
          type: integer
        sellerSrcId:
          type: string
          description: External seller id.
        name:
          type: string
        description:
          type: string
        sellerDescription:
          type: string
        type:
          type: string
        value:
          type: number
          format: float
        globalValue:
          type: boolean
    FinanceOrderItemTransaction:
      type: object
      required:
        - orderItemId
        - orderId
        - commission
        - fees
        - vatAmount
        - whtAmount
        - payoutAmount
        - statementId
        - currency
        - country
        - statementType
      properties:
        orderItemId:
          type: integer
          description: The ID of the order item associated with the transaction.
        orderId:
          type: integer
          description: The ID of the order associated with the transaction.
        commission:
          type: number
          description: The commission amount of the transaction.
        fees:
          type: number
          description: The fees amount of the transaction.
        vatAmount:
          type: number
          description: The VAT amount of the transaction.
        whtAmount:
          type: number
          description: The WHT amount of the transaction.
        payoutAmount:
          type: number
          description: The payout amount of the transaction related to item.
        statementId:
          type: integer
          description: >-
            The ID of the statement associated with the transaction. 0 means
            that transaction belongs to current statement
        currency:
          type: string
          example: USD
          description: >-
            The currency of the transaction. Three-letter code, ISO 4217
            standard.
        country:
          type: string
          example: DE
          description: >-
            The country code of the transaction. Two-letter code, ISO 3166-1
            alpha-2 standard.
        statementType:
          description: The transaction's associated statement type.
          type: string
          default: marketplace
          enum:
            - marketplace
            - consignment
        payoutStatus:
          type: string
          description: The payout status of the transaction.
        accountStatementPaymentDueDate:
          type: string
          format: date-time
          description: The payment due date of the account statement.
    CurrentFinanceStatement:
      type: object
      required:
        - sellerId
        - number
        - startDate
        - endDate
        - openingBalance
        - closingBalance
        - payoutAmount
        - guaranteeDeposit
        - currency
        - type
      properties:
        sellerId:
          type: integer
        number:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        openingBalance:
          type: number
        closingBalance:
          type: number
        payoutAmount:
          type: number
        currency:
          type: string
        country:
          type: string
        guaranteeDeposit:
          type: number
        paid:
          type: boolean
        note:
          type: string
        paymentRef:
          type: string
        uploadId:
          type: string
        paidAt:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        type:
          type: string
          description: Type of an account statement
          enum:
            - marketplace
            - consignment
    CurrentFinanceStatementDetails:
      type: object
      required:
        - id
        - currency
        - type
        - details
      properties:
        id:
          type: integer
        currency:
          type: string
        type:
          type: string
          enum:
            - marketplace
            - consignment
        details:
          type: object
          required:
            - order
            - refunds
            - others
          properties:
            order:
              type: object
              properties:
                itemRevenue:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                otherRevenue:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                fees:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                subsidy:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                vatAmount:
                  nullable: true
                  type: number
                whtAmount:
                  nullable: true
                  type: number
                subtotal:
                  type: number
            refunds:
              type: object
              properties:
                itemRefunds:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                refunds:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                debitOtherRevenues:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                subsidyRefunds:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                vatAmount:
                  nullable: true
                  type: number
                whtAmount:
                  nullable: true
                  type: number
                subtotal:
                  type: number
            others:
              type: object
              properties:
                others:
                  type: object
                  properties:
                    total:
                      type: number
                    groups:
                      type: array
                      nullable: true
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: >-
                              This field represents the internal identifier of a
                              transaction type and not the account statement
                              group
                          name:
                            type: string
                          amount:
                            type: number
                vatAmount:
                  nullable: true
                  type: number
                whtAmount:
                  nullable: true
                  type: number
    CheckStatus:
      type: object
      properties:
        processStatus:
          type: string
          example: FINISHED
          description: Current status of the file.
    CreditNoteNumber:
      type: object
      properties:
        generationType:
          type: string
          description: Generation type
          example: autoincrement_number
        prefix:
          type: string
          description: Prefix for the credit note number
          example: ABC
        nextNumber:
          type: integer
          description: The next number
          example: 123
        nextFormatedValue:
          type: string
          description: The next formated value
          example: CNCODEABC123
    SellerExternalFile:
      type: object
      properties:
        fileType:
          description: >
            Type of the file. Note that types can be added and/or removed in
            future.
          type: string
          example: generic
          enum:
            - generic
            - contract
            - terms
        fileName:
          description: >
            Name of the file, usually original name of the file. You can use
            this field to display the file name in the UI  and to understand
            what kind of information is in certain file.
          type: string
          example: Addendum_May2024.pdf
        uploadedAt:
          description: |
            Date and time when the file was uploaded.
          type: string
          format: date-time
          example: '2024-10-08T13:35:17+00:00'
        downloadUrl:
          description: >
            Temporal link to download the file. This link is valid for 1 hour
            and can be used to download the file.
          type: string
          example: >-
            https://some-s3-bucket.s3.amazonaws.com/path/to/your/object?Expires=EXPIRATION_TIMESTAMP&Signature=SIGNATURE
  responses:
    EnabledCountries:
      description: Response a list of enabled countries
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: string
                example:
                  - SG
                  - VN
    OauthAppsCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: App UUID
                      example: 3f0c27aa-ca28-4526-88f0-a13e6c9a007b
                    name:
                      type: string
                      description: App name
                      example: cb56deed3d91799f86e5
                    appId:
                      type: string
                      description: App ID
                      example: cb56deed3d91799f86e5
                    identifier:
                      type: integer
                      description: Increment ID in database.
                    createdAt:
                      type: string
                      nullable: false
                      example: '2022-09-01 16:35:42'
                    updatedAt:
                      type: string
                      nullable: false
                      example: '2022-09-01 16:35:42'
                    userId:
                      type: integer
                      description: Identifier of a user.
                      example: 1024
              pagination:
                type: object
                properties:
                  offset:
                    type: integer
                    example: 0
                  limit:
                    type: integer
                    example: 10
                  totalCount:
                    type: integer
                    example: 1
    ProductSet:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 7865
              uuid:
                type: string
                example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
              srcId:
                description: >-
                  ID of image in Shop system. If empty means that image was not
                  yet syncronized with Shop and is not visible to end customers.
                example: '94345'
                type: string
                nullable: true
              name:
                type: string
                example: Block Shell Jacket
              parentSku:
                type: string
                description: >-
                  SKU of product, which acts as "main" one for ProductSet. Using
                  this value you can add new products to ProductSet using XLS
                  files. If feature of "parentSku" is disabled, then you should
                  use SKU of first product in ProductSet when you work with XLS
                  import files.
                example: NHGB93523-12
                nullable: true
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              description:
                type: string
                nullable: true
                description: >-
                  Description which will be visible by end customers. Depending
                  on settings of your seller and general configuration, there
                  could be limit of minimum and maximum length of the
                  description. Also, depending on configuration, description
                  should be plain text or may contain HTML markup.
                example: >-
                  Experience the ultimate expression of functionality at
                  BrandName with the Women's Block Shell Jacket. Our model is
                  wearing size *. She usually wears a size 8 and is 177cm tall.
              brandId:
                description: >-
                  Please, note that not every brand can be used without prior
                  aproval. Also, there are some brand-specific limitation for
                  variations (for example, for brand A it is possible to use
                  only sizes 34, 35, 36, 37, 38, 39, 40, but size 35.5 or 33
                  will lead to validation error).
                type: integer
                example: 78
              primaryCategoryId:
                description: >-
                  Please, note that there could limitation for certain sellers
                  in which categories seller allowed to create ProductSets.
                  Also, in cource of time categories can be marked as inactive
                  (for example when category A is splitted to categories B and
                  C).
                type: integer
                example: 309
              attributeSetId:
                description: >-
                  Different categories has different AttributeSets. It means
                  that for Shoes there is one set of attributes applied and for
                  Hats another one. AttributeSet is defined by primary category
                  of product set. In very rare cases attribute set of category
                  can be changed to another one. In this case in order to
                  successfully save ProductSet you will need to pass all
                  required attributes for new AttributeSet. This value represent
                  AttributeSet which was set for primary category of ProductSet
                  during last save.
                type: integer
                example: 2
              sellerId:
                type: integer
                example: 5623
              categories:
                description: >-
                  ProductSet can be listed in multiple additional categories.
                  There is a seller-specific limit regarding maximum count of
                  additional categories
                type: array
                example:
                  - 421
                  - 567
                items:
                  type: integer
              attributes:
                type: object
                description: >-
                  Array of attributes' values. Key is attribute ID and value
                  depends on type of attribute. It can be one of: string (for
                  "free text attributes" like "Warranty duration"), integer (for
                  attributes with list of options, for example "Material" can
                  have some set of fixed options), array of integers (for
                  attributes with multiple choise of predefined options), null
                  (when you didn't provide value for optional attribute), array
                  of strings for attributes which allow multiple values with
                  free text.
                example:
                  '421': string value
                  '533':
                    - 4
                    - 5
                  '567': 123
                  '721':
                    - string1
                    - string2
                  '854': null
              sizeSystem:
                description: >
                  Nullable field with same value as attribute that represents
                  "size system". Please, read description of

                  "GET /v2/brands/{brandId}/attributes" for more detailed
                  explanation. This field will be removed in future

                  versions of this endpoint and "size system" will be passed
                  only in array of attributes.
                type: integer
                example: 5
              browseNodes:
                type: array
                example:
                  - 421
                  - 567
                items:
                  type: integer
    ProductSetCreated:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 7865
              uuid:
                type: string
                example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
              srcId:
                description: >-
                  ID of image in Shop system. If empty means that image was not
                  yet syncronized with Shop and is not visible to end customers.
                example: '94345'
                type: string
                nullable: true
              name:
                type: string
                example: Block Shell Jacket
              parentSku:
                type: string
                description: >-
                  SKU of product, which acts as "main" one for ProductSet. Using
                  this value you can add new products to ProductSet using XLS
                  files. If feature of "parentSku" is disabled, then you should
                  use SKU of first product in ProductSet when you work with XLS
                  import files.
                example: NHGB93523-12
                nullable: true
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              description:
                type: string
                nullable: true
                description: >-
                  Description which will be visible by end customers. Depending
                  on settings of your seller and general configuration, there
                  could be limit of minimum and maximum length of the
                  description. Also, depending on configuration, description
                  should be plain text or may contain HTML markup.
                example: >-
                  Experience the ultimate expression of functionality at
                  BrandName with the Women's Block Shell Jacket. Our model is
                  wearing size *. She usually wears a size 8 and is 177cm tall.
              brandId:
                description: >-
                  Please, note that not every brand can be used without prior
                  aproval. Also, there are some brand-specific limitation for
                  variations (for example, for brand A it is possible to use
                  only sizes 34, 35, 36, 37, 38, 39, 40, but size 35.5 or 33
                  will lead to validation error).
                type: integer
                example: 78
              primaryCategoryId:
                description: >-
                  Please, note that there could limitation for certain sellers
                  in which categories seller allowed to create ProductSets.
                  Also, in cource of time categories can be marked as inactive
                  (for example when category A is splitted to categories B and
                  C).
                type: integer
                example: 309
              attributeSetId:
                description: >-
                  Different categories has different AttributeSets. It means
                  that for Shoes there is one set of attributes applied and for
                  Hats another one. AttributeSet is defined by primary category
                  of product set. In very rare cases attribute set of category
                  can be changed to another one. In this case in order to
                  successfully save ProductSet you will need to pass all
                  required attributes for new AttributeSet. This value represent
                  AttributeSet which was set for primary category of ProductSet
                  during last save.
                type: integer
                example: 2
              sellerId:
                type: integer
                example: 5623
              categories:
                description: >-
                  ProductSet can be listed in multiple additional categories.
                  There is a seller-specific limit regarding maximum count of
                  additional categories
                type: array
                example:
                  - 421
                  - 567
                items:
                  type: integer
              attributes:
                type: object
                description: >-
                  Array of attributes' values. Key is attribute ID and value
                  depends on type of attribute. It can be one of: string (for
                  "free text attributes" like "Warranty duration"), integer (for
                  attributes with list of options, for example "Material" can
                  have some set of fixed options), array of integers (for
                  attributes with multiple choise of predefined options), null
                  (when you didn't provide value for optional attribute), array
                  of strings for attributes which allow multiple values with
                  free text.
                example:
                  '421': string value
                  '533':
                    - 4
                    - 5
                  '567': 123
                  '721':
                    - string1
                    - string2
                  '854': null
              sizeSystem:
                description: >
                  Nullable field with same value as attribute that represents
                  "size system". Please, read description of

                  "GET /v2/brands/{brandId}/attributes" for more detailed
                  explanation. This field will be removed in future

                  versions of this endpoint and "size system" will be passed
                  only in array of attributes.
                type: integer
                example: 5
              browseNodes:
                type: array
                example:
                  - 421
                  - 567
                items:
                  type: integer
              sellerSku:
                type: string
                example: 68040427550-1
                description: >-
                  SKU from seller's side. Should be unique across products of
                  seller.
              status:
                type: string
                nullable: false
                enum:
                  - active
                  - inactive
                  - deleted
              sin:
                description: |
                  if not null indicates that product set is Hybrid
                type: string
                example: KMPWJ5
    ProductSetSample:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              primaryCategoryId:
                type: integer
                example: 2369
              __comment_primaryCategoryId:
                type: string
                example: Id of primary category in our database
              name:
                type: string
                example: Nikon Wide Angle Camera 10 MP black
              __comment_name:
                type: string
                example: Some descriptive product name
              brandId:
                type: integer
                example: 1
              __comment_brandId:
                type: string
                example: Id of a brand in our database
              price:
                type: number
                format: float
                example: 1.99
              __comment_price:
                type: string
                example: Some float value
              description:
                type: string
                example: >-
                  It's been the king of football games for years now. FIFA
                  Soccer 12 delivers an authentic Match Day experience, faster
                  and easier navigation, and over 500 officially licensed
                  clubs.  FIFA Soccer 12 brings to the pitch the game-changing
                  new Player Impact En
              __comment_description:
                type: string
                example: Some descriptive text
              sellerSku:
                type: string
                example: XMPL1
              __comment_sellerSku:
                type: string
                example: Unique text field in our database
              variation:
                type: string
                example: M
              __comment_variation:
                type: string
                nullable: true
                example: >-
                  Depending on input type - value from our database or a
                  user-defined value. Rarely can be null
              attributes:
                type: object
                properties:
                  '74':
                    type: integer
                    example: 307
                  '131':
                    type: string
                    example: >-
                      Best experience ever - super fast and easy navigation -
                      better control
                  __comment_74:
                    type: string
                    example: >-
                      Id of attribute (PackageType) with id of attribute option
                      (eg Parcel)
                  __comment_131:
                    type: string
                    example: Id of attribute (ShortDescription) with some text area
    ProductSetCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 7865
                    uuid:
                      type: string
                      example: 5b29bccc-d8bb-4a5c-85f6-1109d12d8233
                    srcId:
                      description: >-
                        ID of image in Shop system. If empty means that image
                        was not yet syncronized with Shop and is not visible to
                        end customers.
                      example: '94345'
                      type: string
                      nullable: true
                    name:
                      type: string
                      example: Block Shell Jacket
                    parentSku:
                      type: string
                      description: >-
                        SKU of product, which acts as "main" one for ProductSet.
                        Using this value you can add new products to ProductSet
                        using XLS files. If feature of "parentSku" is disabled,
                        then you should use SKU of first product in ProductSet
                        when you work with XLS import files.
                      example: NHGB93523-12
                      nullable: true
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    description:
                      type: string
                      nullable: true
                      description: >-
                        Description which will be visible by end customers.
                        Depending on settings of your seller and general
                        configuration, there could be limit of minimum and
                        maximum length of the description. Also, depending on
                        configuration, description should be plain text or may
                        contain HTML markup.
                      example: >-
                        Experience the ultimate expression of functionality at
                        BrandName with the Women's Block Shell Jacket. Our model
                        is wearing size *. She usually wears a size 8 and is
                        177cm tall.
                    brandId:
                      description: >-
                        Please, note that not every brand can be used without
                        prior aproval. Also, there are some brand-specific
                        limitation for variations (for example, for brand A it
                        is possible to use only sizes 34, 35, 36, 37, 38, 39,
                        40, but size 35.5 or 33 will lead to validation error).
                      type: integer
                      example: 78
                    primaryCategoryId:
                      description: >-
                        Please, note that there could limitation for certain
                        sellers in which categories seller allowed to create
                        ProductSets. Also, in cource of time categories can be
                        marked as inactive (for example when category A is
                        splitted to categories B and C).
                      type: integer
                      example: 309
                    attributeSetId:
                      description: >-
                        Different categories has different AttributeSets. It
                        means that for Shoes there is one set of attributes
                        applied and for Hats another one. AttributeSet is
                        defined by primary category of product set. In very rare
                        cases attribute set of category can be changed to
                        another one. In this case in order to successfully save
                        ProductSet you will need to pass all required attributes
                        for new AttributeSet. This value represent AttributeSet
                        which was set for primary category of ProductSet during
                        last save.
                      type: integer
                      example: 2
                    sellerId:
                      type: integer
                      example: 5623
                    categories:
                      description: >-
                        ProductSet can be listed in multiple additional
                        categories. There is a seller-specific limit regarding
                        maximum count of additional categories
                      type: array
                      example:
                        - 421
                        - 567
                      items:
                        type: integer
                    attributes:
                      type: object
                      description: >-
                        Array of attributes' values. Key is attribute ID and
                        value depends on type of attribute. It can be one of:
                        string (for "free text attributes" like "Warranty
                        duration"), integer (for attributes with list of
                        options, for example "Material" can have some set of
                        fixed options), array of integers (for attributes with
                        multiple choise of predefined options), null (when you
                        didn't provide value for optional attribute), array of
                        strings for attributes which allow multiple values with
                        free text.
                      example:
                        '421': string value
                        '533':
                          - 4
                          - 5
                        '567': 123
                        '721':
                          - string1
                          - string2
                        '854': null
                    sizeSystem:
                      description: >
                        Nullable field with same value as attribute that
                        represents "size system". Please, read description of

                        "GET /v2/brands/{brandId}/attributes" for more detailed
                        explanation. This field will be removed in future

                        versions of this endpoint and "size system" will be
                        passed only in array of attributes.
                      type: integer
                      example: 5
                    browseNodes:
                      type: array
                      example:
                        - 421
                        - 567
                      items:
                        type: integer
                    sellerSku:
                      type: string
                      example: 68040427550-1
                      description: >-
                        SKU from seller's side. Should be unique across products
                        of seller.
                    status:
                      type: string
                      nullable: false
                      enum:
                        - active
                        - inactive
                        - deleted
                    sin:
                      description: |
                        if not null indicates that product set is Hybrid
                      type: string
                      example: KMPWJ5
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    ProductSetCountByAttributeSet:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                attributeSetId:
                  description: >-
                    Please, note that there could limitation for certain sellers
                    in which categories seller allowed to create ProductSets.
                    Also, in cource of time categories can be marked as inactive
                    (for example when category A is splitted to categories B and
                    C).
                  type: integer
                  example: 309
                count:
                  type: integer
                  example: 43
    Product:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                description: Product identifier
                type: integer
                example: 7865
                readOnly: true
              uuid:
                description: Product UUID identifier
                example: 060cef12-08ef-4ae6-b15e-79398fedc774
                type: string
                readOnly: true
              srcId:
                description: >
                  ID of product in Shop system. If empty means that product was
                  not yet syncronized with Shop and is

                  not visible to end customers.
                example: '94345'
                type: string
                nullable: true
                readOnly: true
              shopSku:
                description: >
                  SKU on the shop's side. Usually it is visible to end customer.
                  If value is null, it means that product is not yet

                  syncronized with shop and SKU was not assigned.
                type: string
                example: NI464AKLCEZ0
                nullable: true
                readOnly: true
              sellerSku:
                description: >-
                  SKU from seller's side. Should be unique across products of
                  seller.
                type: string
                example: shoe-123
              sin:
                description: >
                  Sometimes several sellers are selling same product. In this
                  case products of different sellers can be displayed

                  using one single product card in shop. This parameter, if set,
                  identifies to which product in shop system this

                  product of seller belongs to.
                type: string
                example: KMPWJ5
                readOnly: true
              sellerId:
                type: integer
                example: 252
                readOnly: true
              productSetId:
                type: integer
                example: 744
                readOnly: true
              approvalStatus:
                type: string
                description: Product approval status
                example: approved
                readOnly: true
                enum:
                  - pending
                  - approved
                  - rejected
              updatedByUserId:
                type: integer
                example: 8732
                readOnly: true
              status:
                description: Product status
                type: string
                example: active
                enum:
                  - active
                  - inactive
                  - deleted
              variation:
                description: name of variation, usually size like XL, 39, 62.
                type: string
                example: '38'
              taxClassId:
                description: Tax class Id specific for this particular size.
                type: integer
                example: 1
                readOnly: true
              shipmentTypeId:
                description: >-
                  Shipment type Id specific for this particular size. The Value
                  include 1 - warehouse; 2 - dropshipping; 3 - crossdocking;  if
                  the value is empty the variation will be created with the
                  default value of this endpoint /v2/seller-settings with this
                  parameter product_default_shipment_type
                type: integer
                example: 1
              productIdentifier:
                description: Identifier like EAN, Code-39, etc
                type: string
                example: '460232163234'
              duplicateGroupId:
                type: integer
                example: 51
                readOnly: true
              srcUpdatedAt:
                type: string
                description: >-
                  Datetime when product was last updated(synced) with shop
                  system.
                format: date-time
                nullable: true
                readOnly: true
              createdAt:
                type: string
                format: date-time
                readOnly: true
              updatedAt:
                type: string
                format: date-time
                readOnly: true
              name:
                type: string
                description: name of the product
                example: '1600 Slim Brushed Chrome '
    Products:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Product identifier
                      type: integer
                      example: 7865
                      readOnly: true
                    uuid:
                      description: Product UUID identifier
                      example: 060cef12-08ef-4ae6-b15e-79398fedc774
                      type: string
                      readOnly: true
                    srcId:
                      description: >
                        ID of product in Shop system. If empty means that
                        product was not yet syncronized with Shop and is

                        not visible to end customers.
                      example: '94345'
                      type: string
                      nullable: true
                      readOnly: true
                    shopSku:
                      description: >
                        SKU on the shop's side. Usually it is visible to end
                        customer. If value is null, it means that product is not
                        yet

                        syncronized with shop and SKU was not assigned.
                      type: string
                      example: NI464AKLCEZ0
                      nullable: true
                      readOnly: true
                    sellerSku:
                      description: >-
                        SKU from seller's side. Should be unique across products
                        of seller.
                      type: string
                      example: shoe-123
                    sin:
                      description: >
                        Sometimes several sellers are selling same product. In
                        this case products of different sellers can be displayed

                        using one single product card in shop. This parameter,
                        if set, identifies to which product in shop system this

                        product of seller belongs to.
                      type: string
                      example: KMPWJ5
                      readOnly: true
                    sellerId:
                      type: integer
                      example: 252
                      readOnly: true
                    productSetId:
                      type: integer
                      example: 744
                      readOnly: true
                    approvalStatus:
                      type: string
                      description: Product approval status
                      example: approved
                      readOnly: true
                      enum:
                        - pending
                        - approved
                        - rejected
                    updatedByUserId:
                      type: integer
                      example: 8732
                      readOnly: true
                    status:
                      description: Product status
                      type: string
                      example: active
                      enum:
                        - active
                        - inactive
                        - deleted
                    variation:
                      description: name of variation, usually size like XL, 39, 62.
                      type: string
                      example: '38'
                    taxClassId:
                      description: Tax class Id specific for this particular size.
                      type: integer
                      example: 1
                      readOnly: true
                    shipmentTypeId:
                      description: >-
                        Shipment type Id specific for this particular size. The
                        Value include 1 - warehouse; 2 - dropshipping; 3 -
                        crossdocking;  if the value is empty the variation will
                        be created with the default value of this endpoint
                        /v2/seller-settings with this parameter
                        product_default_shipment_type
                      type: integer
                      example: 1
                    productIdentifier:
                      description: Identifier like EAN, Code-39, etc
                      type: string
                      example: '460232163234'
                    duplicateGroupId:
                      type: integer
                      example: 51
                      readOnly: true
                    srcUpdatedAt:
                      type: string
                      description: >-
                        Datetime when product was last updated(synced) with shop
                        system.
                      format: date-time
                      nullable: true
                      readOnly: true
                    createdAt:
                      type: string
                      format: date-time
                      readOnly: true
                    updatedAt:
                      type: string
                      format: date-time
                      readOnly: true
                    name:
                      type: string
                      description: name of the product
                      example: '1600 Slim Brushed Chrome '
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    BadRequest:
      description: Bad Request
    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
              title:
                type: string
                example: Validation Failed
              detail:
                type: string
                example: 'orderItemIds[0]: This value should be of type integer.'
              violations:
                type: array
                items:
                  type: object
                  properties:
                    propertyPath:
                      type: string
                      example: orderItemIds[0]
                    title:
                      type: string
                      example: This value should be of type integer.
                    parameters:
                      type: object
                      properties:
                        value:
                          type: string
                          example: invalid_order_item_id
                        type:
                          type: string
                          example: integer
                    type:
                      type: string
    AccessDenied:
      description: Access Denied
    NotFound:
      description: Entity not found
    Unauthorized:
      description: Unauthorized error
    Forbidden:
      description: Forbidden
    UnprocessableEntity:
      description: Entity can not be processed
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
                description: ''
              title:
                type: string
                description: >
                  A short summary of the problem type. Written in English and
                  readable for engineers, usually not suited for non technical
                  stakeholders and not localized.
                example: Status Transition is not allowed
              status:
                type: integer
                format: int32
                description: >
                  The HTTP status code generated by the origin server for this
                  occurrence of the problem.
                minimum: 400
                maximum: 599
                example: 400
              detail:
                type: string
                description: >
                  A human readable explanation specific to this occurrence of
                  the problem that is helpful to locate the problem and give
                  advice on how to proceed. Written in English and readable for
                  engineers, usually not suited for non technical stakeholders
                  and not localized.
                example: Status 'InTransit2' is not valid status for order item.
    NullResponse:
      description: Null response
    ServiceUnavailable:
      description: Service Unavailable
    ServiceUnavailableDueToMaintenanceMode:
      description: Service unavailable due to Maintenance Mode
    Accepted:
      description: Accepted
    Created:
      description: Created
    ImageCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  readOnly: true
                  example: 7865
                srcId:
                  description: >-
                    ID of image in Shop system. If empty means that image was
                    not yet synchronized with Shop and is not visible to end
                    customers.
                  example: '94345'
                  type: string
                  nullable: true
                  readOnly: true
                productSetId:
                  type: integer
                  readOnly: true
                  example: 744
                position:
                  description: >-
                    Contains information about desired order in which images
                    should be displayed to end customer. May contain gaps in
                    case if some image was deleted. Positions are usually
                    recalculated starting from 1 during any update operation
                    (adding new image, for example).
                  type: integer
                  example: 2
                displayUrl:
                  description: Full public URL of image.
                  type: string
                  example: https://some.domain/path/image.jpg
                createdAt:
                  type: string
                  readOnly: true
                  format: date-time
                updatedAt:
                  type: string
                  readOnly: true
                  format: date-time
    Import:
      description: Accepted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              message:
                type: string
                example: >-
                  <b>File has been successfully uploaded.</b> Please be patient
                  while data is being processed.
              errorMessages:
                type: array
                items:
                  type: string
                  example: >-
                    There is no data in uploaded file or all records were
                    invalid and have been ignored.
              warningMessages:
                type: array
                items:
                  type: string
                  example: 'Unknown field: Country'
              feedId:
                type: integer
                example: 7
              feedUuid:
                type: string
                example: 060cef12-08ef-4ae6-b15e-79398fedc774
    ImportProductStocksXml:
      description: Accepted
      content:
        text/xml:
          schema:
            oneOf:
              - type: object
                properties:
                  Head:
                    type: object
                    properties:
                      RequestId:
                        type: string
                        description: The unique identifier for the request.
                        example: 1adf8fc6-a08f-47d5-9613-e2af40243e2f
                      RequestAction:
                        type: string
                        description: The action that was successfully performed.
                        example: ProductStockUpdate
                      ResponseType:
                        type: string
                        description: The type of the response, if any.
                      Timestamp:
                        type: string
                        format: date-time
                        description: The timestamp of when the action was performed.
                        example: 2023-05-26T17:26:50+0200
                  Body:
                    type: object
                    properties:
                      WarningDetail:
                        type: object
                        properties:
                          Field:
                            type: string
                            description: The field associated with the warning.
                          Message:
                            type: string
                            description: A message explaining the warning.
                          Value:
                            type: string
                            description: The value that caused the warning.
              - type: object
                properties:
                  ErrorResponse:
                    type: object
                    properties:
                      Head:
                        type: object
                        properties:
                          RequestAction:
                            type: string
                            description: >-
                              The action that was requested when the error
                              occurred.
                            example: ProductStockUpdate
                          ErrorType:
                            type: string
                            description: The type of the error.
                            example: Platform
                          ErrorCode:
                            type: integer
                            description: The code of the error.
                            example: 30
                          ErrorMessage:
                            type: string
                            description: A message describing the error.
                            example: 'E030: Empty Request'
                      Body:
                        type: object
                        properties:
                          ErrorDetail:
                            type: array
                            items:
                              type: object
                              properties:
                                Field:
                                  type: string
                                  description: The field where the error occurred.
                                  example: field1
                                Message:
                                  type: string
                                  description: A message describing the error detail.
                                  example: message1
                                Value:
                                  type: string
                                  description: The value that caused the error.
                                  example: value1
                                SellerSku:
                                  type: string
                                  description: The seller SKU related to the error.
                                  example: sku1
            xml:
              name: SuccessResponse
    ImportProductCreationXmlImport:
      description: Accepted
      content:
        text/xml:
          schema:
            oneOf:
              - type: object
                properties:
                  Head:
                    type: object
                    properties:
                      RequestId:
                        type: string
                        description: The unique identifier for the request.
                        example: cb106552-87f3-450b-aa8b-412246a24b34
                      RequestAction:
                        type: string
                        description: The action that was successfully performed.
                        example: ProductCreate
                      ResponseType:
                        type: string
                        description: The type of the response, if any.
                      Timestamp:
                        type: string
                        format: date-time
                        description: The timestamp of when the action was performed.
                        example: 2016-06-22T04:40:14+0200
                  Body:
                    type: object
                    properties:
                      WarningDetail:
                        type: object
                        properties:
                          Field:
                            type: string
                            description: The field associated with the warning.
                          Message:
                            type: string
                            description: A message explaining the warning.
                          Value:
                            type: string
                            description: The value that caused the warning.
              - type: object
                properties:
                  ErrorResponse:
                    type: object
                    properties:
                      Head:
                        type: object
                        properties:
                          RequestAction:
                            type: string
                            description: >-
                              The action that was requested when the error
                              occurred.
                            example: ProductCreate
                          ErrorType:
                            type: string
                            description: The type of the error.
                            example: Platform
                          ErrorCode:
                            type: integer
                            description: The code of the error.
                            example: 1000
                          ErrorMessage:
                            type: string
                            description: A message describing the error.
                            example: >-
                              Could not save product: An exact match of the
                              document is being processed,
                              cb106552-87f3-450b-aa8b-412246a24b34
                      Body:
                        type: object
                        properties:
                          ErrorDetail:
                            type: array
                            items:
                              type: object
                              properties:
                                Field:
                                  type: string
                                  description: The field where the error occurred.
                                  example: field1
                                Message:
                                  type: string
                                  description: A message describing the error detail.
                                  example: message1
                                Value:
                                  type: string
                                  description: The value that caused the error.
                                  example: value1
                                SellerSku:
                                  type: string
                                  description: The seller SKU related to the error.
                                  example: sku1
            xml:
              name: SuccessResponse
    ImportProductUpdateXmlImport:
      description: Accepted
      content:
        text/xml:
          schema:
            oneOf:
              - type: object
                properties:
                  Head:
                    type: object
                    properties:
                      RequestId:
                        type: string
                        description: The unique identifier for the request.
                        example: cb106552-87f3-450b-aa8b-412246a24b34
                      RequestAction:
                        type: string
                        description: The action that was successfully performed.
                        example: ProductCreate
                      ResponseType:
                        type: string
                        description: The type of the response, if any.
                      Timestamp:
                        type: string
                        format: date-time
                        description: The timestamp of when the action was performed.
                        example: 2016-06-22T04:40:14+0200
                  Body:
                    type: object
                    properties:
                      WarningDetail:
                        type: object
                        properties:
                          Field:
                            type: string
                            description: The field associated with the warning.
                          Message:
                            type: string
                            description: A message explaining the warning.
                          Value:
                            type: string
                            description: The value that caused the warning.
              - type: object
                properties:
                  ErrorResponse:
                    type: object
                    properties:
                      Head:
                        type: object
                        properties:
                          RequestAction:
                            type: string
                            description: >-
                              The action that was requested when the error
                              occurred.
                            example: ProductCreate
                          ErrorType:
                            type: string
                            description: The type of the error.
                            example: Platform
                          ErrorCode:
                            type: integer
                            description: The code of the error.
                            example: 1000
                          ErrorMessage:
                            type: string
                            description: A message describing the error.
                            example: >-
                              Could not save product: An exact match of the
                              document is being processed,
                              cb106552-87f3-450b-aa8b-412246a24b34
                      Body:
                        type: object
                        properties:
                          ErrorDetail:
                            type: array
                            items:
                              type: object
                              properties:
                                Field:
                                  type: string
                                  description: The field where the error occurred.
                                  example: field1
                                Message:
                                  type: string
                                  description: A message describing the error detail.
                                  example: message1
                                Value:
                                  type: string
                                  description: The value that caused the error.
                                  example: value1
                                SellerSku:
                                  type: string
                                  description: The seller SKU related to the error.
                                  example: sku1
            xml:
              name: SuccessResponse
    Brand:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                nullable: false
                example: 111555
              srcId:
                type: string
                nullable: true
                example: ADI5341
                description: Internal id
              uuid:
                type: string
                nullable: true
                example: 1af9fe46-77d2-4ab2-8b4a-8c7eeac8bbc9
              name:
                type: string
                nullable: false
                example: Adidas
              status:
                type: string
                nullable: false
                enum:
                  - active
                  - inactive
                  - deleted
              isActive:
                type: boolean
                nullable: false
                example: true
              isApproved:
                type: boolean
                nullable: false
                example: true
              isRestricted:
                type: boolean
                nullable: false
                example: false
              countries:
                type: string
                nullable: false
                example: RU,KZ
              createdAt:
                type: string
                format: date-time
                nullable: false
                example: '2021-09-22T23:21:42+02:00'
              updatedAt:
                type: string
                format: date-time
                nullable: false
                example: '2021-09-22T23:21:42+02:00'
    BrandsCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      nullable: false
                      example: 111555
                    srcId:
                      type: string
                      nullable: true
                      example: ADI5341
                      description: Internal id
                    uuid:
                      type: string
                      nullable: true
                      example: 1af9fe46-77d2-4ab2-8b4a-8c7eeac8bbc9
                    name:
                      type: string
                      nullable: false
                      example: Adidas
                    status:
                      type: string
                      nullable: false
                      enum:
                        - active
                        - inactive
                        - deleted
                    isActive:
                      type: boolean
                      nullable: false
                      example: true
                    isApproved:
                      type: boolean
                      nullable: false
                      example: true
                    isRestricted:
                      type: boolean
                      nullable: false
                      example: false
                    countries:
                      type: string
                      nullable: false
                      example: RU,KZ
                    createdAt:
                      type: string
                      format: date-time
                      nullable: false
                      example: '2021-09-22T23:21:42+02:00'
                    updatedAt:
                      type: string
                      format: date-time
                      nullable: false
                      example: '2021-09-22T23:21:42+02:00'
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    BrandAttributesCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                name:
                  type: string
                  example: supplier_type
                options:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 321
                      name:
                        type: string
                        example: Direct
    PriceCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productSetId:
                  type: number
                  format: integer
                  example: 672
                productId:
                  type: number
                  format: integer
                  example: 2223
                price:
                  type: number
                  format: float
                  example: 7.89
                  description: >
                    Price of a product.

                    Might be restricted by maximum or minimum allowed category
                    price.
                salePrice:
                  type: number
                  format: float
                  example: 6
                  nullable: true
                  description: >
                    Sale price of a product. Can be added only if sale price
                    feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Country settings may require minimum period of time product
                    is active before sale price can be set.

                    Must be lower than regular price.

                    Might be restricted by maximum or minimum allowed category
                    price and by allowed discount.
                saleStartDate:
                  type: string
                  format: date-time
                  nullable: true
                  description: >
                    Start date of a sale pricing. Can be added only if sale
                    price feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Must be set after 2010-01-01.
                saleEndDate:
                  type: string
                  format: date-time
                  nullable: true
                  description: >
                    End date of a sale pricing. Can be added only if sale price
                    feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Must be set in the future and be further in time than
                    saleStartDate.
                country:
                  type: string
                  example: ID
                status:
                  description: >-
                    Indicates whether certain product should be sold in given
                    country.
                  type: string
                  example: active
    GroupedPriceCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productSetId:
                  type: integer
                  example: 432
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        example: 3333
                      prices:
                        type: array
                        items:
                          type: object
                          properties:
                            price:
                              type: number
                              format: float
                              example: 7.89
                              description: >
                                Price of a product.

                                Might be restricted by maximum or minimum
                                allowed category price.
                            salePrice:
                              type: number
                              format: float
                              example: 6
                              nullable: true
                              description: >
                                Sale price of a product. Can be added only if
                                sale price feature is unlocked for the country.

                                User settings may forbid user from changing it.

                                Country settings may require minimum period of
                                time product is active before sale price can be
                                set.

                                Must be lower than regular price.

                                Might be restricted by maximum or minimum
                                allowed category price and by allowed discount.
                            saleStartDate:
                              type: string
                              format: date-time
                              nullable: true
                              description: >
                                Start date of a sale pricing. Can be added only
                                if sale price feature is unlocked for the
                                country.

                                User settings may forbid user from changing it.

                                Must be set after 2010-01-01.
                            saleEndDate:
                              type: string
                              format: date-time
                              nullable: true
                              description: >
                                End date of a sale pricing. Can be added only if
                                sale price feature is unlocked for the country.

                                User settings may forbid user from changing it.

                                Must be set in the future and be further in time
                                than saleStartDate.
                            country:
                              type: string
                              example: ID
                            status:
                              description: >-
                                Indicates whether certain product should be sold
                                in given country.
                              type: string
                              example: active
    GroupCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Super products
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    PackageDocument:
      description: Document was successfully uploaded
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                description: ID of created document
                type: integer
                example: 672
    PickupRequest:
      description: Created pickup request
      content:
        application/json:
          schema:
            type: object
            properties:
              orderItemIds:
                type: array
                items:
                  type: integer
                example:
                  - 1
                  - 2
              errors:
                type: array
                items:
                  type: string
                description: Empty list of errors
                example: []
    MethodNotAllowed:
      description: Method not allowed
    CustomKpiValue:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              externalKpiName:
                type: string
                example: Operational Score
              sellerShortCode:
                type: string
                example: NG1003C
              value:
                type: number
                format: float
                example: 50
                minimum: 0.01
                maximum: 100
    SellerSettings:
      description: OK
      content:
        application/json:
          schema:
            type: object
            example:
              document_number: null
              allow_shipping_fees: 1
              omnibar_search_enabled: 1
              payment/provider/enabled: '0'
              fee_cancellation_enabled: '1'
              daily_order_limit: 10000
              max_number_of_notifications: 30
              format/date: MMM d, yyyy
              format/time: HH:mm
              sale_price_discount: 10,15,20,25,30,35,40,45,50,60
              help_link/getting_started_link: ''
              weekend_days:
                - '6'
                - '7'
              fee_cancellation_settings:
                - '1':
                    p: 0
                    m: 0
                    x: 0
                - '2':
                    p: 0
                    m: 0
                    x: 0
              product_available_properties: '{"production":[]}'
              available_languages: >-
                [{"id_language": 142, "code": "en_150", "name": "English
                (Europe)", "active": 1}, {"id_language": 1, "code": "en_US",
                "name": "English", "active": 1}]
    SellerContractIds:
      description: OK
      content:
        application/json:
          schema:
            type: object
            required:
              - contractIds
            properties:
              contractIds:
                type: array
                items:
                  type: integer
                example:
                  - 123456
                  - 654321
    SellerConfigurationFields:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
            example:
              - id: 1
                fieldName: Address 1
                fieldPosition: 0
                groupName: Business Information
                groupPosition: 0
                type: Text
                isEnabled: true
                isEnabledFieldLocked: true
                isMandatory: false
                isMandatoryLocked: false
                isEditable: true
                isQCNeeded: false
                isSentToShop: true
                isSentToShopLocked: true
                isUsedInConsignmentFormulas: true
                fieldIdentifier: account_manager
                options:
                  - 'Yes'
                  - 'No'
    SellerProfileGeneral:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                value:
                  type: string
                  example: 000-111-222-33345
                  description: >
                    If type=file then value is json string with two fields:
                    "originalName" and "url". url - is a temporal link Example:
                    {"originalName": "file1.pdf", "url":
                    "https://some-s3-bucket.s3.amazonaws.com/path/to/your/object?Expires=EXPIRATION_TIMESTAMP&Signature=SIGNATURE"}
                    If type<>file then value is plain value that can be
                    presented in the UI
    CategoriesCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: Category identifier
                  type: integer
                  example: 7865
                  readOnly: true
                  nullable: true
                parentId:
                  description: Category parent identifier
                  type: integer
                  example: 1285
                  nullable: true
                  readOnly: true
                name:
                  description: Category name
                  type: string
                  example: Sample category name
                  nullable: true
                  readOnly: true
                attributeSetId:
                  description: Attribute set identifier
                  type: integer
                  example: 8757345
                  nullable: false
                  readOnly: true
                pathIds:
                  description: Category path identifier list
                  type: array
                  example:
                    - 3461
                    - 6783
                  items:
                    type: integer
                path:
                  description: Category path
                  type: array
                  example:
                    - Back To School
                    - For Kids
                    - Books
                  items:
                    type: string
                uuid:
                  description: Category UUID identifier
                  example: 060cef12-08ef-4ae6-b15e-79398fedc774
                  type: string
                  readOnly: true
    CategoriesTreeCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
                - type: object
                  properties:
                    id:
                      description: Category identifier
                      type: integer
                      example: 7865
                      readOnly: true
                      nullable: true
                    parentId:
                      description: Category parent identifier
                      type: integer
                      example: 1285
                      nullable: true
                      readOnly: true
                    name:
                      description: Category name
                      type: string
                      example: Sample category name
                      nullable: true
                      readOnly: true
                    attributeSetId:
                      description: Attribute set identifier
                      type: integer
                      example: 8757345
                      nullable: false
                      readOnly: true
                    pathIds:
                      description: Category path identifier list
                      type: array
                      example:
                        - 3461
                        - 6783
                      items:
                        type: integer
                    path:
                      description: Category path
                      type: array
                      example:
                        - Back To School
                        - For Kids
                        - Books
                      items:
                        type: string
                    uuid:
                      description: Category UUID identifier
                      example: 060cef12-08ef-4ae6-b15e-79398fedc774
                      type: string
                      readOnly: true
                - type: object
                  properties:
                    children:
                      type: array
                      description: Category children
                      items:
                        allOf:
                          - type: object
                            properties:
                              id:
                                description: Category identifier
                                type: integer
                                example: 7865
                                readOnly: true
                                nullable: true
                              parentId:
                                description: Category parent identifier
                                type: integer
                                example: 1285
                                nullable: true
                                readOnly: true
                              name:
                                description: Category name
                                type: string
                                example: Sample category name
                                nullable: true
                                readOnly: true
                              attributeSetId:
                                description: Attribute set identifier
                                type: integer
                                example: 8757345
                                nullable: false
                                readOnly: true
                              pathIds:
                                description: Category path identifier list
                                type: array
                                example:
                                  - 3461
                                  - 6783
                                items:
                                  type: integer
                              path:
                                description: Category path
                                type: array
                                example:
                                  - Back To School
                                  - For Kids
                                  - Books
                                items:
                                  type: string
                              uuid:
                                description: Category UUID identifier
                                example: 060cef12-08ef-4ae6-b15e-79398fedc774
                                type: string
                                readOnly: true
                          - type: object
                            properties:
                              children:
                                type: array
                                description: Category children
                                example: []
                                items: {}
    CategoryRoot:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                description: Category identifier
                type: integer
                example: 7865
                readOnly: true
                nullable: true
              parentId:
                description: Category parent identifier
                type: integer
                example: 1285
                nullable: true
                readOnly: true
              name:
                description: Category name
                type: string
                example: Sample category name
                nullable: true
                readOnly: true
              attributeSetId:
                description: Attribute set identifier
                type: integer
                example: 8757345
                nullable: false
                readOnly: true
              pathIds:
                description: Category path identifier list
                type: array
                example:
                  - 3461
                  - 6783
                items:
                  type: integer
              path:
                description: Category path
                type: array
                example:
                  - Back To School
                  - For Kids
                  - Books
                items:
                  type: string
              uuid:
                description: Category UUID identifier
                example: 060cef12-08ef-4ae6-b15e-79398fedc774
                type: string
                readOnly: true
    CategoryAttribute:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                description: >
                  Attribute identifier. Please, consider the fact that there
                  could be several attributes with

                  the same name, but with different IDs. For example, there can
                  be AttributeSets "Shoes", "Dresses"

                  and "Jewelry". Shoes and Dresses has "color", but there is no
                  such attribute for "Jewelry".


                  So when you want to create product in "Shoes" or "Dresses" you
                  can (and if "color" is mandatory -

                  should) pass value of "color". But this attribute "color" will
                  have different IDs, probably

                  different set of options, maybe different validation rules and
                  so on.
                type: integer
                example: 7865
                readOnly: true
                nullable: true
              label:
                description: >
                  Attribute label, in general same as name, but can contain
                  spaces and non-latin and/or non numeric

                  characters. Subject to change. For example, there is attribute
                  with label "Colour" but then new

                  attribute "Second color" was added to make end users be able
                  to shop for perfect colour combination.

                  After that attribute with label "Colour" may change its label
                  to "Main Colour". You can use this

                  property if you are building your own UI for SellerCenter
                  operations as label for attribute.
                type: string
                example: Sample attribute label
                nullable: true
                readOnly: true
              name:
                description: >-
                  Attribute name for internal usage. You can ignore this
                  property.
                type: string
                example: Attribute name
                nullable: false
                readOnly: true
              feedName:
                description: >
                  Feed name: this is how attribute is displayed in XLSX exports
                  and expected to be in imports. When your

                  integration with SellerCenter will generate files for upload
                  to SellerCenter, then you need to use this

                  property as column name. Very rarely changed, but you need to
                  consider that is can happen.
                type: string
                example: Feed name
                nullable: false
                readOnly: true
              groupName:
                description: >
                  Attribute's group name. If you implement own UI for
                  SellerCenter it is useful to display attributes in

                  groups, for example "Delivery", "Product Additional Details".
                  By using this field you can split

                  attributes in groups and display accordingly.
                type: string
                example: Content
                nullable: true
                readOnly: true
              isMandatory:
                description: |
                  Attribute is mandatory.
                type: boolean
                example: false
                nullable: false
                readOnly: true
              isGlobalAttribute:
                description: >
                  Is true when attribute does not belong to certain AttributeSet
                  and can be set for any product.
                type: boolean
                example: true
                nullable: true
                readOnly: true
              description:
                description: >
                  Attribute description. Maybe useful to see more about meaning
                  of attribute or when you develop

                  own UI for SellerCenter operations.
                type: string
                example: Some description of an attribute
                nullable: true
                readOnly: true
              productType:
                description: >
                  Legacy field indicating whether attribute belongs to product
                  ("simple"), product set ("config") or very-special

                  ("sellercenter"). Please, do not rely on this field as it is
                  subject to change in near future. It is left

                  for compatibility reasons for some clients of previous
                  versions of API.
                type: string
                example: sellercenter
                nullable: false
                readOnly: true
              inputType:
                description: >
                  Type of input to display to user. See enum values for possible
                  values. This may be

                  useful if you develop your own UI for SellerCenter.
                type: string
                enum:
                  - checkbox
                  - datefield
                  - datetime
                  - dropdown
                  - multiselect
                  - numberfield
                  - textarea
                  - textfield
                example: numberfield
                nullable: false
                readOnly: true
              attributeType:
                description: >
                  Type of an attribute, see enum for possible values. It defines
                  how SellerCenter stores value of certain

                  attribute. For type of "value" - it is stored "as-is", for
                  "option" - ID of option stored,

                  for "multi_option" - array or option IDs.


                  This is useful when you get information about product set and
                  you want to understand whether

                  123 is plain value or ID of option.


                  There is a special attribute type called "system". Attribute
                  with those types returned for purposes

                  of making aware about logic of those attributes. For example,
                  you may see attribute "Brand" among them.

                  From this attribute you will see useful information like "is
                  it mandatory?", "what is example value of

                  it?", "what description can I show to my users while I develop
                  our own UI for SellerCenter".


                  Attributes of this type should not be sent in array of
                  "attributes" when you create or update your

                  product sets. Continuing with example of Brand attribute: to
                  pass this information you should use

                  field brandId in root of payload for creation of product set.
                type: string
                enum:
                  - value
                  - option
                  - multi_option
                  - system
                example: system
                nullable: false
                readOnly: true
              exampleValue:
                description: Attribute's example value
                type: string
                nullable: true
                readOnly: true
              maxLength:
                description: |
                  Attribute's max length, applicable for string attributes.
                type: integer
                example: 23
                nullable: true
                readOnly: true
              isVisibleForHybrid:
                description: >
                  This flag enables/disable if an attribute is visible or not
                  for a hybrid product
                type: boolean
                example: true
                nullable: false
                readOnly: true
              attributeDefinitionType:
                description: |
                  Is used to define the attribute type
                type: string
                enum:
                  - default
                  - price_status
                  - price
                  - special_price
                  - sale_start
                  - sale_end
                example: price
                nullable: true
                readOnly: true
              attributeDefinitionCountry:
                description: |
                  Is used to define the attribute's country/vendor
                type: string
                enum:
                  - TW
                  - SG
                  - PH
                  - ID
                  - MY
                  - HK
                example: MY
                nullable: true
                readOnly: true
              inputMode:
                description: >
                  Is used to disable, hide a field. See enum values for possible
                  values.
                type: string
                enum:
                  - edit
                  - display
                  - invisible
                  - edit_on_create
                example: edit
                nullable: true
                readOnly: true
              forbidEmpty:
                description: |
                  If set to true an attribute can not be 0 or NULL.
                type: boolean
                example: true
                nullable: false
                readOnly: true
              options:
                description: >
                  Attribute options. List of all option for current attribute.
                  Additional validation may apply

                  like validation "brand to attribute mappings", "attribute to
                  attribute mapping". Example:

                  you want to create new product in category "Shoes". Option
                  "45" is among options of attribute

                  "Size", but there is a mapping which says that if for
                  attribute "Age group" there is a value

                  "Kids" selected then only allowed sizes are "20", "21", ...
                  "32".
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: >
                        Option identifier. Please note that several attrbiutes
                        can have options with same name,

                        but with different IDs. You need to use right option ID
                        for right attribute. For example,

                        there are attributes "Colour" (ID=1) and "Soil color"
                        (ID=2). "Color" has option "Black"

                        with ID=1234 and "Soil color" has option "Black" with
                        ID=9876. Even though name of options

                        are the same, when you want to pass value for "Soil
                        color" you can send only 9876,
                      type: integer
                      example: 631
                      readOnly: true
                      nullable: false
                    name:
                      description: >
                        Option name. If you implement own UI for SellerCenter
                        you can display this to user, also

                        same value end user in the shop will see. If you are
                        generating XLS files for future

                        upload to SellerCenter then you need also to use this
                        value. Please, note that very rarely

                        this value can be changed (for example, one colour got
                        splitted in two or more, renamed

                        to be more understandable for end user)
                      type: string
                      example: Black
                      nullable: false
                      readOnly: true
                    isDefault:
                      description: >
                        Is option default. Used as hint when this option is most
                        commonly used. It may be useful

                        if you implementing own UI for SellerCenter and this
                        option should be displayed as

                        selected by defaul when your user sees the screen of
                        product set creation.
                      type: boolean
                      example: false
                      nullable: true
                      readOnly: true
                nullable: true
                readOnly: true
              isEditionBySellerBlocked:
                description: >
                  If set to true then the value of the attribute can not be
                  changed after the product was synced with the shop.
                type: boolean
                example: true
                nullable: false
                readOnly: true
              isUsedInConsignmentFormulas:
                description: >
                  If set to true then the attribute is used in consignment
                  formulas.
                type: boolean
                example: true
                nullable: false
                readOnly: true
    CategoryAttributesCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: >
                    Attribute identifier. Please, consider the fact that there
                    could be several attributes with

                    the same name, but with different IDs. For example, there
                    can be AttributeSets "Shoes", "Dresses"

                    and "Jewelry". Shoes and Dresses has "color", but there is
                    no such attribute for "Jewelry".


                    So when you want to create product in "Shoes" or "Dresses"
                    you can (and if "color" is mandatory -

                    should) pass value of "color". But this attribute "color"
                    will have different IDs, probably

                    different set of options, maybe different validation rules
                    and so on.
                  type: integer
                  example: 7865
                  readOnly: true
                  nullable: true
                label:
                  description: >
                    Attribute label, in general same as name, but can contain
                    spaces and non-latin and/or non numeric

                    characters. Subject to change. For example, there is
                    attribute with label "Colour" but then new

                    attribute "Second color" was added to make end users be able
                    to shop for perfect colour combination.

                    After that attribute with label "Colour" may change its
                    label to "Main Colour". You can use this

                    property if you are building your own UI for SellerCenter
                    operations as label for attribute.
                  type: string
                  example: Sample attribute label
                  nullable: true
                  readOnly: true
                name:
                  description: >-
                    Attribute name for internal usage. You can ignore this
                    property.
                  type: string
                  example: Attribute name
                  nullable: false
                  readOnly: true
                feedName:
                  description: >
                    Feed name: this is how attribute is displayed in XLSX
                    exports and expected to be in imports. When your

                    integration with SellerCenter will generate files for upload
                    to SellerCenter, then you need to use this

                    property as column name. Very rarely changed, but you need
                    to consider that is can happen.
                  type: string
                  example: Feed name
                  nullable: false
                  readOnly: true
                groupName:
                  description: >
                    Attribute's group name. If you implement own UI for
                    SellerCenter it is useful to display attributes in

                    groups, for example "Delivery", "Product Additional
                    Details". By using this field you can split

                    attributes in groups and display accordingly.
                  type: string
                  example: Content
                  nullable: true
                  readOnly: true
                isMandatory:
                  description: |
                    Attribute is mandatory.
                  type: boolean
                  example: false
                  nullable: false
                  readOnly: true
                isGlobalAttribute:
                  description: >
                    Is true when attribute does not belong to certain
                    AttributeSet and can be set for any product.
                  type: boolean
                  example: true
                  nullable: true
                  readOnly: true
                description:
                  description: >
                    Attribute description. Maybe useful to see more about
                    meaning of attribute or when you develop

                    own UI for SellerCenter operations.
                  type: string
                  example: Some description of an attribute
                  nullable: true
                  readOnly: true
                productType:
                  description: >
                    Legacy field indicating whether attribute belongs to product
                    ("simple"), product set ("config") or very-special

                    ("sellercenter"). Please, do not rely on this field as it is
                    subject to change in near future. It is left

                    for compatibility reasons for some clients of previous
                    versions of API.
                  type: string
                  example: sellercenter
                  nullable: false
                  readOnly: true
                inputType:
                  description: >
                    Type of input to display to user. See enum values for
                    possible values. This may be

                    useful if you develop your own UI for SellerCenter.
                  type: string
                  enum:
                    - checkbox
                    - datefield
                    - datetime
                    - dropdown
                    - multiselect
                    - numberfield
                    - textarea
                    - textfield
                  example: numberfield
                  nullable: false
                  readOnly: true
                attributeType:
                  description: >
                    Type of an attribute, see enum for possible values. It
                    defines how SellerCenter stores value of certain

                    attribute. For type of "value" - it is stored "as-is", for
                    "option" - ID of option stored,

                    for "multi_option" - array or option IDs.


                    This is useful when you get information about product set
                    and you want to understand whether

                    123 is plain value or ID of option.


                    There is a special attribute type called "system". Attribute
                    with those types returned for purposes

                    of making aware about logic of those attributes. For
                    example, you may see attribute "Brand" among them.

                    From this attribute you will see useful information like "is
                    it mandatory?", "what is example value of

                    it?", "what description can I show to my users while I
                    develop our own UI for SellerCenter".


                    Attributes of this type should not be sent in array of
                    "attributes" when you create or update your

                    product sets. Continuing with example of Brand attribute: to
                    pass this information you should use

                    field brandId in root of payload for creation of product
                    set.
                  type: string
                  enum:
                    - value
                    - option
                    - multi_option
                    - system
                  example: system
                  nullable: false
                  readOnly: true
                exampleValue:
                  description: Attribute's example value
                  type: string
                  nullable: true
                  readOnly: true
                maxLength:
                  description: |
                    Attribute's max length, applicable for string attributes.
                  type: integer
                  example: 23
                  nullable: true
                  readOnly: true
                isVisibleForHybrid:
                  description: >
                    This flag enables/disable if an attribute is visible or not
                    for a hybrid product
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
                attributeDefinitionType:
                  description: |
                    Is used to define the attribute type
                  type: string
                  enum:
                    - default
                    - price_status
                    - price
                    - special_price
                    - sale_start
                    - sale_end
                  example: price
                  nullable: true
                  readOnly: true
                attributeDefinitionCountry:
                  description: |
                    Is used to define the attribute's country/vendor
                  type: string
                  enum:
                    - TW
                    - SG
                    - PH
                    - ID
                    - MY
                    - HK
                  example: MY
                  nullable: true
                  readOnly: true
                inputMode:
                  description: >
                    Is used to disable, hide a field. See enum values for
                    possible values.
                  type: string
                  enum:
                    - edit
                    - display
                    - invisible
                    - edit_on_create
                  example: edit
                  nullable: true
                  readOnly: true
                forbidEmpty:
                  description: |
                    If set to true an attribute can not be 0 or NULL.
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
                options:
                  description: >
                    Attribute options. List of all option for current attribute.
                    Additional validation may apply

                    like validation "brand to attribute mappings", "attribute to
                    attribute mapping". Example:

                    you want to create new product in category "Shoes". Option
                    "45" is among options of attribute

                    "Size", but there is a mapping which says that if for
                    attribute "Age group" there is a value

                    "Kids" selected then only allowed sizes are "20", "21", ...
                    "32".
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        description: >
                          Option identifier. Please note that several attrbiutes
                          can have options with same name,

                          but with different IDs. You need to use right option
                          ID for right attribute. For example,

                          there are attributes "Colour" (ID=1) and "Soil color"
                          (ID=2). "Color" has option "Black"

                          with ID=1234 and "Soil color" has option "Black" with
                          ID=9876. Even though name of options

                          are the same, when you want to pass value for "Soil
                          color" you can send only 9876,
                        type: integer
                        example: 631
                        readOnly: true
                        nullable: false
                      name:
                        description: >
                          Option name. If you implement own UI for SellerCenter
                          you can display this to user, also

                          same value end user in the shop will see. If you are
                          generating XLS files for future

                          upload to SellerCenter then you need also to use this
                          value. Please, note that very rarely

                          this value can be changed (for example, one colour got
                          splitted in two or more, renamed

                          to be more understandable for end user)
                        type: string
                        example: Black
                        nullable: false
                        readOnly: true
                      isDefault:
                        description: >
                          Is option default. Used as hint when this option is
                          most commonly used. It may be useful

                          if you implementing own UI for SellerCenter and this
                          option should be displayed as

                          selected by defaul when your user sees the screen of
                          product set creation.
                        type: boolean
                        example: false
                        nullable: true
                        readOnly: true
                  nullable: true
                  readOnly: true
                isEditionBySellerBlocked:
                  description: >
                    If set to true then the value of the attribute can not be
                    changed after the product was synced with the shop.
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
                isUsedInConsignmentFormulas:
                  description: >
                    If set to true then the attribute is used in consignment
                    formulas.
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
    PaginatedCategoryAttributesCollection:
      description: Paginated results of attributes
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: >
                        Attribute identifier. Please, consider the fact that
                        there could be several attributes with

                        the same name, but with different IDs. For example,
                        there can be AttributeSets "Shoes", "Dresses"

                        and "Jewelry". Shoes and Dresses has "color", but there
                        is no such attribute for "Jewelry".


                        So when you want to create product in "Shoes" or
                        "Dresses" you can (and if "color" is mandatory -

                        should) pass value of "color". But this attribute
                        "color" will have different IDs, probably

                        different set of options, maybe different validation
                        rules and so on.
                      type: integer
                      example: 7865
                      readOnly: true
                      nullable: true
                    label:
                      description: >
                        Attribute label, in general same as name, but can
                        contain spaces and non-latin and/or non numeric

                        characters. Subject to change. For example, there is
                        attribute with label "Colour" but then new

                        attribute "Second color" was added to make end users be
                        able to shop for perfect colour combination.

                        After that attribute with label "Colour" may change its
                        label to "Main Colour". You can use this

                        property if you are building your own UI for
                        SellerCenter operations as label for attribute.
                      type: string
                      example: Sample attribute label
                      nullable: true
                      readOnly: true
                    name:
                      description: >-
                        Attribute name for internal usage. You can ignore this
                        property.
                      type: string
                      example: Attribute name
                      nullable: false
                      readOnly: true
                    feedName:
                      description: >
                        Feed name: this is how attribute is displayed in XLSX
                        exports and expected to be in imports. When your

                        integration with SellerCenter will generate files for
                        upload to SellerCenter, then you need to use this

                        property as column name. Very rarely changed, but you
                        need to consider that is can happen.
                      type: string
                      example: Feed name
                      nullable: false
                      readOnly: true
                    groupName:
                      description: >
                        Attribute's group name. If you implement own UI for
                        SellerCenter it is useful to display attributes in

                        groups, for example "Delivery", "Product Additional
                        Details". By using this field you can split

                        attributes in groups and display accordingly.
                      type: string
                      example: Content
                      nullable: true
                      readOnly: true
                    isMandatory:
                      description: |
                        Attribute is mandatory.
                      type: boolean
                      example: false
                      nullable: false
                      readOnly: true
                    isGlobalAttribute:
                      description: >
                        Is true when attribute does not belong to certain
                        AttributeSet and can be set for any product.
                      type: boolean
                      example: true
                      nullable: true
                      readOnly: true
                    description:
                      description: >
                        Attribute description. Maybe useful to see more about
                        meaning of attribute or when you develop

                        own UI for SellerCenter operations.
                      type: string
                      example: Some description of an attribute
                      nullable: true
                      readOnly: true
                    productType:
                      description: >
                        Legacy field indicating whether attribute belongs to
                        product ("simple"), product set ("config") or
                        very-special

                        ("sellercenter"). Please, do not rely on this field as
                        it is subject to change in near future. It is left

                        for compatibility reasons for some clients of previous
                        versions of API.
                      type: string
                      example: sellercenter
                      nullable: false
                      readOnly: true
                    inputType:
                      description: >
                        Type of input to display to user. See enum values for
                        possible values. This may be

                        useful if you develop your own UI for SellerCenter.
                      type: string
                      enum:
                        - checkbox
                        - datefield
                        - datetime
                        - dropdown
                        - multiselect
                        - numberfield
                        - textarea
                        - textfield
                      example: numberfield
                      nullable: false
                      readOnly: true
                    attributeType:
                      description: >
                        Type of an attribute, see enum for possible values. It
                        defines how SellerCenter stores value of certain

                        attribute. For type of "value" - it is stored "as-is",
                        for "option" - ID of option stored,

                        for "multi_option" - array or option IDs.


                        This is useful when you get information about product
                        set and you want to understand whether

                        123 is plain value or ID of option.


                        There is a special attribute type called "system".
                        Attribute with those types returned for purposes

                        of making aware about logic of those attributes. For
                        example, you may see attribute "Brand" among them.

                        From this attribute you will see useful information like
                        "is it mandatory?", "what is example value of

                        it?", "what description can I show to my users while I
                        develop our own UI for SellerCenter".


                        Attributes of this type should not be sent in array of
                        "attributes" when you create or update your

                        product sets. Continuing with example of Brand
                        attribute: to pass this information you should use

                        field brandId in root of payload for creation of product
                        set.
                      type: string
                      enum:
                        - value
                        - option
                        - multi_option
                        - system
                      example: system
                      nullable: false
                      readOnly: true
                    exampleValue:
                      description: Attribute's example value
                      type: string
                      nullable: true
                      readOnly: true
                    maxLength:
                      description: >
                        Attribute's max length, applicable for string
                        attributes.
                      type: integer
                      example: 23
                      nullable: true
                      readOnly: true
                    isVisibleForHybrid:
                      description: >
                        This flag enables/disable if an attribute is visible or
                        not for a hybrid product
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    attributeDefinitionType:
                      description: |
                        Is used to define the attribute type
                      type: string
                      enum:
                        - default
                        - price_status
                        - price
                        - special_price
                        - sale_start
                        - sale_end
                      example: price
                      nullable: true
                      readOnly: true
                    attributeDefinitionCountry:
                      description: |
                        Is used to define the attribute's country/vendor
                      type: string
                      enum:
                        - TW
                        - SG
                        - PH
                        - ID
                        - MY
                        - HK
                      example: MY
                      nullable: true
                      readOnly: true
                    inputMode:
                      description: >
                        Is used to disable, hide a field. See enum values for
                        possible values.
                      type: string
                      enum:
                        - edit
                        - display
                        - invisible
                        - edit_on_create
                      example: edit
                      nullable: true
                      readOnly: true
                    forbidEmpty:
                      description: |
                        If set to true an attribute can not be 0 or NULL.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    options:
                      description: >
                        Attribute options. List of all option for current
                        attribute. Additional validation may apply

                        like validation "brand to attribute mappings",
                        "attribute to attribute mapping". Example:

                        you want to create new product in category "Shoes".
                        Option "45" is among options of attribute

                        "Size", but there is a mapping which says that if for
                        attribute "Age group" there is a value

                        "Kids" selected then only allowed sizes are "20", "21",
                        ... "32".
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            description: >
                              Option identifier. Please note that several
                              attrbiutes can have options with same name,

                              but with different IDs. You need to use right
                              option ID for right attribute. For example,

                              there are attributes "Colour" (ID=1) and "Soil
                              color" (ID=2). "Color" has option "Black"

                              with ID=1234 and "Soil color" has option "Black"
                              with ID=9876. Even though name of options

                              are the same, when you want to pass value for
                              "Soil color" you can send only 9876,
                            type: integer
                            example: 631
                            readOnly: true
                            nullable: false
                          name:
                            description: >
                              Option name. If you implement own UI for
                              SellerCenter you can display this to user, also

                              same value end user in the shop will see. If you
                              are generating XLS files for future

                              upload to SellerCenter then you need also to use
                              this value. Please, note that very rarely

                              this value can be changed (for example, one colour
                              got splitted in two or more, renamed

                              to be more understandable for end user)
                            type: string
                            example: Black
                            nullable: false
                            readOnly: true
                          isDefault:
                            description: >
                              Is option default. Used as hint when this option
                              is most commonly used. It may be useful

                              if you implementing own UI for SellerCenter and
                              this option should be displayed as

                              selected by defaul when your user sees the screen
                              of product set creation.
                            type: boolean
                            example: false
                            nullable: true
                            readOnly: true
                      nullable: true
                      readOnly: true
                    isEditionBySellerBlocked:
                      description: >
                        If set to true then the value of the attribute can not
                        be changed after the product was synced with the shop.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
                    isUsedInConsignmentFormulas:
                      description: >
                        If set to true then the attribute is used in consignment
                        formulas.
                      type: boolean
                      example: true
                      nullable: false
                      readOnly: true
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    AttributeSet:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                description: Numeric unique identifier
                type: number
                example: 5642
              name:
                type: string
                example: beauty
              label:
                type: string
                example: Beauty
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
    AttributeSets:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: Numeric unique identifier
                  type: number
                  example: 5642
                name:
                  type: string
                  example: beauty
                label:
                  type: string
                  example: Beauty
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
    AttributeSetsCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: >
                    Attribute identifier. Please, consider the fact that there
                    could be several attributes with

                    the same name, but with different IDs. For example, there
                    can be AttributeSets "Shoes", "Dresses"

                    and "Jewelry". Shoes and Dresses has "color", but there is
                    no such attribute for "Jewelry".


                    So when you want to create product in "Shoes" or "Dresses"
                    you can (and if "color" is mandatory -

                    should) pass value of "color". But this attribute "color"
                    will have different IDs, probably

                    different set of options, maybe different validation rules
                    and so on.
                  type: integer
                  example: 7865
                  readOnly: true
                  nullable: true
                label:
                  description: >
                    Attribute label, in general same as name, but can contain
                    spaces and non-latin and/or non numeric

                    characters. Subject to change. For example, there is
                    attribute with label "Colour" but then new

                    attribute "Second color" was added to make end users be able
                    to shop for perfect colour combination.

                    After that attribute with label "Colour" may change its
                    label to "Main Colour". You can use this

                    property if you are building your own UI for SellerCenter
                    operations as label for attribute.
                  type: string
                  example: Sample attribute label
                  nullable: true
                  readOnly: true
                name:
                  description: >-
                    Attribute name for internal usage. You can ignore this
                    property.
                  type: string
                  example: Attribute name
                  nullable: false
                  readOnly: true
                feedName:
                  description: >
                    Feed name: this is how attribute is displayed in XLSX
                    exports and expected to be in imports. When your

                    integration with SellerCenter will generate files for upload
                    to SellerCenter, then you need to use this

                    property as column name. Very rarely changed, but you need
                    to consider that is can happen.
                  type: string
                  example: Feed name
                  nullable: false
                  readOnly: true
                groupName:
                  description: >
                    Attribute's group name. If you implement own UI for
                    SellerCenter it is useful to display attributes in

                    groups, for example "Delivery", "Product Additional
                    Details". By using this field you can split

                    attributes in groups and display accordingly.
                  type: string
                  example: Content
                  nullable: true
                  readOnly: true
                isMandatory:
                  description: |
                    Attribute is mandatory.
                  type: boolean
                  example: false
                  nullable: false
                  readOnly: true
                isGlobalAttribute:
                  description: >
                    Is true when attribute does not belong to certain
                    AttributeSet and can be set for any product.
                  type: boolean
                  example: true
                  nullable: true
                  readOnly: true
                description:
                  description: >
                    Attribute description. Maybe useful to see more about
                    meaning of attribute or when you develop

                    own UI for SellerCenter operations.
                  type: string
                  example: Some description of an attribute
                  nullable: true
                  readOnly: true
                productType:
                  description: >
                    Legacy field indicating whether attribute belongs to product
                    ("simple"), product set ("config") or very-special

                    ("sellercenter"). Please, do not rely on this field as it is
                    subject to change in near future. It is left

                    for compatibility reasons for some clients of previous
                    versions of API.
                  type: string
                  example: sellercenter
                  nullable: false
                  readOnly: true
                inputType:
                  description: >
                    Type of input to display to user. See enum values for
                    possible values. This may be

                    useful if you develop your own UI for SellerCenter.
                  type: string
                  enum:
                    - checkbox
                    - datefield
                    - datetime
                    - dropdown
                    - multiselect
                    - numberfield
                    - textarea
                    - textfield
                  example: numberfield
                  nullable: false
                  readOnly: true
                attributeType:
                  description: >
                    Type of an attribute, see enum for possible values. It
                    defines how SellerCenter stores value of certain

                    attribute. For type of "value" - it is stored "as-is", for
                    "option" - ID of option stored,

                    for "multi_option" - array or option IDs.


                    This is useful when you get information about product set
                    and you want to understand whether

                    123 is plain value or ID of option.


                    There is a special attribute type called "system". Attribute
                    with those types returned for purposes

                    of making aware about logic of those attributes. For
                    example, you may see attribute "Brand" among them.

                    From this attribute you will see useful information like "is
                    it mandatory?", "what is example value of

                    it?", "what description can I show to my users while I
                    develop our own UI for SellerCenter".


                    Attributes of this type should not be sent in array of
                    "attributes" when you create or update your

                    product sets. Continuing with example of Brand attribute: to
                    pass this information you should use

                    field brandId in root of payload for creation of product
                    set.
                  type: string
                  enum:
                    - value
                    - option
                    - multi_option
                    - system
                  example: system
                  nullable: false
                  readOnly: true
                exampleValue:
                  description: Attribute's example value
                  type: string
                  nullable: true
                  readOnly: true
                maxLength:
                  description: |
                    Attribute's max length, applicable for string attributes.
                  type: integer
                  example: 23
                  nullable: true
                  readOnly: true
                isVisibleForHybrid:
                  description: >
                    This flag enables/disable if an attribute is visible or not
                    for a hybrid product
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
                attributeDefinitionType:
                  description: |
                    Is used to define the attribute type
                  type: string
                  enum:
                    - default
                    - price_status
                    - price
                    - special_price
                    - sale_start
                    - sale_end
                  example: price
                  nullable: true
                  readOnly: true
                attributeDefinitionCountry:
                  description: |
                    Is used to define the attribute's country/vendor
                  type: string
                  enum:
                    - TW
                    - SG
                    - PH
                    - ID
                    - MY
                    - HK
                  example: MY
                  nullable: true
                  readOnly: true
                inputMode:
                  description: >
                    Is used to disable, hide a field. See enum values for
                    possible values.
                  type: string
                  enum:
                    - edit
                    - display
                    - invisible
                    - edit_on_create
                  example: edit
                  nullable: true
                  readOnly: true
                forbidEmpty:
                  description: |
                    If set to true an attribute can not be 0 or NULL.
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
                options:
                  description: >
                    Attribute options. List of all option for current attribute.
                    Additional validation may apply

                    like validation "brand to attribute mappings", "attribute to
                    attribute mapping". Example:

                    you want to create new product in category "Shoes". Option
                    "45" is among options of attribute

                    "Size", but there is a mapping which says that if for
                    attribute "Age group" there is a value

                    "Kids" selected then only allowed sizes are "20", "21", ...
                    "32".
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        description: >
                          Option identifier. Please note that several attrbiutes
                          can have options with same name,

                          but with different IDs. You need to use right option
                          ID for right attribute. For example,

                          there are attributes "Colour" (ID=1) and "Soil color"
                          (ID=2). "Color" has option "Black"

                          with ID=1234 and "Soil color" has option "Black" with
                          ID=9876. Even though name of options

                          are the same, when you want to pass value for "Soil
                          color" you can send only 9876,
                        type: integer
                        example: 631
                        readOnly: true
                        nullable: false
                      name:
                        description: >
                          Option name. If you implement own UI for SellerCenter
                          you can display this to user, also

                          same value end user in the shop will see. If you are
                          generating XLS files for future

                          upload to SellerCenter then you need also to use this
                          value. Please, note that very rarely

                          this value can be changed (for example, one colour got
                          splitted in two or more, renamed

                          to be more understandable for end user)
                        type: string
                        example: Black
                        nullable: false
                        readOnly: true
                      isDefault:
                        description: >
                          Is option default. Used as hint when this option is
                          most commonly used. It may be useful

                          if you implementing own UI for SellerCenter and this
                          option should be displayed as

                          selected by defaul when your user sees the screen of
                          product set creation.
                        type: boolean
                        example: false
                        nullable: true
                        readOnly: true
                  nullable: true
                  readOnly: true
                isEditionBySellerBlocked:
                  description: >
                    If set to true then the value of the attribute can not be
                    changed after the product was synced with the shop.
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
                isUsedInConsignmentFormulas:
                  description: >
                    If set to true then the attribute is used in consignment
                    formulas.
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
    CategoryMappings:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                categoryId:
                  type: integer
                  example: 32
                categoryName:
                  type: string
                  example: Health
                attributes:
                  type: array
                  items:
                    type: object
                    properties:
                      attributeId:
                        type: integer
                        example: 80
                      options:
                        type: array
                        items:
                          type: integer
                          example: 99
    CategorySettings:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 32
                shopId:
                  type: string
                  example: 139593
                  description: Src ID of the category
                name:
                  type: string
                  example: Electronics
                restrictions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                        example: price
                        enum:
                          - price
                          - image
                      name:
                        type: string
                        example: min_price
                        enum:
                          - image_allowed_background_color
                          - image_max_background_percentage
                          - image_max_blurriness_score
                          - max_discount_percentage
                          - max_price
                          - max_sale_price
                          - min_discount_percentage
                          - min_price
                          - min_sale_price
                      description:
                        type: string
                        example: Min Price
                      country:
                        type: string
                        example: DE
                        nullable: true
                      validationType:
                        type: string
                        example: scalar
                      value:
                        type: string
                        example: '10'
    CategoryById:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  description: Category identifier
                  type: integer
                  example: 7865
                  readOnly: true
                srcId:
                  type: string
                  nullable: true
                  description: >-
                    ID of category in Shop system. If null means that category
                    was not yet synchronized with Shop and is not visible to end
                    customers.
                  example: '39487664'
                uuid:
                  description: Category UUID identifier
                  example: 060cef12-08ef-4ae6-b15e-79398fedc774
                  type: string
                  readOnly: true
                parentId:
                  description: Category parent identifier
                  type: integer
                  example: 1285
                  nullable: true
                  readOnly: true
                name:
                  description: Category name
                  type: string
                  example: Sample category name
                  readOnly: true
                visible:
                  description: If the category is visible or not
                  type: boolean
                  example: true
                  nullable: false
                  readOnly: true
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                    - inherited_inactive
                    - deleted
                path:
                  description: Category path
                  type: array
                  example:
                    - Back To School
                    - For Kids
                    - Books
                  items:
                    type: string
    Categories:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: Category identifier
                      type: integer
                      example: 7865
                      readOnly: true
                      nullable: true
                    parentId:
                      description: Category parent identifier
                      type: integer
                      example: 1285
                      nullable: true
                      readOnly: true
                    name:
                      description: Category name
                      type: string
                      example: Sample category name
                      nullable: true
                      readOnly: true
                    attributeSetId:
                      description: Attribute set identifier
                      type: integer
                      example: 8757345
                      nullable: false
                      readOnly: true
                    pathIds:
                      description: Category path identifier list
                      type: array
                      example:
                        - 3461
                        - 6783
                      items:
                        type: integer
                    path:
                      description: Category path
                      type: array
                      example:
                        - Back To School
                        - For Kids
                        - Books
                      items:
                        type: string
                    childrenIds:
                      description: Category children id list
                      type: array
                      example:
                        - 7834
                        - 7835
                      items:
                        type: integer
                    visible:
                      description: Whether or not the category is visible
                      type: boolean
                      example: true
                      nullable: false
                    fulfillmentVisible:
                      description: Whether or not the category is visible in consignment
                      type: boolean
                      example: true
                      nullable: false
                    qcDisabled:
                      description: >-
                        Whether or not the category is disabled in
                        quality-control
                      type: boolean
                      example: false
                      nullable: false
                    serialNumberRequired:
                      description: Whether or not the category requires a serial number
                      type: boolean
                      example: false
                      nullable: false
                    status:
                      description: Category status
                      type: string
                      enum:
                        - active
                        - inactive
                        - inherited_inactive
                        - deleted
                    uuid:
                      description: Category UUID identifier
                      example: 060cef12-08ef-4ae6-b15e-79398fedc774
                      type: string
                      readOnly: true
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    MappedAttributesCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: Mapped Attribute Options
              type: object
              properties:
                parent:
                  description: parent
                  type: object
                  properties:
                    attributeId:
                      description: attributeId
                      example: 70
                      type: integer
                    optionId:
                      description: optionId
                      example: 200
                      type: integer
                  required:
                    - attributeId
                    - optionId
                child:
                  description: child
                  type: object
                  properties:
                    attributeId:
                      description: attributeId
                      example: 75
                      type: integer
                    optionId:
                      description: optionId
                      example: 208
                      type: integer
                  required:
                    - attributeId
                    - optionId
    ExportJob:
      description: Export job was successfully queued
      content:
        application/json:
          schema:
            type: object
            properties:
              exportItemId:
                description: ID of created export job
                type: integer
                example: 852
              uuid:
                description: UUID of created export job
                type: string
                example: 78838546-777e-47c8-ba09-43d49bb9efa5
    TagsCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: Tag
              type: object
              properties:
                id:
                  description: numeric ID of Tag
                  example: 68
                  type: integer
                name:
                  description: optionId
                  example: bestSellingProduct
                  type: string
              required:
                - id
                - name
    TagsSellerCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  description: Seller tag
                  type: object
                  properties:
                    sellerId:
                      description: Numeric ID of a Seller
                      example: 42
                      type: integer
                    tags:
                      description: Tag names
                      example:
                        - test1
                        - test2
                      type: array
                      items:
                        type: string
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    RejectedProductSetsCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: Rejected ProductSet
              type: object
              properties:
                productSetId:
                  description: numeric ID of ProductSet
                  example: 68
                  type: integer
                rejectedReasons:
                  description: list of human-readable reasons why ProductSet was rejected
                  example:
                    - Images missing
                    - Wrong category
                  type: array
                  items:
                    type: string
                qcComment:
                  description: >-
                    It is possible, but not mandatory for the QC person to add a
                    comment on the rejection.
                  type: string
                  example: Some field was wrong
              required:
                - productSetId
                - rejectedReasons
    QualityControlStatus:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productSetId:
                  type: integer
                status:
                  type: string
                  enum:
                    - approved
                    - rejected
                    - pending
                createdAt:
                  type: string
                  format: date-time
                  nullable: false
              example:
                productSetId: 3872
                status: pending
                createdAt: '2023-04-12 13:34:12'
    OauthAppItem:
      description: Oauth App Item
      content:
        application/json:
          schema:
            type: object
            properties:
              uuid:
                type: string
                description: The application uuid.
                example: 123e4567-e89b-12d3-a456-426614174000
              appId:
                type: string
                description: The application id.
                example: 123456f4cbbd00832115bcbe97
              name:
                type: string
                description: The application name.
                example: Application 01
              secret:
                type: string
                description: The application secret.
                example: e1f65b6f0ce28abbcef0752ddfb3ff0630e422ed
              website:
                type: string
                description: The application website.
                example: https://www.example.com
              redirectUri:
                type: string
                description: The application redirect uri.
                example: https://www.example.com/oauth/callback
    OauthAppCreated:
      description: Oauth App created
      content:
        application/json:
          schema:
            type: object
            properties:
              uuid:
                type: string
                description: The application uuid.
                example: 123e4567-e89b-12d3-a456-426614174000
              appId:
                type: string
                description: The application id.
                example: 123456f4cbbd00832115bcbe97
              secret:
                type: string
                description: The application secret.
                example: e1f65b6f0ce28abbcef0752ddfb3ff0630e422ed
    OauthAppUpdated:
      description: Oauth App updated
      content:
        application/json:
          schema:
            type: object
            properties:
              uuid:
                type: string
                description: The application uuid.
                example: 123e4567-e89b-12d3-a456-426614174000
              appId:
                type: string
                description: The application id.
                example: 123456f4cbbd00832115bcbe97
              name:
                type: string
                description: The application name.
                example: Application 01
              website:
                type: string
                description: The application website.
                example: https://www.example.com
              redirectUri:
                type: string
                description: The application redirect uri.
                example: https://www.example.com/oauth/callback
    Order:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              uuid:
                type: string
                description: Unique order identifier
                example: 9d6ca7ce-4b71-46bf-aa5e-a0727eca880z
              invoiceRequired:
                type: boolean
                description: This flag means that invoice is required for the Order
                example: false
              id:
                type: integer
                description: Unique numeric order identifier
                example: 1111
              regionId:
                type: string
                description: Regions order identifier
                example: 2222-2
              sellerId:
                type: integer
                description: Seller identifier
                example: 222
              number:
                type: string
                description: Order number given by the seller
                example: MY-111143
              customer:
                type: object
                description: Customer name
                properties:
                  firstName:
                    type: string
                    description: First name
                    example: John
                    nullable: true
                  lastName:
                    type: string
                    description: Last name
                    example: Doe
                    nullable: true
              address:
                type: object
                description: Order address
                properties:
                  billing:
                    type: object
                    nullable: true
                    description: >-
                      Info about customer address with restricted access to
                      certain fields
                    properties:
                      firstName:
                        type: string
                        description: Customer first name
                        example: John
                        nullable: true
                      lastName:
                        type: string
                        description: Customer last name
                        example: Doe
                        nullable: true
                      phone:
                        type: array
                        items:
                          type: string
                        example:
                          - '#####'
                      address:
                        type: array
                        items:
                          type: string
                        description: 5 rows to show the address
                        example:
                          - Johannisstr. 20
                          - ''
                          - ''
                          - ''
                          - ''
                      email:
                        type: string
                        description: Customer email
                        example: '#####'
                      city:
                        type: string
                        description: Customer city
                        example: Berlin
                      ward:
                        type: string
                        example: ''
                      region:
                        type: string
                        description: Customer region
                        example: ''
                      postCode:
                        type: string
                        description: Customer post code
                        example: '10117'
                      country:
                        type: string
                        description: Customer country
                        example: Germany
                  shipping:
                    type: object
                    nullable: true
                    description: >-
                      Info about customer address with restricted access to
                      certain fields
                    properties:
                      firstName:
                        type: string
                        description: Customer first name
                        example: John
                        nullable: true
                      lastName:
                        type: string
                        description: Customer last name
                        example: Doe
                        nullable: true
                      phone:
                        type: array
                        items:
                          type: string
                        example:
                          - '#####'
                      address:
                        type: array
                        items:
                          type: string
                        description: 5 rows to show the address
                        example:
                          - Johannisstr. 20
                          - ''
                          - ''
                          - ''
                          - ''
                      email:
                        type: string
                        description: Customer email
                        example: '#####'
                      city:
                        type: string
                        description: Customer city
                        example: Berlin
                      ward:
                        type: string
                        example: ''
                      region:
                        type: string
                        description: Customer region
                        example: ''
                      postCode:
                        type: string
                        description: Customer post code
                        example: '10117'
                      country:
                        type: string
                        description: Customer country
                        example: Germany
                required:
                  - billing
                  - shipping
              nationalRegistrationNumber:
                type: string
                nullable: true
                description: It is the registration number of the customer
                example: '11114389'
              payoutPending:
                type: boolean
                description: >-
                  Flag that specifies whether the order will generate
                  transactions or put them on hold until other requirements are
                  met
                example: false
              gift:
                type: object
                properties:
                  option:
                    type: boolean
                    description: Gift option
                    example: false
                  message:
                    description: Gift message
                    example: msg
                required:
                  - option
                  - message
              voucher:
                type: object
                properties:
                  code:
                    type: string
                    description: Voucher code
                    example: code
                  type:
                    type: string
                    description: Voucher type
                    example: type
                required:
                  - code
                  - type
              deliveryInfo:
                type: string
                description: Additional info about delivery
                example: 1 D
              paymentMethod:
                type: string
                description: Order payment method
                example: NpsPayment
              currency:
                type: string
                description: Currency
                example: ARS
              remarks:
                type: string
                description: Additional info about order
                example: ''
              createdAt:
                type: string
                format: datetime
                description: Date and time when the order was created
                example: '2021-09-22T23:21:42.123456Z'
              updatedAt:
                type: string
                format: datetime
                description: >-
                  Date and time when the order was updated. The dates returned
                  will follow the same format as in the example
                example: '2021-09-22T23:21:42.123456Z'
              addressUpdatedAt:
                type: string
                format: datetime
                description: >-
                  Date and time when address was updated last time. The dates
                  returned will follow the same format as in the example
                example: '2021-09-22T23:21:42.123456Z'
              exchangeByOrderId:
                type: string
                description: >-
                  It indicates that current order is exchange order for other
                  order. This field contains a new order ID
                nullable: true
                example: null
              exchangeForOrderId:
                type: string
                description: >-
                  It indicates that current order is exchange order for other
                  order. This field contains an old order ID
                nullable: true
                example: null
              extraAttributes:
                type: string
                description: Additional attributes set by the seller.
                example: null
              statusList:
                type: object
                description: >-
                  Status list from order items as keys with count of items with
                  particular status as a value
                example:
                  pending: 2
                  canceled: 1
              source:
                type: string
                description: Order source
                nullable: true
                example: Zalora MY
              itemCount:
                type: integer
                description: Amount of items in order
                example: 1
              unitPriceSumWithFees:
                type: number
                format: float
                description: Sum of unit prices from items with fees
                example: 10200.5
              shippingFeeSstSum:
                type: number
                format: float
                description: Sum of shipping fee SST tax
                example: 10.5
              grandTotal:
                type: number
                format: float
                description: Sum of paid prices from items with fees
                example: 100.5
              targetToShip:
                type: string
                description: >-
                  Promised shipment date. It works only if Promised Shipping
                  Date Feature is Enabled. The dates returned will follow the
                  same format as in the example
                nullable: true
                example: '2022-12-23T05:36:23.123456Z'
              shipmentProviderType:
                type: string
                description: Calculated shipment provider type across all order items
                nullable: true
                enum:
                  - express
                  - standard
                  - economy
                  - digital
                  - air
                  - surface
                  - mixed
                  - sameday
                example: standard
              shipmentProviderPreSelected:
                type: boolean
                description: Information if the shipment provider has been pre-selected
                example: true
              packedItemsCount:
                type: integer
                description: Amount of packed order items
                example: 3
              orderItemIds:
                type: array
                items:
                  type: integer
                description: Ids of the order items in the order
                example:
                  - 1111
              items:
                type: array
                description: Order items
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique numeric identifier
                      example: 1111
                    srcId:
                      type: string
                      description: Order item src ID
                      example: MY-32022990
                    sellerId:
                      type: integer
                      description: Seller ID
                      example: 11112
                    orderId:
                      type: integer
                      description: Order ID
                      example: 111134
                    uuid:
                      type: string
                      description: Unique string ID
                      example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
                    status:
                      type: string
                      description: |
                        Order Item status.
                      example: pending
                      enum:
                        - pending
                        - shipped
                        - canceled
                        - returned
                        - failed
                        - delivered
                        - ready_to_ship
                        - return_shipped_by_customer
                        - return_waiting_for_approval
                        - return_rejected
                        - return_delivered
                        - payment_pending
                    isProcessable:
                      type: boolean
                      description: >-
                        It's true if order item shipment type is not
                        `consignment` and src_status is not
                        `awaiting_fulfillment`
                      example: true
                    failureReason:
                      type: object
                      properties:
                        type:
                          type: string
                          description: |
                            Failure reason type.
                          nullable: true
                          example: null
                          enum:
                            - canceled
                            - returned
                            - failed
                            - return_rejected
                            - canceled_system
                        name:
                          type: string
                          description: Reason name
                          nullable: true
                          example: null
                        description:
                          type: string
                          description: Reason description
                          nullable: true
                          example: null
                        details:
                          type: string
                          description: Reason details
                          example: ''
                      required:
                        - type
                        - name
                        - description
                        - details
                    shipment:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Shipment type.
                          example: crossdocking
                          enum:
                            - warehouse
                            - dropshipping
                            - crossdocking
                            - dropshipping_crossdocking
                            - crossdocking_dropshipping
                        crossdockingDeliveryType:
                          type: string
                          description: Crossdocking delivery type
                          nullable: true
                          example: null
                          enum:
                            - send_to_warehouse
                            - pickup
                        method:
                          type: string
                          description: >-
                            Shipment method received from the Shop. It is
                            intended to indicate where the order should be send
                            to. Possible options are "home", "pickup",
                            "address", "none"
                          example: home
                          enum:
                            - home
                            - pickup
                            - address
                            - none
                        preProvider:
                          nullable: true
                          description: Pre-defined shipment provider
                          type: object
                          properties:
                            uuid:
                              type: string
                              nullable: true
                              example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                            name:
                              type: string
                              description: Shipment provider name
                              example: DafitiCarrier
                            default:
                              type: boolean
                              description: True if it is the default shipment provider
                              example: true
                            digitalType:
                              type: string
                              description: Digital type
                              nullable: true
                              example: null
                            trackingUrl:
                              type: string
                              description: Tracking URL
                              nullable: true
                              example: https://example.com/tracking/
                          required:
                            - uuid
                            - name
                            - isDefault
                            - digitalType
                            - trackingUrl
                        provider:
                          nullable: true
                          description: Shipment provider
                          type: object
                          properties:
                            uuid:
                              type: string
                              nullable: true
                              example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                            name:
                              type: string
                              description: Shipment provider name
                              example: DafitiCarrier
                            default:
                              type: boolean
                              description: True if it is the default shipment provider
                              example: true
                            digitalType:
                              type: string
                              description: Digital type
                              nullable: true
                              example: null
                            trackingUrl:
                              type: string
                              description: Tracking URL
                              nullable: true
                              example: https://example.com/tracking/
                          required:
                            - uuid
                            - name
                            - isDefault
                            - digitalType
                            - trackingUrl
                        providerPreselected:
                          type: boolean
                          description: Is shipment provider preselected
                          example: false
                        providerProduct:
                          type: string
                          example: ''
                        providerType:
                          type: string
                          description: Shipment provider type
                          nullable: true
                          example: null
                          enum:
                            - express
                            - standard
                            - economy
                            - digital
                            - air
                            - surface
                            - sameday
                        weight:
                          type: number
                          format: float
                          description: Weight
                          example: 0.5
                        trackingCode:
                          type: string
                          description: Tracking code
                          example: '123'
                        preTrackingCode:
                          type: string
                          description: PRE tracking code
                          nullable: true
                          example: null
                      required:
                        - type
                        - crossdockingDeliveryType
                        - method
                        - preProvider
                        - provider
                        - providerPreselected
                        - providerProduct
                        - providerType
                        - weight
                        - trackingCode
                        - preTrackingCode
                    invoiceNumber:
                      type: string
                      description: Invoice Number
                      nullable: true
                      example: 123re
                    invoiceAccesskey:
                      type: string
                      description: Invoice Access Key
                      nullable: true
                      example: null
                    inTransit:
                      type: boolean
                      description: Order item is in transit
                      example: false
                    premium:
                      type: boolean
                      description: The flag indicates if the order item is premium or not
                      example: false
                    targetToShipAt:
                      type: string
                      description: >-
                        Promised shipment date. It works only if Promised
                        Shipping Date Feature is Enabled. The dates returned
                        will follow the same format as in the example
                      nullable: true
                      example: '2022-12-23T05:36:23.123456Z'
                    product:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Product name.
                          example: Short de Baño Azul Topper Slim
                        sku:
                          type: string
                          description: Product SKU
                          example: TO076AT24RKHAR-2474097
                        variation:
                          type: string
                          description: Variation value as received from the Shop
                          nullable: true
                          example: '-'
                        sellerSku:
                          type: string
                          description: Seller SKU
                          example: 164097_L
                      required:
                        - name
                        - sku
                        - variation
                        - sellerSku
                    unitPrice:
                      type: number
                      format: float
                      description: Order item price
                      example: 2499
                    taxAmount:
                      type: number
                      format: float
                      description: Tax amount for the order item
                      example: 433.71
                    taxPercent:
                      type: number
                      format: float
                      description: Tax percent for the order item
                      example: 21
                    paidPrice:
                      type: number
                      format: float
                      description: Paid price
                      example: 2499
                    paidCommission:
                      type: number
                      format: float
                      description: Paid commission
                      nullable: true
                      example: null
                    shippingFee:
                      type: number
                      format: float
                      description: Shipping fee
                      example: 0
                    shippingServiceCost:
                      type: number
                      format: float
                      description: Shipping service cost
                      nullable: true
                      example: null
                    walletCredits:
                      type: number
                      format: float
                      description: >-
                        Indicated that the customer used wallet as payment aside
                        from possible voucher
                      example: 0
                    storeCredits:
                      type: number
                      format: float
                      description: Store credits
                      example: 0
                    shippingVoucherAmount:
                      type: number
                      format: float
                      description: Shipping voucher amount
                      example: 0
                    priceAfterDiscount:
                      type: number
                      format: float
                      description: Price after discount
                      example: 0
                    salesDueAmount:
                      type: number
                      format: float
                      description: Sales due amount
                      example: 245
                    itemSerialNumber:
                      type: string
                      description: Serial number
                      nullable: true
                      example: null
                    abatementRate:
                      type: string
                      description: Abatement rate
                      nullable: true
                      example: null
                    exciseRate:
                      type: string
                      description: Excise rate
                      nullable: true
                      example: null
                    hsnCode:
                      type: string
                      description: HSN code
                      nullable: true
                      example: null
                    codCollectableAmount:
                      type: string
                      description: Cod collectable amount
                      nullable: true
                      example: null
                    purchase:
                      type: object
                      properties:
                        orderSrcId:
                          type: integer
                          description: Order src ID
                          nullable: true
                          example: 555
                        orderNumber:
                          type: string
                          description: Order number
                          nullable: true
                          example: MPDS-D1405061201
                        deliveryInfo:
                          type: string
                          description: Delivery info
                          nullable: true
                          example: null
                      required:
                        - orderSrcId
                        - orderNumber
                        - deliveryInfo
                    createdAt:
                      type: string
                      format: datetime
                      description: Date and time when the order item was created
                      example: '2021-09-22T23:21:42.123456Z'
                    updatedAt:
                      type: string
                      format: datetime
                      nullable: true
                      description: >-
                        Date and time when the order item was updated. The dates
                        returned will follow the same format as in the example
                      example: '2021-09-22T23:21:42.123456Z'
                    lastStatusChangedAt:
                      type: string
                      format: datetime
                      nullable: true
                      description: >
                        Date when the order item status was updated.

                        Not every Order Item update changes its status. This is
                        the difference between this field and updated_at. The
                        dates returned will follow the same format as in the
                        example
                      example: '2021-09-22T23:21:42.123456Z'
                    warehouseName:
                      type: string
                      description: Warehouse name
                      nullable: true
                      example: null
                    extraAttributes:
                      type: object
                      description: >-
                        Extra attributes which were passed to SellerCenter on
                        getMarketPlaceOrders call.
                      nullable: true
                      properties:
                        installment_fee:
                          type: number
                          format: float
                          description: Installment fee
                          example: 20.5
                        delivery_type:
                          type: string
                          description: Delivery type
                          example: standard
                        has_transfer_shipping_flat_fee:
                          type: boolean
                          description: >-
                            Indicates, whether the order item has transfer
                            shipping flat fee
                          example: false
                        price_excluded_tax:
                          type: number
                          format: float
                          description: Price excluded tax
                          example: 24.99
                        sales_service_tax:
                          type: number
                          format: float
                          description: Sales service tax
                          example: 433.71
                        gst_free:
                          type: string
                          description: Indicates, whether the order item is GST free
                          example: '0'
                        shipping_fee_sst:
                          type: number
                          format: float
                          description: Shipping fee SST
                          example: 10.5
                    isHybrid:
                      type: boolean
                      description: >-
                        Indicates, whether the product is a hybrid product for
                        the Hybrid Depth / Size Fill feature.
                      example: false
                    isOutlet:
                      type: boolean
                      description: Indicates, whether the order item has "outlet" flag.
                      example: false
                    actions:
                      type: array
                      description: Possible next actions for order item
                      example:
                        - status_set_to_shipped
                        - status_set_to_cancelled
                      items:
                        type: string
                        enum:
                          - create_manifest
                          - create_pickup_request
                          - generate_checklist
                          - generate_picklist
                          - generate_invoice
                          - generate_shipping_label
                          - generate_shipping_parcel
                          - generate_export_invoice
                          - generate_manifest
                          - generate_carrier_manifest
                          - generate_credit_note
                          - set_invoice_number
                          - set_invoice_access_key
                          - set_tracking_code
                          - set_shipment_provider
                          - status_set_to_delivered
                          - status_set_to_shipped
                          - status_set_to_canceled
                          - status_set_to_packed_by_marketplace
                          - status_set_to_ready_to_ship
                          - status_set_to_returned
                          - status_set_to_rejected
                          - status_set_to_return_rejected
                          - status_set_to_failed_delivery
                          - status_set_to_payment_pending
                          - status_set_to_return_delivered
                          - status_set_to_return_waiting_for_approval
                          - status_set_to_return_shipped_by_customer
                    vouchers:
                      type: array
                      description: Discount list
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            description: Discount code
                            example: AAA
                          amount:
                            type: number
                            format: float
                            description: Discount amount
                            example: 14.5
                          cashbackPercentage:
                            type: integer
                            description: Promotion defined percentage value for cashback
                            example: 0
                          voucherSellerShare:
                            type: number
                            format: float
                            description: >-
                              Promotion defined percentage value for the
                              voucher, which is covered/funded by the seller
                            example: 0
                          cashbackSellerShare:
                            type: number
                            format: float
                            description: >-
                              Promotion defined percentage value for the
                              cashback, which is covered/funded by the seller
                            example: 0
                          amountFundedBySeller:
                            type: number
                            format: float
                            description: >-
                              Actual calculated amount based on the voucher
                              seller share percentage and the discount amount
                            example: 0
                          cashbackAmountFundedBySeller:
                            type: string
                            description: >-
                              Actual calculated amount based on the cashback
                              seller share percentage and the discount amount
                            example: 0
                        required:
                          - code
                          - amount
                          - cashbackPercentage
                          - voucherSellerShare
                          - cashbackSellerShare
                          - amountFundedBySeller
                          - cashbackAmountFundedBySeller
                    manifestStatus:
                      example: forward_ready_to_ship
                      type: string
                      description: Manifest status
                      nullable: true
                      enum:
                        - forward_ready_to_ship
                        - forward_received
                        - forward_shipped
                        - return_ready_to_ship
                        - return_received
                        - return_shipped
                    isPickupRequestSent:
                      type: boolean
                      example: false
                      description: >-
                        The flag shows if Pickup Request has been sent for the
                        item
                    discountAmount:
                      type: number
                      format: float
                      description: Discount value
                      example: 0
                  required:
                    - id
                    - srcId
                    - sellerId
                    - orderId
                    - uuid
                    - status
                    - isProcessable
                    - failureReason
                    - shipment
                    - invoiceNumber
                    - invoiceAccesskey
                    - inTransit
                    - premium
                    - targetToShipAt
                    - product
                    - unitPrice
                    - taxAmount
                    - taxPercent
                    - paidPrice
                    - paidCommission
                    - shippingFee
                    - shippingServiceCost
                    - walletCredits
                    - storeCredits
                    - shippingVoucherAmount
                    - priceAfterDiscount
                    - salesDueAmount
                    - itemSerialNumber
                    - abatementRate
                    - exciseRate
                    - hsnCode
                    - codCollectableAmount
                    - purchase
                    - createdAt
                    - updatedAt
                    - lastStatusChangedAt
                    - warehouseName
                    - extraAttributes
                    - isHybrid
                    - isOutlet
                    - actions
                    - vouchers
            required:
              - uuid
              - invoiceRequired
              - id
              - sellerId
              - number
              - customer
              - address
              - nationalRegistrationNumber
              - payoutPending
              - gift
              - voucher
              - deliveryInfo
              - paymentMethod
              - currency
              - remarks
              - createdAt
              - updatedAt
              - addressUpdatedAt
              - exchangeByOrderId
              - extraAttributes
              - statusList
              - source
              - itemCount
              - unitPriceSumWithFees
              - targetToShip
              - shipmentProviderPreSelected
              - packedItemsCount
              - orderItemIds
              - items
              - shippingFeeSstSum
    OrderItemIds:
      description: OK
      content:
        application/json:
          schema:
            type: object
            required:
              - orderItemIds
            properties:
              orderItemIds:
                type: array
                items:
                  type: integer
                example:
                  - 123456
                  - 654321
    OrderItemIdsFailure:
      description: Entity can not be processed
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: object
                  properties:
                    orderItemId:
                      type: integer
                      description: |
                        Id of the order item
                      example: 1
                    detail:
                      type: string
                      description: >
                        A human readable explanation specific to this occurrence
                        of the problem that is helpful to locate the problem and
                        give advice on how to proceed. Written in English and
                        readable for engineers, usually not suited for non
                        technical stakeholders and not localized.
                      example: Order item contains not allowed shipment type
    OrderFailureReasons:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  nullable: false
                  example: 99
                type:
                  type: string
                  nullable: false
                  example: canceled
                  enum:
                    - canceled
                    - failed
                    - return_rejected
                    - returned
                    - canceled_system
                name:
                  type: string
                  nullable: false
                  example: Wrong address
                  description: >-
                    Name of the failure reason which should be used to set the
                    status to cancelled, returned or failed delivery.
                description:
                  type: string
                  nullable: false
                  example: Wrong address
                  description: >-
                    Description of the failure reason which should be used to
                    set the status to cancelled, returned or failed delivery.
                    (THIS FIELD BE SOON REMOVED)
                outOfStock:
                  type: boolean
                  nullable: false
                  example: true
    OrderShipmentProviders:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: Shipment provider numeric internal identifier
                  example: 42
                uuid:
                  type: string
                  description: Shipment provider identifier (UUID)
                  example: cf9b18be-61f5-4bde-a0ce-d0114bfdcb01
                name:
                  type: string
                  description: Name
                  example: AS-FedEx
                default:
                  type: boolean
                  description: True if it is the default shipment provider
                  example: 'true'
                apiIntegrationAvailable:
                  type: boolean
                  description: >-
                    True if api integration is available with this shipment
                    provider
                  example: 'true'
                status:
                  type: boolean
                  description: Status of the shipment provider for a seller
                  example: 'true'
                cashOnDelivery:
                  type: boolean
                  description: True if active_for_cod is true otherwise false
                  example: 'true'
                url:
                  type: string
                  description: Tracking url
                  example: https://www.sample-3pl.com/tracking
    OrderCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    uuid:
                      type: string
                      description: Unique order identifier
                      example: 9d6ca7ce-4b71-46bf-aa5e-a0727eca880z
                    invoiceRequired:
                      type: boolean
                      description: This flag means that invoice is required for the Order
                      example: false
                    id:
                      type: integer
                      description: Unique numeric order identifier
                      example: 1111
                    regionId:
                      type: string
                      description: Regions order identifier
                      example: 2222-2
                    sellerId:
                      type: integer
                      description: Seller identifier
                      example: 222
                    number:
                      type: string
                      description: Order number given by the seller
                      example: MY-111143
                    customer:
                      type: object
                      description: Customer name
                      properties:
                        firstName:
                          type: string
                          description: First name
                          example: John
                          nullable: true
                        lastName:
                          type: string
                          description: Last name
                          example: Doe
                          nullable: true
                    address:
                      type: object
                      description: Order address
                      properties:
                        billing:
                          type: object
                          nullable: true
                          description: >-
                            Info about customer address with restricted access
                            to certain fields
                          properties:
                            firstName:
                              type: string
                              description: Customer first name
                              example: John
                              nullable: true
                            lastName:
                              type: string
                              description: Customer last name
                              example: Doe
                              nullable: true
                            phone:
                              type: array
                              items:
                                type: string
                              example:
                                - '#####'
                            address:
                              type: array
                              items:
                                type: string
                              description: 5 rows to show the address
                              example:
                                - Johannisstr. 20
                                - ''
                                - ''
                                - ''
                                - ''
                            email:
                              type: string
                              description: Customer email
                              example: '#####'
                            city:
                              type: string
                              description: Customer city
                              example: Berlin
                            ward:
                              type: string
                              example: ''
                            region:
                              type: string
                              description: Customer region
                              example: ''
                            postCode:
                              type: string
                              description: Customer post code
                              example: '10117'
                            country:
                              type: string
                              description: Customer country
                              example: Germany
                        shipping:
                          type: object
                          nullable: true
                          description: >-
                            Info about customer address with restricted access
                            to certain fields
                          properties:
                            firstName:
                              type: string
                              description: Customer first name
                              example: John
                              nullable: true
                            lastName:
                              type: string
                              description: Customer last name
                              example: Doe
                              nullable: true
                            phone:
                              type: array
                              items:
                                type: string
                              example:
                                - '#####'
                            address:
                              type: array
                              items:
                                type: string
                              description: 5 rows to show the address
                              example:
                                - Johannisstr. 20
                                - ''
                                - ''
                                - ''
                                - ''
                            email:
                              type: string
                              description: Customer email
                              example: '#####'
                            city:
                              type: string
                              description: Customer city
                              example: Berlin
                            ward:
                              type: string
                              example: ''
                            region:
                              type: string
                              description: Customer region
                              example: ''
                            postCode:
                              type: string
                              description: Customer post code
                              example: '10117'
                            country:
                              type: string
                              description: Customer country
                              example: Germany
                      required:
                        - billing
                        - shipping
                    nationalRegistrationNumber:
                      type: string
                      nullable: true
                      description: It is the registration number of the customer
                      example: '11114389'
                    payoutPending:
                      type: boolean
                      description: >-
                        Flag that specifies whether the order will generate
                        transactions or put them on hold until other
                        requirements are met
                      example: false
                    gift:
                      type: object
                      properties:
                        option:
                          type: boolean
                          description: Gift option
                          example: false
                        message:
                          description: Gift message
                          example: msg
                      required:
                        - option
                        - message
                    voucher:
                      type: object
                      properties:
                        code:
                          type: string
                          description: Voucher code
                          example: code
                        type:
                          type: string
                          description: Voucher type
                          example: type
                      required:
                        - code
                        - type
                    deliveryInfo:
                      type: string
                      description: Additional info about delivery
                      example: 1 D
                    paymentMethod:
                      type: string
                      description: Order payment method
                      example: NpsPayment
                    currency:
                      type: string
                      description: Currency
                      example: ARS
                    remarks:
                      type: string
                      description: Additional info about order
                      example: ''
                    createdAt:
                      type: string
                      format: datetime
                      description: Date and time when the order was created
                      example: '2021-09-22T23:21:42.123456Z'
                    updatedAt:
                      type: string
                      format: datetime
                      description: >-
                        Date and time when the order was updated. The dates
                        returned will follow the same format as in the example
                      example: '2021-09-22T23:21:42.123456Z'
                    addressUpdatedAt:
                      type: string
                      format: datetime
                      description: >-
                        Date and time when address was updated last time. The
                        dates returned will follow the same format as in the
                        example
                      example: '2021-09-22T23:21:42.123456Z'
                    exchangeByOrderId:
                      type: string
                      description: >-
                        It indicates that current order is exchange order for
                        other order. This field contains a new order ID
                      nullable: true
                      example: null
                    exchangeForOrderId:
                      type: string
                      description: >-
                        It indicates that current order is exchange order for
                        other order. This field contains an old order ID
                      nullable: true
                      example: null
                    extraAttributes:
                      type: string
                      description: Additional attributes set by the seller.
                      example: null
                    statusList:
                      type: object
                      description: >-
                        Status list from order items as keys with count of items
                        with particular status as a value
                      example:
                        pending: 2
                        canceled: 1
                    source:
                      type: string
                      description: Order source
                      nullable: true
                      example: Zalora MY
                    itemCount:
                      type: integer
                      description: Amount of items in order
                      example: 1
                    unitPriceSumWithFees:
                      type: number
                      format: float
                      description: Sum of unit prices from items with fees
                      example: 10200.5
                    shippingFeeSstSum:
                      type: number
                      format: float
                      description: Sum of shipping fee SST tax
                      example: 10.5
                    grandTotal:
                      type: number
                      format: float
                      description: Sum of paid prices from items with fees
                      example: 100.5
                    targetToShip:
                      type: string
                      description: >-
                        Promised shipment date. It works only if Promised
                        Shipping Date Feature is Enabled. The dates returned
                        will follow the same format as in the example
                      nullable: true
                      example: '2022-12-23T05:36:23.123456Z'
                    shipmentProviderType:
                      type: string
                      description: Calculated shipment provider type across all order items
                      nullable: true
                      enum:
                        - express
                        - standard
                        - economy
                        - digital
                        - air
                        - surface
                        - mixed
                        - sameday
                      example: standard
                    shipmentProviderPreSelected:
                      type: boolean
                      description: >-
                        Information if the shipment provider has been
                        pre-selected
                      example: true
                    packedItemsCount:
                      type: integer
                      description: Amount of packed order items
                      example: 3
                    orderItemIds:
                      type: array
                      items:
                        type: integer
                      description: Ids of the order items in the order
                      example:
                        - 1111
                    items:
                      type: array
                      description: Order items
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: Unique numeric identifier
                            example: 1111
                          srcId:
                            type: string
                            description: Order item src ID
                            example: MY-32022990
                          sellerId:
                            type: integer
                            description: Seller ID
                            example: 11112
                          orderId:
                            type: integer
                            description: Order ID
                            example: 111134
                          uuid:
                            type: string
                            description: Unique string ID
                            example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
                          status:
                            type: string
                            description: |
                              Order Item status.
                            example: pending
                            enum:
                              - pending
                              - shipped
                              - canceled
                              - returned
                              - failed
                              - delivered
                              - ready_to_ship
                              - return_shipped_by_customer
                              - return_waiting_for_approval
                              - return_rejected
                              - return_delivered
                              - payment_pending
                          isProcessable:
                            type: boolean
                            description: >-
                              It's true if order item shipment type is not
                              `consignment` and src_status is not
                              `awaiting_fulfillment`
                            example: true
                          failureReason:
                            type: object
                            properties:
                              type:
                                type: string
                                description: |
                                  Failure reason type.
                                nullable: true
                                example: null
                                enum:
                                  - canceled
                                  - returned
                                  - failed
                                  - return_rejected
                                  - canceled_system
                              name:
                                type: string
                                description: Reason name
                                nullable: true
                                example: null
                              description:
                                type: string
                                description: Reason description
                                nullable: true
                                example: null
                              details:
                                type: string
                                description: Reason details
                                example: ''
                            required:
                              - type
                              - name
                              - description
                              - details
                          shipment:
                            type: object
                            properties:
                              type:
                                type: string
                                description: Shipment type.
                                example: crossdocking
                                enum:
                                  - warehouse
                                  - dropshipping
                                  - crossdocking
                                  - dropshipping_crossdocking
                                  - crossdocking_dropshipping
                              crossdockingDeliveryType:
                                type: string
                                description: Crossdocking delivery type
                                nullable: true
                                example: null
                                enum:
                                  - send_to_warehouse
                                  - pickup
                              method:
                                type: string
                                description: >-
                                  Shipment method received from the Shop. It is
                                  intended to indicate where the order should be
                                  send to. Possible options are "home",
                                  "pickup", "address", "none"
                                example: home
                                enum:
                                  - home
                                  - pickup
                                  - address
                                  - none
                              preProvider:
                                nullable: true
                                description: Pre-defined shipment provider
                                type: object
                                properties:
                                  uuid:
                                    type: string
                                    nullable: true
                                    example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                                  name:
                                    type: string
                                    description: Shipment provider name
                                    example: DafitiCarrier
                                  default:
                                    type: boolean
                                    description: >-
                                      True if it is the default shipment
                                      provider
                                    example: true
                                  digitalType:
                                    type: string
                                    description: Digital type
                                    nullable: true
                                    example: null
                                  trackingUrl:
                                    type: string
                                    description: Tracking URL
                                    nullable: true
                                    example: https://example.com/tracking/
                                required:
                                  - uuid
                                  - name
                                  - isDefault
                                  - digitalType
                                  - trackingUrl
                              provider:
                                nullable: true
                                description: Shipment provider
                                type: object
                                properties:
                                  uuid:
                                    type: string
                                    nullable: true
                                    example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                                  name:
                                    type: string
                                    description: Shipment provider name
                                    example: DafitiCarrier
                                  default:
                                    type: boolean
                                    description: >-
                                      True if it is the default shipment
                                      provider
                                    example: true
                                  digitalType:
                                    type: string
                                    description: Digital type
                                    nullable: true
                                    example: null
                                  trackingUrl:
                                    type: string
                                    description: Tracking URL
                                    nullable: true
                                    example: https://example.com/tracking/
                                required:
                                  - uuid
                                  - name
                                  - isDefault
                                  - digitalType
                                  - trackingUrl
                              providerPreselected:
                                type: boolean
                                description: Is shipment provider preselected
                                example: false
                              providerProduct:
                                type: string
                                example: ''
                              providerType:
                                type: string
                                description: Shipment provider type
                                nullable: true
                                example: null
                                enum:
                                  - express
                                  - standard
                                  - economy
                                  - digital
                                  - air
                                  - surface
                                  - sameday
                              weight:
                                type: number
                                format: float
                                description: Weight
                                example: 0.5
                              trackingCode:
                                type: string
                                description: Tracking code
                                example: '123'
                              preTrackingCode:
                                type: string
                                description: PRE tracking code
                                nullable: true
                                example: null
                            required:
                              - type
                              - crossdockingDeliveryType
                              - method
                              - preProvider
                              - provider
                              - providerPreselected
                              - providerProduct
                              - providerType
                              - weight
                              - trackingCode
                              - preTrackingCode
                          invoiceNumber:
                            type: string
                            description: Invoice Number
                            nullable: true
                            example: 123re
                          invoiceAccesskey:
                            type: string
                            description: Invoice Access Key
                            nullable: true
                            example: null
                          inTransit:
                            type: boolean
                            description: Order item is in transit
                            example: false
                          premium:
                            type: boolean
                            description: >-
                              The flag indicates if the order item is premium or
                              not
                            example: false
                          targetToShipAt:
                            type: string
                            description: >-
                              Promised shipment date. It works only if Promised
                              Shipping Date Feature is Enabled. The dates
                              returned will follow the same format as in the
                              example
                            nullable: true
                            example: '2022-12-23T05:36:23.123456Z'
                          product:
                            type: object
                            properties:
                              name:
                                type: string
                                description: Product name.
                                example: Short de Baño Azul Topper Slim
                              sku:
                                type: string
                                description: Product SKU
                                example: TO076AT24RKHAR-2474097
                              variation:
                                type: string
                                description: Variation value as received from the Shop
                                nullable: true
                                example: '-'
                              sellerSku:
                                type: string
                                description: Seller SKU
                                example: 164097_L
                            required:
                              - name
                              - sku
                              - variation
                              - sellerSku
                          unitPrice:
                            type: number
                            format: float
                            description: Order item price
                            example: 2499
                          taxAmount:
                            type: number
                            format: float
                            description: Tax amount for the order item
                            example: 433.71
                          taxPercent:
                            type: number
                            format: float
                            description: Tax percent for the order item
                            example: 21
                          paidPrice:
                            type: number
                            format: float
                            description: Paid price
                            example: 2499
                          paidCommission:
                            type: number
                            format: float
                            description: Paid commission
                            nullable: true
                            example: null
                          shippingFee:
                            type: number
                            format: float
                            description: Shipping fee
                            example: 0
                          shippingServiceCost:
                            type: number
                            format: float
                            description: Shipping service cost
                            nullable: true
                            example: null
                          walletCredits:
                            type: number
                            format: float
                            description: >-
                              Indicated that the customer used wallet as payment
                              aside from possible voucher
                            example: 0
                          storeCredits:
                            type: number
                            format: float
                            description: Store credits
                            example: 0
                          shippingVoucherAmount:
                            type: number
                            format: float
                            description: Shipping voucher amount
                            example: 0
                          priceAfterDiscount:
                            type: number
                            format: float
                            description: Price after discount
                            example: 0
                          salesDueAmount:
                            type: number
                            format: float
                            description: Sales due amount
                            example: 245
                          itemSerialNumber:
                            type: string
                            description: Serial number
                            nullable: true
                            example: null
                          abatementRate:
                            type: string
                            description: Abatement rate
                            nullable: true
                            example: null
                          exciseRate:
                            type: string
                            description: Excise rate
                            nullable: true
                            example: null
                          hsnCode:
                            type: string
                            description: HSN code
                            nullable: true
                            example: null
                          codCollectableAmount:
                            type: string
                            description: Cod collectable amount
                            nullable: true
                            example: null
                          purchase:
                            type: object
                            properties:
                              orderSrcId:
                                type: integer
                                description: Order src ID
                                nullable: true
                                example: 555
                              orderNumber:
                                type: string
                                description: Order number
                                nullable: true
                                example: MPDS-D1405061201
                              deliveryInfo:
                                type: string
                                description: Delivery info
                                nullable: true
                                example: null
                            required:
                              - orderSrcId
                              - orderNumber
                              - deliveryInfo
                          createdAt:
                            type: string
                            format: datetime
                            description: Date and time when the order item was created
                            example: '2021-09-22T23:21:42.123456Z'
                          updatedAt:
                            type: string
                            format: datetime
                            nullable: true
                            description: >-
                              Date and time when the order item was updated. The
                              dates returned will follow the same format as in
                              the example
                            example: '2021-09-22T23:21:42.123456Z'
                          lastStatusChangedAt:
                            type: string
                            format: datetime
                            nullable: true
                            description: >
                              Date when the order item status was updated.

                              Not every Order Item update changes its status.
                              This is the difference between this field and
                              updated_at. The dates returned will follow the
                              same format as in the example
                            example: '2021-09-22T23:21:42.123456Z'
                          warehouseName:
                            type: string
                            description: Warehouse name
                            nullable: true
                            example: null
                          extraAttributes:
                            type: object
                            description: >-
                              Extra attributes which were passed to SellerCenter
                              on getMarketPlaceOrders call.
                            nullable: true
                            properties:
                              installment_fee:
                                type: number
                                format: float
                                description: Installment fee
                                example: 20.5
                              delivery_type:
                                type: string
                                description: Delivery type
                                example: standard
                              has_transfer_shipping_flat_fee:
                                type: boolean
                                description: >-
                                  Indicates, whether the order item has transfer
                                  shipping flat fee
                                example: false
                              price_excluded_tax:
                                type: number
                                format: float
                                description: Price excluded tax
                                example: 24.99
                              sales_service_tax:
                                type: number
                                format: float
                                description: Sales service tax
                                example: 433.71
                              gst_free:
                                type: string
                                description: Indicates, whether the order item is GST free
                                example: '0'
                              shipping_fee_sst:
                                type: number
                                format: float
                                description: Shipping fee SST
                                example: 10.5
                          isHybrid:
                            type: boolean
                            description: >-
                              Indicates, whether the product is a hybrid product
                              for the Hybrid Depth / Size Fill feature.
                            example: false
                          isOutlet:
                            type: boolean
                            description: >-
                              Indicates, whether the order item has "outlet"
                              flag.
                            example: false
                          actions:
                            type: array
                            description: Possible next actions for order item
                            example:
                              - status_set_to_shipped
                              - status_set_to_cancelled
                            items:
                              type: string
                              enum:
                                - create_manifest
                                - create_pickup_request
                                - generate_checklist
                                - generate_picklist
                                - generate_invoice
                                - generate_shipping_label
                                - generate_shipping_parcel
                                - generate_export_invoice
                                - generate_manifest
                                - generate_carrier_manifest
                                - generate_credit_note
                                - set_invoice_number
                                - set_invoice_access_key
                                - set_tracking_code
                                - set_shipment_provider
                                - status_set_to_delivered
                                - status_set_to_shipped
                                - status_set_to_canceled
                                - status_set_to_packed_by_marketplace
                                - status_set_to_ready_to_ship
                                - status_set_to_returned
                                - status_set_to_rejected
                                - status_set_to_return_rejected
                                - status_set_to_failed_delivery
                                - status_set_to_payment_pending
                                - status_set_to_return_delivered
                                - status_set_to_return_waiting_for_approval
                                - status_set_to_return_shipped_by_customer
                          vouchers:
                            type: array
                            description: Discount list
                            items:
                              type: object
                              properties:
                                code:
                                  type: string
                                  description: Discount code
                                  example: AAA
                                amount:
                                  type: number
                                  format: float
                                  description: Discount amount
                                  example: 14.5
                                cashbackPercentage:
                                  type: integer
                                  description: >-
                                    Promotion defined percentage value for
                                    cashback
                                  example: 0
                                voucherSellerShare:
                                  type: number
                                  format: float
                                  description: >-
                                    Promotion defined percentage value for the
                                    voucher, which is covered/funded by the
                                    seller
                                  example: 0
                                cashbackSellerShare:
                                  type: number
                                  format: float
                                  description: >-
                                    Promotion defined percentage value for the
                                    cashback, which is covered/funded by the
                                    seller
                                  example: 0
                                amountFundedBySeller:
                                  type: number
                                  format: float
                                  description: >-
                                    Actual calculated amount based on the
                                    voucher seller share percentage and the
                                    discount amount
                                  example: 0
                                cashbackAmountFundedBySeller:
                                  type: string
                                  description: >-
                                    Actual calculated amount based on the
                                    cashback seller share percentage and the
                                    discount amount
                                  example: 0
                              required:
                                - code
                                - amount
                                - cashbackPercentage
                                - voucherSellerShare
                                - cashbackSellerShare
                                - amountFundedBySeller
                                - cashbackAmountFundedBySeller
                          manifestStatus:
                            example: forward_ready_to_ship
                            type: string
                            description: Manifest status
                            nullable: true
                            enum:
                              - forward_ready_to_ship
                              - forward_received
                              - forward_shipped
                              - return_ready_to_ship
                              - return_received
                              - return_shipped
                          isPickupRequestSent:
                            type: boolean
                            example: false
                            description: >-
                              The flag shows if Pickup Request has been sent for
                              the item
                          discountAmount:
                            type: number
                            format: float
                            description: Discount value
                            example: 0
                        required:
                          - id
                          - srcId
                          - sellerId
                          - orderId
                          - uuid
                          - status
                          - isProcessable
                          - failureReason
                          - shipment
                          - invoiceNumber
                          - invoiceAccesskey
                          - inTransit
                          - premium
                          - targetToShipAt
                          - product
                          - unitPrice
                          - taxAmount
                          - taxPercent
                          - paidPrice
                          - paidCommission
                          - shippingFee
                          - shippingServiceCost
                          - walletCredits
                          - storeCredits
                          - shippingVoucherAmount
                          - priceAfterDiscount
                          - salesDueAmount
                          - itemSerialNumber
                          - abatementRate
                          - exciseRate
                          - hsnCode
                          - codCollectableAmount
                          - purchase
                          - createdAt
                          - updatedAt
                          - lastStatusChangedAt
                          - warehouseName
                          - extraAttributes
                          - isHybrid
                          - isOutlet
                          - actions
                          - vouchers
                  required:
                    - uuid
                    - invoiceRequired
                    - id
                    - sellerId
                    - number
                    - customer
                    - address
                    - nationalRegistrationNumber
                    - payoutPending
                    - gift
                    - voucher
                    - deliveryInfo
                    - paymentMethod
                    - currency
                    - remarks
                    - createdAt
                    - updatedAt
                    - addressUpdatedAt
                    - exchangeByOrderId
                    - extraAttributes
                    - statusList
                    - source
                    - itemCount
                    - unitPriceSumWithFees
                    - targetToShip
                    - shipmentProviderPreSelected
                    - packedItemsCount
                    - orderItemIds
                    - items
                    - shippingFeeSstSum
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  hasNext:
                    type: boolean
                    description: |
                      True if next page will have at least one result
                    example: false
    OrderItemsTags:
      description: OK
      content:
        application/json:
          schema:
            type: array
            description: List of all available order item tags
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 309
                  nullable: false
                name:
                  type: string
                  nullable: false
                  example: Order for Cancellation
    OrderItemsTagsAssigned:
      description: OK
      content:
        application/json:
          schema:
            type: array
            description: List of tags assigned to specific order item id
            items:
              type: object
              properties:
                orderItemId:
                  type: integer
                  example: 420690
                  nullable: false
                tags:
                  type: array
                  nullable: false
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 42
                        nullable: false
                      name:
                        type: string
                        nullable: false
                        example: Order for Cancellation
                      dueAt:
                        type: string
                        description: Date when tag will be removed from the order item
                        format: date-time
                        nullable: true
                        example: '2023-03-28T04:00:00+00:00'
    OrderItems:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Unique numeric identifier
                      example: 1111
                    srcId:
                      type: string
                      description: Order item src ID
                      example: MY-32022990
                    sellerId:
                      type: integer
                      description: Seller ID
                      example: 11112
                    orderId:
                      type: integer
                      description: Order ID
                      example: 111134
                    uuid:
                      type: string
                      description: Unique string ID
                      example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
                    status:
                      type: string
                      description: |
                        Order Item status.
                      example: pending
                      enum:
                        - pending
                        - shipped
                        - canceled
                        - returned
                        - failed
                        - delivered
                        - ready_to_ship
                        - return_shipped_by_customer
                        - return_waiting_for_approval
                        - return_rejected
                        - return_delivered
                        - payment_pending
                    isProcessable:
                      type: boolean
                      description: >-
                        It's true if order item shipment type is not
                        `consignment` and src_status is not
                        `awaiting_fulfillment`
                      example: true
                    failureReason:
                      type: object
                      properties:
                        type:
                          type: string
                          description: |
                            Failure reason type.
                          nullable: true
                          example: null
                          enum:
                            - canceled
                            - returned
                            - failed
                            - return_rejected
                            - canceled_system
                        name:
                          type: string
                          description: Reason name
                          nullable: true
                          example: null
                        description:
                          type: string
                          description: Reason description
                          nullable: true
                          example: null
                        details:
                          type: string
                          description: Reason details
                          example: ''
                      required:
                        - type
                        - name
                        - description
                        - details
                    shipment:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Shipment type.
                          example: crossdocking
                          enum:
                            - warehouse
                            - dropshipping
                            - crossdocking
                            - dropshipping_crossdocking
                            - crossdocking_dropshipping
                        crossdockingDeliveryType:
                          type: string
                          description: Crossdocking delivery type
                          nullable: true
                          example: null
                          enum:
                            - send_to_warehouse
                            - pickup
                        method:
                          type: string
                          description: >-
                            Shipment method received from the Shop. It is
                            intended to indicate where the order should be send
                            to. Possible options are "home", "pickup",
                            "address", "none"
                          example: home
                          enum:
                            - home
                            - pickup
                            - address
                            - none
                        preProvider:
                          nullable: true
                          description: Pre-defined shipment provider
                          type: object
                          properties:
                            uuid:
                              type: string
                              nullable: true
                              example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                            name:
                              type: string
                              description: Shipment provider name
                              example: DafitiCarrier
                            default:
                              type: boolean
                              description: True if it is the default shipment provider
                              example: true
                            digitalType:
                              type: string
                              description: Digital type
                              nullable: true
                              example: null
                            trackingUrl:
                              type: string
                              description: Tracking URL
                              nullable: true
                              example: https://example.com/tracking/
                          required:
                            - uuid
                            - name
                            - isDefault
                            - digitalType
                            - trackingUrl
                        provider:
                          nullable: true
                          description: Shipment provider
                          type: object
                          properties:
                            uuid:
                              type: string
                              nullable: true
                              example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                            name:
                              type: string
                              description: Shipment provider name
                              example: DafitiCarrier
                            default:
                              type: boolean
                              description: True if it is the default shipment provider
                              example: true
                            digitalType:
                              type: string
                              description: Digital type
                              nullable: true
                              example: null
                            trackingUrl:
                              type: string
                              description: Tracking URL
                              nullable: true
                              example: https://example.com/tracking/
                          required:
                            - uuid
                            - name
                            - isDefault
                            - digitalType
                            - trackingUrl
                        providerPreselected:
                          type: boolean
                          description: Is shipment provider preselected
                          example: false
                        providerProduct:
                          type: string
                          example: ''
                        providerType:
                          type: string
                          description: Shipment provider type
                          nullable: true
                          example: null
                          enum:
                            - express
                            - standard
                            - economy
                            - digital
                            - air
                            - surface
                            - sameday
                        weight:
                          type: number
                          format: float
                          description: Weight
                          example: 0.5
                        trackingCode:
                          type: string
                          description: Tracking code
                          example: '123'
                        preTrackingCode:
                          type: string
                          description: PRE tracking code
                          nullable: true
                          example: null
                      required:
                        - type
                        - crossdockingDeliveryType
                        - method
                        - preProvider
                        - provider
                        - providerPreselected
                        - providerProduct
                        - providerType
                        - weight
                        - trackingCode
                        - preTrackingCode
                    invoiceNumber:
                      type: string
                      description: Invoice Number
                      nullable: true
                      example: 123re
                    invoiceAccesskey:
                      type: string
                      description: Invoice Access Key
                      nullable: true
                      example: null
                    inTransit:
                      type: boolean
                      description: Order item is in transit
                      example: false
                    premium:
                      type: boolean
                      description: The flag indicates if the order item is premium or not
                      example: false
                    targetToShipAt:
                      type: string
                      description: >-
                        Promised shipment date. It works only if Promised
                        Shipping Date Feature is Enabled. The dates returned
                        will follow the same format as in the example
                      nullable: true
                      example: '2022-12-23T05:36:23.123456Z'
                    product:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Product name.
                          example: Short de Baño Azul Topper Slim
                        sku:
                          type: string
                          description: Product SKU
                          example: TO076AT24RKHAR-2474097
                        variation:
                          type: string
                          description: Variation value as received from the Shop
                          nullable: true
                          example: '-'
                        sellerSku:
                          type: string
                          description: Seller SKU
                          example: 164097_L
                      required:
                        - name
                        - sku
                        - variation
                        - sellerSku
                    unitPrice:
                      type: number
                      format: float
                      description: Order item price
                      example: 2499
                    taxAmount:
                      type: number
                      format: float
                      description: Tax amount for the order item
                      example: 433.71
                    taxPercent:
                      type: number
                      format: float
                      description: Tax percent for the order item
                      example: 21
                    paidPrice:
                      type: number
                      format: float
                      description: Paid price
                      example: 2499
                    paidCommission:
                      type: number
                      format: float
                      description: Paid commission
                      nullable: true
                      example: null
                    shippingFee:
                      type: number
                      format: float
                      description: Shipping fee
                      example: 0
                    shippingServiceCost:
                      type: number
                      format: float
                      description: Shipping service cost
                      nullable: true
                      example: null
                    walletCredits:
                      type: number
                      format: float
                      description: >-
                        Indicated that the customer used wallet as payment aside
                        from possible voucher
                      example: 0
                    storeCredits:
                      type: number
                      format: float
                      description: Store credits
                      example: 0
                    shippingVoucherAmount:
                      type: number
                      format: float
                      description: Shipping voucher amount
                      example: 0
                    priceAfterDiscount:
                      type: number
                      format: float
                      description: Price after discount
                      example: 0
                    salesDueAmount:
                      type: number
                      format: float
                      description: Sales due amount
                      example: 245
                    itemSerialNumber:
                      type: string
                      description: Serial number
                      nullable: true
                      example: null
                    abatementRate:
                      type: string
                      description: Abatement rate
                      nullable: true
                      example: null
                    exciseRate:
                      type: string
                      description: Excise rate
                      nullable: true
                      example: null
                    hsnCode:
                      type: string
                      description: HSN code
                      nullable: true
                      example: null
                    codCollectableAmount:
                      type: string
                      description: Cod collectable amount
                      nullable: true
                      example: null
                    purchase:
                      type: object
                      properties:
                        orderSrcId:
                          type: integer
                          description: Order src ID
                          nullable: true
                          example: 555
                        orderNumber:
                          type: string
                          description: Order number
                          nullable: true
                          example: MPDS-D1405061201
                        deliveryInfo:
                          type: string
                          description: Delivery info
                          nullable: true
                          example: null
                      required:
                        - orderSrcId
                        - orderNumber
                        - deliveryInfo
                    createdAt:
                      type: string
                      format: datetime
                      description: Date and time when the order item was created
                      example: '2021-09-22T23:21:42.123456Z'
                    updatedAt:
                      type: string
                      format: datetime
                      nullable: true
                      description: >-
                        Date and time when the order item was updated. The dates
                        returned will follow the same format as in the example
                      example: '2021-09-22T23:21:42.123456Z'
                    lastStatusChangedAt:
                      type: string
                      format: datetime
                      nullable: true
                      description: >
                        Date when the order item status was updated.

                        Not every Order Item update changes its status. This is
                        the difference between this field and updated_at. The
                        dates returned will follow the same format as in the
                        example
                      example: '2021-09-22T23:21:42.123456Z'
                    warehouseName:
                      type: string
                      description: Warehouse name
                      nullable: true
                      example: null
                    extraAttributes:
                      type: object
                      description: >-
                        Extra attributes which were passed to SellerCenter on
                        getMarketPlaceOrders call.
                      nullable: true
                      properties:
                        installment_fee:
                          type: number
                          format: float
                          description: Installment fee
                          example: 20.5
                        delivery_type:
                          type: string
                          description: Delivery type
                          example: standard
                        has_transfer_shipping_flat_fee:
                          type: boolean
                          description: >-
                            Indicates, whether the order item has transfer
                            shipping flat fee
                          example: false
                        price_excluded_tax:
                          type: number
                          format: float
                          description: Price excluded tax
                          example: 24.99
                        sales_service_tax:
                          type: number
                          format: float
                          description: Sales service tax
                          example: 433.71
                        gst_free:
                          type: string
                          description: Indicates, whether the order item is GST free
                          example: '0'
                        shipping_fee_sst:
                          type: number
                          format: float
                          description: Shipping fee SST
                          example: 10.5
                    isHybrid:
                      type: boolean
                      description: >-
                        Indicates, whether the product is a hybrid product for
                        the Hybrid Depth / Size Fill feature.
                      example: false
                    isOutlet:
                      type: boolean
                      description: Indicates, whether the order item has "outlet" flag.
                      example: false
                    actions:
                      type: array
                      description: Possible next actions for order item
                      example:
                        - status_set_to_shipped
                        - status_set_to_cancelled
                      items:
                        type: string
                        enum:
                          - create_manifest
                          - create_pickup_request
                          - generate_checklist
                          - generate_picklist
                          - generate_invoice
                          - generate_shipping_label
                          - generate_shipping_parcel
                          - generate_export_invoice
                          - generate_manifest
                          - generate_carrier_manifest
                          - generate_credit_note
                          - set_invoice_number
                          - set_invoice_access_key
                          - set_tracking_code
                          - set_shipment_provider
                          - status_set_to_delivered
                          - status_set_to_shipped
                          - status_set_to_canceled
                          - status_set_to_packed_by_marketplace
                          - status_set_to_ready_to_ship
                          - status_set_to_returned
                          - status_set_to_rejected
                          - status_set_to_return_rejected
                          - status_set_to_failed_delivery
                          - status_set_to_payment_pending
                          - status_set_to_return_delivered
                          - status_set_to_return_waiting_for_approval
                          - status_set_to_return_shipped_by_customer
                    vouchers:
                      type: array
                      description: Discount list
                      items:
                        type: object
                        properties:
                          code:
                            type: string
                            description: Discount code
                            example: AAA
                          amount:
                            type: number
                            format: float
                            description: Discount amount
                            example: 14.5
                          cashbackPercentage:
                            type: integer
                            description: Promotion defined percentage value for cashback
                            example: 0
                          voucherSellerShare:
                            type: number
                            format: float
                            description: >-
                              Promotion defined percentage value for the
                              voucher, which is covered/funded by the seller
                            example: 0
                          cashbackSellerShare:
                            type: number
                            format: float
                            description: >-
                              Promotion defined percentage value for the
                              cashback, which is covered/funded by the seller
                            example: 0
                          amountFundedBySeller:
                            type: number
                            format: float
                            description: >-
                              Actual calculated amount based on the voucher
                              seller share percentage and the discount amount
                            example: 0
                          cashbackAmountFundedBySeller:
                            type: string
                            description: >-
                              Actual calculated amount based on the cashback
                              seller share percentage and the discount amount
                            example: 0
                        required:
                          - code
                          - amount
                          - cashbackPercentage
                          - voucherSellerShare
                          - cashbackSellerShare
                          - amountFundedBySeller
                          - cashbackAmountFundedBySeller
                    manifestStatus:
                      example: forward_ready_to_ship
                      type: string
                      description: Manifest status
                      nullable: true
                      enum:
                        - forward_ready_to_ship
                        - forward_received
                        - forward_shipped
                        - return_ready_to_ship
                        - return_received
                        - return_shipped
                    isPickupRequestSent:
                      type: boolean
                      example: false
                      description: >-
                        The flag shows if Pickup Request has been sent for the
                        item
                    discountAmount:
                      type: number
                      format: float
                      description: Discount value
                      example: 0
                  required:
                    - id
                    - srcId
                    - sellerId
                    - orderId
                    - uuid
                    - status
                    - isProcessable
                    - failureReason
                    - shipment
                    - invoiceNumber
                    - invoiceAccesskey
                    - inTransit
                    - premium
                    - targetToShipAt
                    - product
                    - unitPrice
                    - taxAmount
                    - taxPercent
                    - paidPrice
                    - paidCommission
                    - shippingFee
                    - shippingServiceCost
                    - walletCredits
                    - storeCredits
                    - shippingVoucherAmount
                    - priceAfterDiscount
                    - salesDueAmount
                    - itemSerialNumber
                    - abatementRate
                    - exciseRate
                    - hsnCode
                    - codCollectableAmount
                    - purchase
                    - createdAt
                    - updatedAt
                    - lastStatusChangedAt
                    - warehouseName
                    - extraAttributes
                    - isHybrid
                    - isOutlet
                    - actions
                    - vouchers
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    OrderItem:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Unique numeric identifier
                example: 1111
              srcId:
                type: string
                description: Order item src ID
                example: MY-32022990
              sellerId:
                type: integer
                description: Seller ID
                example: 11112
              orderId:
                type: integer
                description: Order ID
                example: 111134
              uuid:
                type: string
                description: Unique string ID
                example: 9d6ca7ce-4d71-46bf-aa5e-a0727eca880z
              status:
                type: string
                description: |
                  Order Item status.
                example: pending
                enum:
                  - pending
                  - shipped
                  - canceled
                  - returned
                  - failed
                  - delivered
                  - ready_to_ship
                  - return_shipped_by_customer
                  - return_waiting_for_approval
                  - return_rejected
                  - return_delivered
                  - payment_pending
              isProcessable:
                type: boolean
                description: >-
                  It's true if order item shipment type is not `consignment` and
                  src_status is not `awaiting_fulfillment`
                example: true
              failureReason:
                type: object
                properties:
                  type:
                    type: string
                    description: |
                      Failure reason type.
                    nullable: true
                    example: null
                    enum:
                      - canceled
                      - returned
                      - failed
                      - return_rejected
                      - canceled_system
                  name:
                    type: string
                    description: Reason name
                    nullable: true
                    example: null
                  description:
                    type: string
                    description: Reason description
                    nullable: true
                    example: null
                  details:
                    type: string
                    description: Reason details
                    example: ''
                required:
                  - type
                  - name
                  - description
                  - details
              shipment:
                type: object
                properties:
                  type:
                    type: string
                    description: Shipment type.
                    example: crossdocking
                    enum:
                      - warehouse
                      - dropshipping
                      - crossdocking
                      - dropshipping_crossdocking
                      - crossdocking_dropshipping
                  crossdockingDeliveryType:
                    type: string
                    description: Crossdocking delivery type
                    nullable: true
                    example: null
                    enum:
                      - send_to_warehouse
                      - pickup
                  method:
                    type: string
                    description: >-
                      Shipment method received from the Shop. It is intended to
                      indicate where the order should be send to. Possible
                      options are "home", "pickup", "address", "none"
                    example: home
                    enum:
                      - home
                      - pickup
                      - address
                      - none
                  preProvider:
                    nullable: true
                    description: Pre-defined shipment provider
                    type: object
                    properties:
                      uuid:
                        type: string
                        nullable: true
                        example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                      name:
                        type: string
                        description: Shipment provider name
                        example: DafitiCarrier
                      default:
                        type: boolean
                        description: True if it is the default shipment provider
                        example: true
                      digitalType:
                        type: string
                        description: Digital type
                        nullable: true
                        example: null
                      trackingUrl:
                        type: string
                        description: Tracking URL
                        nullable: true
                        example: https://example.com/tracking/
                    required:
                      - uuid
                      - name
                      - isDefault
                      - digitalType
                      - trackingUrl
                  provider:
                    nullable: true
                    description: Shipment provider
                    type: object
                    properties:
                      uuid:
                        type: string
                        nullable: true
                        example: f11a7fcb-53ea-45bf-aa54-f30a56a3a5gg
                      name:
                        type: string
                        description: Shipment provider name
                        example: DafitiCarrier
                      default:
                        type: boolean
                        description: True if it is the default shipment provider
                        example: true
                      digitalType:
                        type: string
                        description: Digital type
                        nullable: true
                        example: null
                      trackingUrl:
                        type: string
                        description: Tracking URL
                        nullable: true
                        example: https://example.com/tracking/
                    required:
                      - uuid
                      - name
                      - isDefault
                      - digitalType
                      - trackingUrl
                  providerPreselected:
                    type: boolean
                    description: Is shipment provider preselected
                    example: false
                  providerProduct:
                    type: string
                    example: ''
                  providerType:
                    type: string
                    description: Shipment provider type
                    nullable: true
                    example: null
                    enum:
                      - express
                      - standard
                      - economy
                      - digital
                      - air
                      - surface
                      - sameday
                  weight:
                    type: number
                    format: float
                    description: Weight
                    example: 0.5
                  trackingCode:
                    type: string
                    description: Tracking code
                    example: '123'
                  preTrackingCode:
                    type: string
                    description: PRE tracking code
                    nullable: true
                    example: null
                required:
                  - type
                  - crossdockingDeliveryType
                  - method
                  - preProvider
                  - provider
                  - providerPreselected
                  - providerProduct
                  - providerType
                  - weight
                  - trackingCode
                  - preTrackingCode
              invoiceNumber:
                type: string
                description: Invoice Number
                nullable: true
                example: 123re
              invoiceAccesskey:
                type: string
                description: Invoice Access Key
                nullable: true
                example: null
              inTransit:
                type: boolean
                description: Order item is in transit
                example: false
              premium:
                type: boolean
                description: The flag indicates if the order item is premium or not
                example: false
              targetToShipAt:
                type: string
                description: >-
                  Promised shipment date. It works only if Promised Shipping
                  Date Feature is Enabled. The dates returned will follow the
                  same format as in the example
                nullable: true
                example: '2022-12-23T05:36:23.123456Z'
              product:
                type: object
                properties:
                  name:
                    type: string
                    description: Product name.
                    example: Short de Baño Azul Topper Slim
                  sku:
                    type: string
                    description: Product SKU
                    example: TO076AT24RKHAR-2474097
                  variation:
                    type: string
                    description: Variation value as received from the Shop
                    nullable: true
                    example: '-'
                  sellerSku:
                    type: string
                    description: Seller SKU
                    example: 164097_L
                required:
                  - name
                  - sku
                  - variation
                  - sellerSku
              unitPrice:
                type: number
                format: float
                description: Order item price
                example: 2499
              taxAmount:
                type: number
                format: float
                description: Tax amount for the order item
                example: 433.71
              taxPercent:
                type: number
                format: float
                description: Tax percent for the order item
                example: 21
              paidPrice:
                type: number
                format: float
                description: Paid price
                example: 2499
              paidCommission:
                type: number
                format: float
                description: Paid commission
                nullable: true
                example: null
              shippingFee:
                type: number
                format: float
                description: Shipping fee
                example: 0
              shippingServiceCost:
                type: number
                format: float
                description: Shipping service cost
                nullable: true
                example: null
              walletCredits:
                type: number
                format: float
                description: >-
                  Indicated that the customer used wallet as payment aside from
                  possible voucher
                example: 0
              storeCredits:
                type: number
                format: float
                description: Store credits
                example: 0
              shippingVoucherAmount:
                type: number
                format: float
                description: Shipping voucher amount
                example: 0
              priceAfterDiscount:
                type: number
                format: float
                description: Price after discount
                example: 0
              salesDueAmount:
                type: number
                format: float
                description: Sales due amount
                example: 245
              itemSerialNumber:
                type: string
                description: Serial number
                nullable: true
                example: null
              abatementRate:
                type: string
                description: Abatement rate
                nullable: true
                example: null
              exciseRate:
                type: string
                description: Excise rate
                nullable: true
                example: null
              hsnCode:
                type: string
                description: HSN code
                nullable: true
                example: null
              codCollectableAmount:
                type: string
                description: Cod collectable amount
                nullable: true
                example: null
              purchase:
                type: object
                properties:
                  orderSrcId:
                    type: integer
                    description: Order src ID
                    nullable: true
                    example: 555
                  orderNumber:
                    type: string
                    description: Order number
                    nullable: true
                    example: MPDS-D1405061201
                  deliveryInfo:
                    type: string
                    description: Delivery info
                    nullable: true
                    example: null
                required:
                  - orderSrcId
                  - orderNumber
                  - deliveryInfo
              createdAt:
                type: string
                format: datetime
                description: Date and time when the order item was created
                example: '2021-09-22T23:21:42.123456Z'
              updatedAt:
                type: string
                format: datetime
                nullable: true
                description: >-
                  Date and time when the order item was updated. The dates
                  returned will follow the same format as in the example
                example: '2021-09-22T23:21:42.123456Z'
              lastStatusChangedAt:
                type: string
                format: datetime
                nullable: true
                description: >
                  Date when the order item status was updated.

                  Not every Order Item update changes its status. This is the
                  difference between this field and updated_at. The dates
                  returned will follow the same format as in the example
                example: '2021-09-22T23:21:42.123456Z'
              warehouseName:
                type: string
                description: Warehouse name
                nullable: true
                example: null
              extraAttributes:
                type: object
                description: >-
                  Extra attributes which were passed to SellerCenter on
                  getMarketPlaceOrders call.
                nullable: true
                properties:
                  installment_fee:
                    type: number
                    format: float
                    description: Installment fee
                    example: 20.5
                  delivery_type:
                    type: string
                    description: Delivery type
                    example: standard
                  has_transfer_shipping_flat_fee:
                    type: boolean
                    description: >-
                      Indicates, whether the order item has transfer shipping
                      flat fee
                    example: false
                  price_excluded_tax:
                    type: number
                    format: float
                    description: Price excluded tax
                    example: 24.99
                  sales_service_tax:
                    type: number
                    format: float
                    description: Sales service tax
                    example: 433.71
                  gst_free:
                    type: string
                    description: Indicates, whether the order item is GST free
                    example: '0'
                  shipping_fee_sst:
                    type: number
                    format: float
                    description: Shipping fee SST
                    example: 10.5
              isHybrid:
                type: boolean
                description: >-
                  Indicates, whether the product is a hybrid product for the
                  Hybrid Depth / Size Fill feature.
                example: false
              isOutlet:
                type: boolean
                description: Indicates, whether the order item has "outlet" flag.
                example: false
              actions:
                type: array
                description: Possible next actions for order item
                example:
                  - status_set_to_shipped
                  - status_set_to_cancelled
                items:
                  type: string
                  enum:
                    - create_manifest
                    - create_pickup_request
                    - generate_checklist
                    - generate_picklist
                    - generate_invoice
                    - generate_shipping_label
                    - generate_shipping_parcel
                    - generate_export_invoice
                    - generate_manifest
                    - generate_carrier_manifest
                    - generate_credit_note
                    - set_invoice_number
                    - set_invoice_access_key
                    - set_tracking_code
                    - set_shipment_provider
                    - status_set_to_delivered
                    - status_set_to_shipped
                    - status_set_to_canceled
                    - status_set_to_packed_by_marketplace
                    - status_set_to_ready_to_ship
                    - status_set_to_returned
                    - status_set_to_rejected
                    - status_set_to_return_rejected
                    - status_set_to_failed_delivery
                    - status_set_to_payment_pending
                    - status_set_to_return_delivered
                    - status_set_to_return_waiting_for_approval
                    - status_set_to_return_shipped_by_customer
              vouchers:
                type: array
                description: Discount list
                items:
                  type: object
                  properties:
                    code:
                      type: string
                      description: Discount code
                      example: AAA
                    amount:
                      type: number
                      format: float
                      description: Discount amount
                      example: 14.5
                    cashbackPercentage:
                      type: integer
                      description: Promotion defined percentage value for cashback
                      example: 0
                    voucherSellerShare:
                      type: number
                      format: float
                      description: >-
                        Promotion defined percentage value for the voucher,
                        which is covered/funded by the seller
                      example: 0
                    cashbackSellerShare:
                      type: number
                      format: float
                      description: >-
                        Promotion defined percentage value for the cashback,
                        which is covered/funded by the seller
                      example: 0
                    amountFundedBySeller:
                      type: number
                      format: float
                      description: >-
                        Actual calculated amount based on the voucher seller
                        share percentage and the discount amount
                      example: 0
                    cashbackAmountFundedBySeller:
                      type: string
                      description: >-
                        Actual calculated amount based on the cashback seller
                        share percentage and the discount amount
                      example: 0
                  required:
                    - code
                    - amount
                    - cashbackPercentage
                    - voucherSellerShare
                    - cashbackSellerShare
                    - amountFundedBySeller
                    - cashbackAmountFundedBySeller
              manifestStatus:
                example: forward_ready_to_ship
                type: string
                description: Manifest status
                nullable: true
                enum:
                  - forward_ready_to_ship
                  - forward_received
                  - forward_shipped
                  - return_ready_to_ship
                  - return_received
                  - return_shipped
              isPickupRequestSent:
                type: boolean
                example: false
                description: The flag shows if Pickup Request has been sent for the item
              discountAmount:
                type: number
                format: float
                description: Discount value
                example: 0
            required:
              - id
              - srcId
              - sellerId
              - orderId
              - uuid
              - status
              - isProcessable
              - failureReason
              - shipment
              - invoiceNumber
              - invoiceAccesskey
              - inTransit
              - premium
              - targetToShipAt
              - product
              - unitPrice
              - taxAmount
              - taxPercent
              - paidPrice
              - paidCommission
              - shippingFee
              - shippingServiceCost
              - walletCredits
              - storeCredits
              - shippingVoucherAmount
              - priceAfterDiscount
              - salesDueAmount
              - itemSerialNumber
              - abatementRate
              - exciseRate
              - hsnCode
              - codCollectableAmount
              - purchase
              - createdAt
              - updatedAt
              - lastStatusChangedAt
              - warehouseName
              - extraAttributes
              - isHybrid
              - isOutlet
              - actions
              - vouchers
    OrderItemReturn:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              orderItemId:
                type: integer
                nullable: false
                description: Order Item Id
              returnComment:
                type: string
                nullable: true
                description: Return comment
              shipmentProvider:
                type: string
                nullable: true
                description: Shipment Provider
              srcId:
                type: string
                nullable: true
                description: Src Id
              trackingCode:
                type: string
                nullable: true
                description: Tracking code
            required:
              - orderItemId
              - returnComment
              - shipmentProvider
              - srcId
              - trackingCode
    OrderItemReturns:
      description: OK
      content:
        application/json:
          schema:
            type: array
            description: Collection of Return objects for given Order Items Ids
            items:
              type: object
              properties:
                orderItemId:
                  type: integer
                  nullable: false
                  description: Order Item Id
                returnComment:
                  type: string
                  nullable: true
                  description: Return comment
                shipmentProvider:
                  type: string
                  nullable: true
                  description: Shipment Provider
                srcId:
                  type: string
                  nullable: true
                  description: Src Id
                trackingCode:
                  type: string
                  nullable: true
                  description: Tracking code
              required:
                - orderItemId
                - returnComment
                - shipmentProvider
                - srcId
                - trackingCode
    InvoiceNumber:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              generationType:
                type: string
                description: Generation type
                example: autoincrement_number | order_number | show_dialog
              prefix:
                type: string
                description: Prefix for the credit note number
                example: ABC
              nextNumber:
                type: integer
                description: The next number
                example: 123
              nextFormatedValue:
                type: string
                description: The next formated value
                example: ABC123
    OrderArchiveCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    idSalesOrder:
                      type: integer
                    srcId:
                      type: string
                    orderNr:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
                      nullable: false
                    currency:
                      type: string
                    properties:
                      type: object
                    SalesOrderComment:
                      type: array
                      items:
                        type: object
                        properties:
                          src_id:
                            type: string
                          status:
                            type: string
                          content:
                            type: string
                          sc_user:
                            type: string
                            nullable: true
                          username:
                            type: string
                          is_opened:
                            type: integer
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                          is_answered:
                            type: integer
                          comment_type:
                            type: string
                          source_system:
                            type: string
                          fk_sales_order:
                            type: integer
                          fk_sales_order_item:
                            type: integer
                            nullable: true
                          fk_sales_order_comment:
                            type: integer
                            nullable: true
                          id_sales_order_comment:
                            type: integer
                    salesOrderInvoice:
                      type: array
                      items:
                        type: object
                        properties:
                          required:
                            type: integer
                          created_at:
                            type: string
                            format: date-time
                          updated_at:
                            type: string
                            format: date-time
                          fk_sales_order:
                            type: integer
                          id_sales_order_invoice:
                            type: integer
                    OrderItemArchives:
                      type: array
                      items:
                        type: object
                        properties:
                          idSalesOrderItem:
                            type: integer
                          fkSeller:
                            type: integer
                          srcId:
                            type: string
                          properties:
                            type: object
                            properties:
                              uuid:
                                type: string
                              source:
                                type: string
                                nullable: true
                              src_id:
                                type: string
                              read_at:
                                type: string
                                nullable: true
                              remarks:
                                type: string
                              currency:
                                type: string
                              order_nr:
                                type: string
                              created_at:
                                type: string
                                format: date-time
                              updated_at:
                                type: string
                                format: date-time
                              gift_option:
                                type: integer
                              gift_message:
                                type: string
                                nullable: true
                              voucher_code:
                                type: string
                              voucher_type:
                                type: string
                                nullable: true
                              delivery_info:
                                type: string
                              id_sales_order:
                                type: integer
                              payment_method:
                                type: string
                              payout_pending:
                                type: integer
                              src_created_at:
                                type: string
                                format: date-time
                              address_billing:
                                type: string
                              address_shipping:
                                type: string
                              extra_attributes:
                                type: string
                                nullable: true
                              address_updated_at:
                                type: string
                                format: date-time
                              customer_last_name:
                                type: string
                              customer_first_name:
                                type: string
                              national_registration_number:
                                type: string
                                nullable: true
                          inventoryStatusHistory:
                            type: array
                            items:
                              type: object
                              properties:
                                uid:
                                  type: string
                                status:
                                  type: string
                                created_at:
                                  type: string
                                  format: date-time
                                fk_catalog_product:
                                  type: integer
                                fk_sales_order_item:
                                  type: integer
                                id_inventory_status_history:
                                  type: integer
                          orderItemOosCancellation:
                            type: array
                            items:
                              type: object
                              properties:
                                shop_sku:
                                  type: string
                                fk_seller:
                                  type: integer
                                created_at:
                                  type: string
                                  format: date-time
                                stock_quantity:
                                  type: integer
                                stock_updated_at:
                                  type: string
                                  format: date-time
                                fk_catalog_product:
                                  type: integer
                                fk_sales_order_item:
                                  type: integer
                          returnRequestItem:
                            type: array
                            items:
                              type: object
                              properties:
                                created_at:
                                  type: string
                                  format: date-time
                                updated_at:
                                  type: string
                                  format: date-time
                                returnRequest:
                                  type: object
                                  properties:
                                    comment:
                                      type: string
                                    fk_user:
                                      type: integer
                                    fk_seller:
                                      type: integer
                                    created_at:
                                      type: string
                                      format: date-time
                                    updated_at:
                                      type: string
                                      format: date-time
                                    request_type:
                                      type: string
                                    shipping_date:
                                      type: string
                                      format: date-time
                                    src_created_at:
                                      type: string
                                      format: date-time
                                    src_updated_at:
                                      type: string
                                      format: date-time
                                    id_return_request:
                                      type: integer
                                    return_delivery_type:
                                      type: string
                                    id_supplier_return_oms:
                                      type: integer
                                    supplier_return_number_oms:
                                      type: string
                                src_created_at:
                                  type: string
                                  format: date-time
                                src_updated_at:
                                  type: string
                                  format: date-time
                                fk_return_request:
                                  type: integer
                                fk_sales_order_item:
                                  type: integer
                                id_return_request_item:
                                  type: integer
                                fk_return_request_status:
                                  type: integer
                                id_supplier_return_item_oms:
                                  type: integer
                          salesOrderItemProperties:
                            type: array
                            items:
                              type: object
                              properties:
                                hsn_code:
                                  type: string
                                is_outlet:
                                  type: integer
                                created_at:
                                  type: string
                                  format: date-time
                                updated_at:
                                  type: string
                                  format: date-time
                                excise_rate:
                                  type: string
                                abatement_rate:
                                  type: string
                                warehouse_name:
                                  type: string
                                  nullable: true
                                volumetric_size:
                                  type: string
                                  nullable: true
                                is_free_shipping:
                                  type: integer
                                sales_due_amount:
                                  type: string
                                  nullable: true
                                credit_note_number:
                                  type: string
                                  nullable: true
                                item_serial_number:
                                  type: string
                                  nullable: true
                                fk_sales_order_item:
                                  type: integer
                                promotion_discounts:
                                  type: string
                                cod_collectable_amount:
                                  type: string
                                  nullable: true
                                id_sales_order_item_properties:
                                  type: integer
                                fk_sales_order_item_status_detail:
                                  type: string
                                  nullable: true
                          salesOrderItemStatusHistory:
                            type: array
                            items:
                              type: object
                              properties:
                                note:
                                  type: string
                                  nullable: true
                                user:
                                  type: string
                                created_at:
                                  type: string
                                  format: date-time
                                src_created_at:
                                  type: string
                                  nullable: true
                                fk_sales_order_item:
                                  type: integer
                                fk_sales_order_item_status:
                                  type: integer
                                id_sales_order_item_status_history:
                                  type: integer
                          salesOrderItemStatusManifestDetailSalesOrderItem:
                            type: array
                            items:
                              type: object
                              properties:
                                fk_manifest_type:
                                  type: integer
                                fk_sales_order_item:
                                  type: integer
                                fk_sales_order_item_status_manifest_detail:
                                  type: integer
                          salesOrderItemStatusTransitionTime:
                            type: array
                            items:
                              type: object
                              properties:
                                fk_sales_order_item:
                                  type: integer
                                created_to_shipped_business_hours:
                                  type: integer
                          tagManagerSalesOrderItem:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                entity:
                                  type: string
                                fk_user:
                                  type: integer
                                created_at:
                                  type: string
                                  format: date-time
                                expiration:
                                  type: string
                                  nullable: true
                                updated_at:
                                  type: string
                                  format: date-time
                                description:
                                  type: string
                                id_tag_manager_tag:
                                  type: integer
                          manifestArchives:
                            type: array
                            items:
                              type: object
                              properties:
                                idManifest:
                                  type: integer
                                properties:
                                  type: object
                                  properties:
                                    fk_seller:
                                      type: integer
                                    created_at:
                                      type: string
                                      format: date-time
                                    updated_at:
                                      type: string
                                      format: date-time
                                    id_manifest:
                                      type: integer
                                    manifest_code:
                                      type: string
                                    tracking_code:
                                      type: string
                                      nullable: true
                                    fk_manifest_type:
                                      type: integer
                                    fk_manifest_status:
                                      type: integer
                                    fk_shipment_provider:
                                      type: string
                                      nullable: true
                    packageArchives:
                      type: array
                      items:
                        type: object
                        properties:
                          idPackage:
                            type: integer
                          properties:
                            type: object
                            properties:
                              fk_seller:
                                type: integer
                              created_at:
                                type: string
                                format: date-time
                              updated_at:
                                type: string
                                format: date-time
                              id_package:
                                type: integer
                              package_code:
                                type: string
                              tracking_code:
                                type: string
                                nullable: true
                              fk_package_type:
                                type: integer
                              fk_package_status:
                                type: integer
                              fk_shipment_provider:
                                type: string
                                nullable: true
                          packageItem:
                            type: string
                          documentToken:
                            type: string
                          salesOrderDocument:
                            type: string
              hasNext:
                description: Information if there is a next page
                type: boolean
    ReuploadAccepted:
      description: Synchronization with shop system was successfully requeued.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
    Seller:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 32
              uuid:
                type: string
                example: 093a9e34-xxxx-xxxx-xxxx-53766e338abf
              srcId:
                type: string
                example: '131'
                description: >-
                  ID of the seller in the shop system. It is intentionally a
                  string as in some systems this ID may be not numeric.
              shortCode:
                type: string
                example: CI100AA
              status:
                type: string
                example: active
                enum:
                  - active
                  - inactive
                  - deleted
              name:
                type: string
                example: GFG eCommerce Technologies GmbH
              companyName:
                type: string
                example: GFG eCommerce Technologies GmbH
              email:
                type: string
                example: seller@example.com
              taxClass:
                type: string
                example: national
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              verified:
                type: boolean
              listed:
                type: boolean
                example: false
              delistReasons:
                type: array
                items:
                  type: object
                  properties:
                    reasonIdentifier:
                      type: integer
                      example: 1
                    reason:
                      type: string
                      description: Reason for why the seller was delisted
                      enum:
                        - USER_DEFINED
                        - HOLIDAY_MODE
                        - DAILY_ORDER_LIMIT
                        - PENDING_ORDER_LIMIT
                        - PENDING_TO_SHIPPED_ORDER_LIMIT
                      example: DAILY_ORDER_LIMIT
                    message:
                      type: string
                      description: >-
                        Message for why the seller was delisted. This text might
                        be shown to the seller but will not be translated.
                      example: Daily Order Limit reached
                    reasonLimit:
                      type: integer
                      description: >
                        Optional limit for the delisted reason. E.g., the reason
                        DAILY_ORDER_LIMIT might have a limit of 100 orders per
                        day.
                      example: 100
              profileFields:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: shop_name
                    displayValue:
                      type: string
                      description: >
                        Some fields, like dropdowns, have different internal
                        values and "human readable" value. For example,

                        field "country" can have internal value "CL" and display
                        value "Chile". In most cases, however, 

                        displayValue is equal to value.
                      example: some name
                    value:
                      type: string
                      example: some name
    Sellers:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 32
                    uuid:
                      type: string
                      example: 093a9e34-xxxx-xxxx-xxxx-53766e338abf
                    srcId:
                      type: string
                      example: '131'
                      description: >-
                        ID of the seller in the shop system. It is intentionally
                        a string as in some systems this ID may be not numeric.
                    shortCode:
                      type: string
                      example: CI100AA
                    status:
                      type: string
                      example: active
                      enum:
                        - active
                        - inactive
                        - deleted
                    name:
                      type: string
                      example: GFG eCommerce Technologies GmbH
                    companyName:
                      type: string
                      example: GFG eCommerce Technologies GmbH
                    email:
                      type: string
                      example: seller@example.com
                    taxClass:
                      type: string
                      example: national
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    verified:
                      type: boolean
                    listed:
                      type: boolean
                      example: false
                    delistReasons:
                      type: array
                      items:
                        type: object
                        properties:
                          reasonIdentifier:
                            type: integer
                            example: 1
                          reason:
                            type: string
                            description: Reason for why the seller was delisted
                            enum:
                              - USER_DEFINED
                              - HOLIDAY_MODE
                              - DAILY_ORDER_LIMIT
                              - PENDING_ORDER_LIMIT
                              - PENDING_TO_SHIPPED_ORDER_LIMIT
                            example: DAILY_ORDER_LIMIT
                          message:
                            type: string
                            description: >-
                              Message for why the seller was delisted. This text
                              might be shown to the seller but will not be
                              translated.
                            example: Daily Order Limit reached
                          reasonLimit:
                            type: integer
                            description: >
                              Optional limit for the delisted reason. E.g., the
                              reason DAILY_ORDER_LIMIT might have a limit of 100
                              orders per day.
                            example: 100
                    profileFields:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            example: shop_name
                          displayValue:
                            type: string
                            description: >
                              Some fields, like dropdowns, have different
                              internal values and "human readable" value. For
                              example,

                              field "country" can have internal value "CL" and
                              display value "Chile". In most cases, however, 

                              displayValue is equal to value.
                            example: some name
                          value:
                            type: string
                            example: some name
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  hasNext:
                    type: boolean
                    description: |
                      True if next page will have at least one result
                    example: false
    SellerPayout:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                statementNumber:
                  type: string
                  description: Url of the contract file
                  example: TEST1234-20221122
                createdAt:
                  type: string
                  format: date-time
                  description: Date and time when the statement was created
                  example: '2022-11-01 03:33:47'
                updatedAt:
                  type: string
                  format: date-time
                  description: Date and time when the statement was last updated
                  example: '2022-11-01 03:33:47'
                openingBalance:
                  type: number
                  format: float
                  description: The opening balance
                itemRevenue:
                  type: number
                  format: float
                  description: The revenue generated by the item.
                shipmentFee:
                  type: number
                  format: float
                  description: Cost of shipping.
                shipmentFeeCredit:
                  type: number
                  format: float
                  description: Shipping credit, if any.
                otherRevenueTotal:
                  type: number
                  format: float
                feesTotal:
                  type: number
                  format: float
                  description: Sum of Payment Fee & Return to Seller Fee
                subtotal1:
                  type: number
                  format: float
                  description: (Sum of Item Revenue, Other Revenue) - Fees(Total)
                refunds:
                  type: number
                  format: integer
                  description: Sum of all refunds, if any.
                feesOnRefundsTotal:
                  type: number
                  format: float
                  description: Accumulated fees on refunds issued.
                subtotal2:
                  type: number
                  format: float
                  description: (Sum of Subtotal1) - Refunds
                closingBalance:
                  type: number
                  format: float
                  description: Closing Balance
                guaranteeDeposit:
                  type: number
                  format: float
                  description: Guarantee Deposit
                payout:
                  type: number
                  format: float
                  description: Amount to be Paid Out to Seller for Statement
                paid:
                  type: boolean
                  description: Payout Status of Statement. 1 is Paid. 0 is Not Paid
                paymentReference:
                  type: string
    ExportItemsCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    userId:
                      example: 524
                      type: integer
                      description: >
                        ID of user who triggered export. When you request
                        exports you can see also exports

                        which were created by another users from the same Seller
                    sellerId:
                      example: 4089
                      type: integer
                    status:
                      type: string
                      enum:
                        - Finished
                        - Processing
                        - Error
                        - Queued
                        - Expired
                    isDeleted:
                      type: boolean
                      description: >
                        Export files has limited time of storage and after it
                        they are deleted. This

                        flag indicates that physical was already deleted and if
                        you need to download

                        this export then you will need to generate it again.
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    expiresAt:
                      type: string
                      format: date-time
                      description: datetime when this export file scheduled for deletion
                    requestedFormats:
                      type: array
                      description: formats which were requested for export
                      items:
                        type: string
                        enum:
                          - csv
                          - xlsx
                    downloadLinks:
                      type: array
                      items:
                        type: string
                      description: >
                        list of relative links to download export files. For
                        some types of

                        export files are generated in several formats, therefore
                        you may

                        have several links to download files.
                    exportContent:
                      example: Products - Shoes
                      type: string
                      description: >
                        short description of export file to distinguish between
                        different export items
                    uuid:
                      example: a8fd052d-f29a-471a-b92b-52bb0d2c0be4
                      type: string
                      description: >
                        Unique identifier of file. You can use it to download
                        file.
                    note:
                      type: string
                      description: >
                        Note on export item. It can be used to store some
                        additional information eg. failure reason
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    ExportItem:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
              userId:
                example: 524
                type: integer
                description: >
                  ID of user who triggered export. When you request exports you
                  can see also exports

                  which were created by another users from the same Seller
              sellerId:
                example: 4089
                type: integer
              status:
                type: string
                enum:
                  - Finished
                  - Processing
                  - Error
                  - Queued
                  - Expired
              isDeleted:
                type: boolean
                description: >
                  Export files has limited time of storage and after it they are
                  deleted. This

                  flag indicates that physical was already deleted and if you
                  need to download

                  this export then you will need to generate it again.
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              expiresAt:
                type: string
                format: date-time
                description: datetime when this export file scheduled for deletion
              requestedFormats:
                type: array
                description: formats which were requested for export
                items:
                  type: string
                  enum:
                    - csv
                    - xlsx
              downloadLinks:
                type: array
                items:
                  type: string
                description: >
                  list of relative links to download export files. For some
                  types of

                  export files are generated in several formats, therefore you
                  may

                  have several links to download files.
              exportContent:
                example: Products - Shoes
                type: string
                description: >
                  short description of export file to distinguish between
                  different export items
              uuid:
                example: a8fd052d-f29a-471a-b92b-52bb0d2c0be4
                type: string
                description: |
                  Unique identifier of file. You can use it to download file.
              note:
                type: string
                description: >
                  Note on export item. It can be used to store some additional
                  information eg. failure reason
    ProductSetsStocks:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productSetId:
                  type: integer
                  example: 5
                sumOfStocks:
                  type: integer
                  example: 10
                hasProductWithZeroStock:
                  type: boolean
                  example: false
                  description: >
                    Can be used to inform user that at least one of products in
                    product set has

                    no stocks. It may be useful for end user to take an action
                    to refill stock.
                fulfilmentStock:
                  type: integer
                  example: 5
                  description: The stock received
                reservedStock:
                  type: integer
                  example: 10
                  description: Stock that is reserved
                sellableStock:
                  type: integer
                  example: 101
                  description: >-
                    ReceivedConsignment + CanceledConsignment +
                    ReturnedConsignment + FailedConsignment
                nonSellableStock:
                  type: integer
                  example: 2
                  description: QuarantinedConsignment + DefectiveConsignment
                isConsignmentShipment:
                  type: boolean
                  example: false
                  description: >-
                    Shows if the shipment type is consignment, which means the
                    seller use own warehouse
    ProductSetsImages:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productSetId:
                  type: integer
                  example: 5
                images:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1357
                      displayUrl:
                        type: string
                        description: URL of the image
                        example: https://example.com/image-1.jpg
                      srcId:
                        type: string
                        nullable: true
                        description: >-
                          ID of image in Shop system. If null means that image
                          was not yet synchronized with Shop and is not visible
                          to end customers.
                        example: '39487664'
    ProductSetsCoverImages:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productSetId:
                  type: integer
                  example: 5
                imageUrl:
                  type: string
                  nullable: true
                  example: https://example.com/image-1.jpg
    ProductSkusImages:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productSetId:
                  type: integer
                  nullable: false
                  example: 5
                shopSku:
                  description: >
                    SKU on the shop's side. Usually it is visible to end
                    customer. If value is null, it means that product is not yet

                    synchronized with shop and SKU was not assigned.
                  type: string
                  example: NI464AKLCEZ0
                  nullable: false
                  readOnly: true
                sellerSku:
                  description: >
                    SKU from seller's side. Should be unique across products of
                    seller.
                  type: string
                  example: shoe-123
                mainImageUrl:
                  type: string
                  nullable: true
                  example: https://example.com/image-1.jpg
    ProductSetsTags:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                tagId:
                  type: integer
                  nullable: true
                  example: 5
                tagName:
                  type: string
                  nullable: true
                  example: Fresh products
                productSetId:
                  type: integer
                  nullable: false
                  example: 5
    FeedsCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    userId:
                      example: 524
                      type: integer
                      description: |
                        ID of the feed.
                    sellerId:
                      example: 4089
                      description: >-
                        ID of seller for who this feed is. Useful when your user
                        role allow you to manage multiple sellers.
                      type: integer
                    status:
                      type: string
                      enum:
                        - Finished
                        - Processing
                        - Error
                        - Queued
                        - Canceled
                    action:
                      type: string
                      description: >
                        Feed action ("what type of feed it was"). Types can be
                        added, removed and renamed. You can

                        use this string in UI to display to user or create your
                        mapping/translation for that.
                      enum:
                        - ProductCreate
                        - ProductUpdate
                        - ProductRemove
                        - Image
                        - SendToWarehouse
                        - ReturnFromWarehouse
                        - ProductCategoryMigrate
                        - SellerAttributeImport
                        - PendingTransactionApprove
                        - CsvShippingFee
                        - CsvCancellationFee
                        - CsvReturnDeliveryFee
                        - CsvReturnHandlingFee
                        - CsvReturnToSellerFee
                        - CsvMarkAsPaid
                        - CsvDebitUpload
                        - CsvCreditUpload
                        - OrderSetStatusReadyToShip
                        - OrderSetInvoiceAccessKey
                        - PromotionMassQcImport
                        - SellerFeesImport
                        - SubsidySkuImport
                        - SellerCounterfeitBrandConfiguration
                        - FinanceQcImport
                        - OrderCreateForwardManifest
                        - CsvInventoryStatusUpload
                        - OrderSetStatusToShipped
                        - SellerMailSend
                        - CounterfeitBrandUpdate
                        - OrderSetStatusToDelivered
                        - CreateThirdPartyOrder
                        - OrderUpdateManifestStatus
                        - ProductMassQcImport
                        - CategorySetupImport
                        - TransactionOrderItemImport
                        - TransactionProductImport
                        - TransactionSellerItemImport
                        - UnauthorizeMultipleProductsImport
                        - SellerProfileMassUpdate
                        - PromotionEligibleProductsImport
                        - PendingTransactionReject
                        - PackageWeightImport
                        - ConsignmentReplenishmentImport
                        - OrderItemTagImport
                        - FeedConfigChangePol
                        - FeedConfigChangePsol
                        - SellerTagImport
                        - ProductTagImport
                        - SellerRatingCustomKpiSellerValuesImport
                        - ImportExternalSellerFiles
                        - UpdateInventoryStatusImport
                        - AttributePropertiesImport
                        - ConsignmentSerialNumberSetupImport
                        - ConsignmentRequestImport
                        - OrderLogisticsImport
                        - ProductStockUpdate
                        - ConsignmentReturnRequestImport
                        - ProductWarehouseStockUpdate
                        - CategoriesRestrictionImport
                        - OrderSetStatusReturned
                        - OrderSetStatusReturnReceived
                        - OrderSetStatusReturnApproved
                        - OrderSetStatusReturnRejected
                        - CategoryAttributeMappingImport
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    source:
                      type: string
                      description: way Feed was created (API, XLS, UI).
                    requestedFormats:
                      type: array
                      items:
                        type: string
                    downloadLinks:
                      type: array
                      items:
                        type: string
                      description: >
                        list of relative links to download export files. For
                        some types of

                        export files are generated in several formats, therefore
                        you may

                        have several links to download files.
                    totalRecords:
                      description: >
                        Feed can contain multiple items and this number
                        indicated total number of recognized items
                      example: 4089
                      type: integer
                    processedRecords:
                      description: >
                        Feed items are processed in chunks and using this number
                        you can see how many items were processed.
                      example: 123
                      type: integer
                    failedRecords:
                      description: >
                        How many items were failed to process (contains wrong
                        data, validation failed for data, etc).
                      example: 64
                      type: integer
                    failureReportExportItemid:
                      example: 64
                      description: >
                        ID of related export item. Can be null if there is no
                        related error for feed. If present, you can

                        get information about this export item by doing another
                        request to export endpoint. Export item can

                        have download link and by using it you can download CSV
                        or XLSX file with errors or warnings related

                        to this feed.
                      type: integer
                      nullable: true
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    FeedStatus:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                format: uuid
              action:
                type: string
                description: >
                  Feed action ("what type of feed it was"). Types can be added,
                  removed and renamed. You can

                  use this string in UI to display to user or create your
                  mapping/translation for that.
                enum:
                  - ProductCreate
                  - ProductUpdate
                  - ProductRemove
                  - Image
                  - SendToWarehouse
                  - ReturnFromWarehouse
                  - ProductCategoryMigrate
                  - SellerAttributeImport
                  - PendingTransactionApprove
                  - CsvShippingFee
                  - CsvCancellationFee
                  - CsvReturnDeliveryFee
                  - CsvReturnHandlingFee
                  - CsvReturnToSellerFee
                  - CsvMarkAsPaid
                  - CsvDebitUpload
                  - CsvCreditUpload
                  - OrderSetStatusReadyToShip
                  - OrderSetInvoiceAccessKey
                  - PromotionMassQcImport
                  - SellerFeesImport
                  - SubsidySkuImport
                  - SellerCounterfeitBrandConfiguration
                  - FinanceQcImport
                  - OrderCreateForwardManifest
                  - CsvInventoryStatusUpload
                  - OrderSetStatusToShipped
                  - SellerMailSend
                  - CounterfeitBrandUpdate
                  - OrderSetStatusToDelivered
                  - CreateThirdPartyOrder
                  - OrderUpdateManifestStatus
                  - ProductMassQcImport
                  - CategorySetupImport
                  - TransactionOrderItemImport
                  - TransactionProductImport
                  - TransactionSellerItemImport
                  - UnauthorizeMultipleProductsImport
                  - SellerProfileMassUpdate
                  - PromotionEligibleProductsImport
                  - PendingTransactionReject
                  - PackageWeightImport
                  - ConsignmentReplenishmentImport
                  - OrderItemTagImport
                  - FeedConfigChangePol
                  - FeedConfigChangePsol
                  - SellerTagImport
                  - ProductTagImport
                  - SellerRatingCustomKpiSellerValuesImport
                  - ImportExternalSellerFiles
                  - UpdateInventoryStatusImport
                  - AttributePropertiesImport
                  - ConsignmentSerialNumberSetupImport
                  - ConsignmentRequestImport
                  - OrderLogisticsImport
                  - ProductStockUpdate
                  - ConsignmentReturnRequestImport
                  - ProductWarehouseStockUpdate
                  - CategoriesRestrictionImport
                  - OrderSetStatusReturned
                  - OrderSetStatusReturnReceived
                  - OrderSetStatusReturnApproved
                  - OrderSetStatusReturnRejected
                  - CategoryAttributeMappingImport
              status:
                type: string
                enum:
                  - Finished
                  - Processing
                  - Error
                  - Queued
                  - Canceled
              errors:
                type: array
                items:
                  type: object
                  properties:
                    itemId:
                      type: string
                      format: uuid
                    errorCode:
                      type: integer
                    fieldName:
                      type: string
                    errorMessage:
                      type: string
                    sellerSku:
                      type: string
              warnings:
                type: array
                items:
                  type: object
                  properties:
                    itemId:
                      type: string
                      format: uuid
                    message:
                      type: string
                    fieldName:
                      type: string
                    sellerSku:
                      type: string
    FeedsCount:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              total:
                type: integer
              queued:
                type: integer
              processing:
                type: integer
              finished:
                type: integer
              canceled:
                type: integer
    FeedRawInput:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                FeedUuid:
                  example: 2283380623-57c9-4163-b062-9f558d1934c2
                  type: string
                MimeType:
                  example: text/html
                  type: string
                File:
                  example: 0eWxlPmJvZHkgeyBmb250LXNpemU6MTBweDsgZm9udC1mYW1pbHk
                  type: string
                  description: the manifest file encoded base64
    RejectReasonsCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                  description: |
                    Id of the reject reason.
                name:
                  type: string
                  example: Wrong description
                  description: >
                    The name of the reject reason in venture locale. The ones
                    set to 'Not Authorized' will have (Not Authorized) added as
                    suffix.
                type:
                  type: string
                  example: product
                  enum:
                    - product
                    - seller
                    - consignment
                    - promotion
                    - finance
                isSetToNotAuthorized:
                  type: boolean
                  example: false
                  description: >
                    If true, this reason can be used to set product to not
                    authorized status.

                    Not authorized products are taken offline and blocked from
                    going to product QC. Cannot be edited after saving.
                isEnabled:
                  type: boolean
                  example: true
                  description: |
                    Whether or not the reject reason is currently enabled.
    LastVersionUploadedCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: ProductSet upload statuses
              type: object
              properties:
                productSetId:
                  description: numeric ID of ProductSet
                  type: object
                  properties:
                    syncClass:
                      description: >-
                        Used to know if the icon for product uploaded should be
                        displayed or not
                      example: iconset-visible
                      type: string
                    message:
                      description: >
                        Message for the product set containing successful
                        message or error message. If the product set is

                        uploaded the message will be "Uploaded to shop", all
                        other messages representing that product was not
                        uploaded 

                        successfully
                      type: string
                      example: Latest version not yet uploaded to shop
                    dirtStatus:
                      description: >-
                        Represents a flag to know if the product set has dirty
                        data
                      type: boolean
                      example: true
    WebhookCreated:
      description: Webhook created
      content:
        application/json:
          schema:
            type: object
            properties:
              webhookId:
                type: string
                example: 7dffaa4e-1713-42c2-84ba-1d2fbd4537ab
              createdAt:
                type: string
                readOnly: true
                format: date-time
    WebhookUpdated:
      description: Webhook updated
      content:
        application/json:
          schema:
            type: object
            properties:
              webhookId:
                type: string
                example: 7dffaa4e-1713-42c2-84ba-1d2fbd4537ab
              updatedAt:
                type: string
                readOnly: true
                format: date-time
    CallbackDetail:
      description: Webhook callback detail
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                description: Identifier of a Webhook Callback
                example: 1
              sellerId:
                type: integer
                description: Identifier of a Seller as assigned by SellerCenter.
                example: 1024
              url:
                type: string
                description: The webhook url that will be called by SellerCenter.
                example: https://sellercenter.com/callbacks
              status:
                type: string
                enum:
                  - success
                  - fail
                  - inprogress
                  - queueing_failed
                description: Status of the webhook callback.
                example: inprogress
              createdAt:
                type: string
                nullable: false
                example: '2023-10-25T23:30:34+00:00'
              lastCallAt:
                type: string
                nullable: false
                example: '2023-10-25T23:30:34+00:00'
              event:
                type: string
                nullable: false
                example: onOrderItemsStatusChanged
              payload:
                type: string
                nullable: false
                example: >-
                  {"event":"onOrderItemsStatusChanged","payload":{"OrderId":1,"OrderItemIds":["2"],"NewStatus":"ready_to_ship"}}
    WebhookEntitiesCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              events:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Human readable string identifier of an Entity.
                      example: Metrics
                    events:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Human readable string identifier of an Event.
                            example: Updated
                          alias:
                            type: string
                            description: >-
                              Human readable string identifier of an Event
                              combined with its Entity.
                            example: onMetricsUpdated
    WebhooksCollection:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Identifier of a Webhook Callback
                      example: 1
                    sellerId:
                      type: integer
                      description: Identifier of a Seller as assigned by SellerCenter.
                      example: 1024
                    url:
                      type: string
                      description: The webhook url that will be called by SellerCenter.
                      example: https://sellercenter.com/callbacks
                    status:
                      type: string
                      enum:
                        - success
                        - fail
                        - inprogress
                        - queueing_failed
                      description: Status of the webhook callback.
                      example: inprogress
                    createdAt:
                      type: string
                      nullable: false
                      example: '2023-10-25T23:30:34+00:00'
                    lastCallAt:
                      type: string
                      nullable: false
                      example: '2023-10-25T23:30:34+00:00'
                    event:
                      type: string
                      nullable: false
                      example: onOrderItemsStatusChanged
                    payload:
                      type: string
                      nullable: false
                      example: >-
                        {"event":"onOrderItemsStatusChanged","payload":{"OrderId":1,"OrderItemIds":["2"],"NewStatus":"ready_to_ship"}}
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    VisibilityRulesCollection:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productSetId:
                  type: integer
                  example: 1
                  description: |
                    Id of the ProductSet
                hasAtLeastOneActiveProduct:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if the ProductSet has at least one active
                    Product
                isSellerActive:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if the Seller of the ProductSet is active or
                    not
                isBrandActive:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if the Brand of the ProductSet is active or
                    not
                hasZeroPrices:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if any variations of the ProductSet has a
                    price with 0 value
                hasZeroStocks:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if any variations of the ProductSet have no
                    stocks in the warehouse
                hasImages:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if at least 1 image was uploaded for the
                    ProductSet
                hasActiveCategories:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if at least 1 image was uploaded for the
                    ProductSet
                isBrandApproved:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if the Brand of the ProductSet is approved or
                    not
                isProductSetAuthorized:
                  type: boolean
                  example: true
                  description: |
                    The flag shows if the ProductSet is authorized or not
                isLatestVersionUploaded:
                  type: boolean
                  example: true
                  description: >
                    The flag shows if the latest version of the ProductSet was
                    uploaded to the store
                latestVersionUploadedMessage:
                  type: string
                  example: >-
                    Latest version not yet uploaded to shopLatest version not
                    yet uploaded to shop
                  description: >
                    A detailed message (with error) about the latest uploaded
                    version of the ProductSet
                qualityControlStatus:
                  type: string
                  enum:
                    - accepted
                    - rejected
                    - pending
                  example: pending
                  description: >
                    The quality control status of the ProductSet without details
                    (comment/reject reason)
    User:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 32
              email:
                type: string
                example: test@example.com
              name:
                type: string
                example: Test name
              apiKey:
                type: string
                example: 5b7878b7b1ed868cc549c2c2f7202309bcfe9737
                description: Only available for admin users
              aclRoleId:
                type: integer
                example: 2
              sellerId:
                type: integer
                example: 1
              status:
                type: string
                example: active
              enablePassword:
                type: boolean
                example: true
                description: Indicates if the password is enabled for the user
              switchableSellers:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: '123'
                    name:
                      type: string
                      example: Seller Name
                description: List of switchable sellers with their IDs and names
    Users:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 32
                    email:
                      type: string
                      example: test@example.com
                    name:
                      type: string
                      example: Test name
                    apiKey:
                      type: string
                      example: 5b7878b7b1ed868cc549c2c2f7202309bcfe9737
                      description: Only available for admin users
                    aclRoleId:
                      type: integer
                      example: 2
                    sellerId:
                      type: integer
                      example: 1
                    status:
                      type: string
                      example: active
                    enablePassword:
                      type: boolean
                      example: true
                      description: Indicates if the password is enabled for the user
                    switchableSellers:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: '123'
                          name:
                            type: string
                            example: Seller Name
                      description: List of switchable sellers with their IDs and names
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
    OrdersCounters:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              pending:
                type: object
                description: >
                  Counter of pending order items (order items in status
                  "pending"). Order items may have field

                  shipping_provider_type with possible values 'express',
                  'standard', 'economy', 'air', 'surface',

                  'sameday' or null.



                  For order items with not-null shipping_provider_type you can
                  find counter for that particular provider type. If

                  you develop your own UI for SellerCenter: when count for
                  certain shipping provider type is not zero, then you

                  can show filter for this particular shipping provider type.
                  For example: pendingEconomyCount=6 and all other

                  counters are equal to 0. In this case it make sense to show in
                  UI section "Pending", sub-section "Economy" and

                  no sections "Air", "Surface" and others.
                properties:
                  pending:
                    type: integer
                    description: Count of all pending order items.
                  notPrintedPendingCount:
                    type: integer
                    description: Count of all pending order items which were not printed.
                  pendingExpressCount:
                    type: integer
                    description: >-
                      Count of pending order items with
                      shipping_provider_type=express
                  pendingEconomyCount:
                    type: integer
                    description: >-
                      Count of pending order items with
                      shipping_provider_type=economy
                  pendingStandardCount:
                    type: integer
                    description: >-
                      Count of pending order items with
                      shipping_provider_type=standard
                  pendingSamedayCount:
                    type: integer
                    description: >-
                      Count of pending order items with
                      shipping_provider_type=sameday
                  pendingAirCount:
                    type: integer
                    description: >-
                      Count of pending order items with
                      shipping_provider_type=air
                  pendingSurfaceCount:
                    type: integer
                    description: >-
                      Count of pending order items with
                      shipping_provider_type=surface
              readyToShipCount:
                type: integer
                description: Count or order items in "ready to ship" status.
              paymentPendingCount:
                type: integer
                description: >
                  Count or order items in "payment_pending" status. This status
                  is separate status from "pending". If you want

                  to display in your UI "overall" count of pending order items,
                  then recommended formula is "payment pending count +

                  pending count".
              notPrintedReadyToShipCount:
                type: integer
                description: >
                  Count of order items in status "ready_to_ship" which were not
                  printed yet.
              shippedCount:
                type: integer
                description: Count of order items in status "shipped".
    OrderHistory:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                orderItemId:
                  type: integer
                  description: Order item identifier
                  example: 1111
                shopSku:
                  type: string
                  description: Shop SKU
                  example: 164097_L
                status:
                  type: string
                  description: |
                    Order Item status.
                  example: pending
                  enum:
                    - pending
                    - shipped
                    - canceled
                    - returned
                    - failed
                    - delivered
                    - ready_to_ship
                    - return_shipped_by_customer
                    - return_waiting_for_approval
                    - return_rejected
                    - return_delivered
                    - payment_pending
                note:
                  type: string
                  description: Additional information
                createdAt:
                  type: string
                  description: Date when change occurred
                  example: '2021-09-22T23:21:42.123456Z'
                editor:
                  type: string
                  description: Author of the change
                  example: admin@sellercenter.net
              required:
                - orderItemId
                - shopSku
                - status
                - createdAt
    OrderFinance:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              orderId:
                type: integer
                description: Order Id
                example: 1
              currency:
                type: string
                description: Order currency
                example: USD
              shippingFeeItems:
                type: number
                format: float
                description: Sum of Order Item shipping fee.
                example: 23.43
              shippingServiceCostItems:
                type: number
                format: float
                description: Sum of Order Item shipping service cost.
                example: 43.43
              voucherTotal:
                type: number
                format: float
                description: Sum of Order Item vouchers.
                example: 150.3
              grandTotal:
                type: number
                format: float
                description: Total price
                example: 250.23
              unitPrice:
                type: number
                format: float
                description: Order price
                example: 2499
              taxAmount:
                type: number
                format: float
                description: Tax amount
                example: 433.71
              paidPrice:
                type: number
                format: float
                description: Paid price
                example: 2499
              walletCredits:
                type: number
                format: float
                description: >-
                  Indicated that the customer used wallet as payment aside from
                  possible voucher
                example: 0
              storeCredits:
                type: number
                format: float
                description: Store credits
                example: 0
              shippingVoucherAmount:
                type: number
                format: float
                description: Shipping voucher amount
                example: 0
              transactionSummary:
                type: array
                description: Calculated transaction data for Order
                items:
                  type: object
                  properties:
                    transactionTypeId:
                      type: integer
                      description: Transaction Type Id
                      example: 22
                    description:
                      type: string
                      description: >-
                        The description is taken from the TRE group or from the
                        description of the transaction type.
                      example: Commission
                    amount:
                      type: number
                      format: float
                      description: Amount
                      example: 54.43
                    currency:
                      type: string
                      description: Currency
                      example: USD
                  required:
                    - transactionTypeId
                    - description
                    - amount
                    - currency
              installmentFee:
                type: number
                format: float
                description: Installment fee
                example: 20.5
              numberOfInstallments:
                type: integer
                description: Number of installments
                example: 3
              shippingFeeSstSum:
                type: number
                format: float
                description: Sum of shipping fee SST tax
                example: 10.5
            required:
              - orderId
              - currency
              - shippingFeeItems
              - shippingServiceCostItems
              - voucherTotal
              - grandTotal
              - unitPrice
              - taxAmount
              - paidPrice
              - walletCredits
              - storeCredits
              - shippingVoucherAmount
              - transactionSummary
              - installmentFee
              - numberOfInstallments
              - shippingFeeSstSum
    OrderItemsPackages:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  nullable: false
                  example: 123
                srcId:
                  type: string
                  description: Package src ID
                  nullable: true
                  example: MY-32022990
                orderItemIds:
                  type: array
                  description: Order items ids within package
                  example:
                    - 144
                    - 152
                  items:
                    type: integer
              required:
                - id
                - orderItemIds
    Transactions:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: Transaction info
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                  description: Unique ID of transaction
                sellerId:
                  type: integer
                  description: Seller Id
                  example: 1
                  nullable: true
                transactionTypeId:
                  type: integer
                  description: |
                    Transaction type Id.
                    List of types you can find In /v2/transaction/types
                  example: 1
                treStatementGroupId:
                  type: integer
                  description: Transaction Rule Engine group Id
                  example: 2
                  nullable: true
                transactionGroupName:
                  type: string
                  description: Transaction Rule Engine group name
                  nullable: true
                transactionTriggerEventId:
                  type: integer
                  description: >
                    Transaction trigger event Id.

                    List of events you can find In
                    /v2/transaction/trigger-events
                  example: 1
                  nullable: true
                isUnique:
                  type: boolean
                  description: Is unique transaction
                  nullable: true
                transactionSource:
                  type: string
                  description: Transaction source
                  enum:
                    - sellercenter
                    - web
                    - csv
                userId:
                  type: integer
                  description: User Id
                  nullable: true
                description:
                  type: string
                  description: Info about transaction
                value:
                  type: number
                  format: float
                  description: Value
                  example: 65.3
                taxesVat:
                  type: number
                  format: float
                  description: Value-Added Tax
                  nullable: true
                  example: 2.3
                taxesWht:
                  type: number
                  format: float
                  description: Withholding tax
                  nullable: true
                  example: 1.3
                isWhtInAmount:
                  type: boolean
                  description: Is Withholding tax in amount
                  example: true
                ref:
                  type: integer
                  description: >-
                    Reference to the transaction object. For example on Order
                    Item Id.
                  nullable: true
                  example: 12
                refDate:
                  type: integer
                  nullable: true
                number:
                  type: string
                  description: Transaction number
                  nullable: true
                transactionStatementId:
                  type: integer
                  description: Transaction statement Id
                  nullable: true
                createdAt:
                  type: string
                  format: date-time
                  example: '2021-09-22T23:21:42+02:00'
                  description: Transaction create date-time
                updatedAt:
                  type: string
                  format: date-time
                  example: '2021-09-22T23:21:42+02:00'
                  description: Transaction last update date-time
                qcUserId:
                  type: integer
                  description: QC User Id
                  nullable: true
                  example: 44
                hash:
                  type: string
                  description: Unique hash of transaction
                  nullable: true
                currency:
                  type: string
                  description: Currency
                  nullable: true
                  example: USD
                reference:
                  type: integer
                  description: Identifier of the reference type.
                  nullable: true
                referenceType:
                  type: string
                  description: Reference type tels who was the creator of given transaction
                  nullable: true
              required:
                - id
                - sellerId
                - transactionTypeId
                - treStatementGroupId
                - transactionTriggerEventId
                - isUnique
                - transactionSource
                - userId
                - description
                - value
                - taxesVat
                - taxesWht
                - isWhtInAmount
                - ref
                - refDate
                - number
                - transactionStatementId
                - createdAt
                - updatedAt
                - qcUserId
                - hash
                - currency
                - reference
                - referenceType
    TransactionTypes:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: Transaction info
              type: object
              properties:
                accountStatementSection:
                  type: string
                  description: Account statement section
                  example: other_transactions
                  enum:
                    - item_revenue
                    - other_revenue
                    - subsidy
                    - subsidy_refund
                    - fees
                    - item_refunds
                    - refunds
                    - other_transactions
                    - debit_other_revenues
                description:
                  type: string
                  description: Description
                feeType:
                  type: integer
                  description: Fee type
                  nullable: true
                id:
                  type: integer
                  description: Id
                  example: 1
                refSource:
                  type: string
                  description: Ref source
                  nullable: true
                  example: sales_order_item
                type:
                  type: string
                  description: Type
                  enum:
                    - debit
                    - credit
              required:
                - accountStatementSection
                - description
                - feeType
                - id
                - refSource
                - type
    TransactionAccountStatementGroups:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: Transaction account statement group info
              type: object
              properties:
                accountStatementGroupId:
                  type: string
                  description: Account statement group identifier
                  example: 1
                name:
                  type: string
                  description: Account statement group name
                  example: Payment Deposit
                outcome:
                  type: object
                  description: Outcome
                  properties:
                    value:
                      type: string
                      description: outcome value
                      example: debit_transaction
                transactionTypeId:
                  type: integer
                  description: Transaction type identifier
                  example: 1
                accountStatementSection:
                  type: string
                  description: Account statement section
                  example: fees
                transactionType:
                  type: string
                  description: Transaction type name
                  example: Selling Fee Credit
                marker:
                  type: string
                  description: Marker
                  example: account_statement_group-balance-deduction-10
                statementType:
                  type: string
                  description: Shows to which statement this groups is associated
                  default: marketplace
                  enum:
                    - marketplace
                    - consignment
                transactionTypeRefSource:
                  type: string
                  description: Transaction type reference source
                  example: seller
                  nullable: true
              required:
                - accountStatementGroupId
                - name
                - outcome
                - transactionTypeId
                - accountStatementSection
                - transactionType
                - marker
                - statementType
                - transactionTypeRefSource
    TransactionTriggerEvents:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: Transaction info
              type: object
              properties:
                id:
                  type: integer
                  description: Id
                  example: 1
                name:
                  type: string
                  description: Trigger name
                  example: order_item_shipped
                label:
                  type: string
                  description: Display name
                  example: Item Shipped
              required:
                - id
                - name
                - label
    TransactionStatements:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              description: Transaction info
              type: object
              properties:
                id:
                  type: integer
                  description: Id
                  example: 1
                sellerId:
                  type: integer
                  description: Seller Id
                  example: 2
                startDate:
                  type: string
                  format: date-time
                  example: '2021-09-22T23:21:42+02:00'
                  description: Transaction statement start date.
                endDate:
                  type: string
                  format: date-time
                  example: '2021-09-22T23:21:42+02:00'
                  description: Transaction statement end date.
                openingBalance:
                  type: number
                  format: float
                  description: Balance before transaction
                  example: 32.5
                guaranteeDeposit:
                  type: string
                  description: Guarantee deposit
                  nullable: true
                closingBalance:
                  type: number
                  format: float
                  description: Balance after transaction
                  nullable: true
                  example: 30.6
                payout:
                  type: number
                  format: float
                  description: Payout amount
                  nullable: true
                  example: 2.4
                currency:
                  type: string
                  description: Currency
                  example: USD
                createdAt:
                  type: string
                  format: date-time
                  example: '2021-09-22T23:21:42+02:00'
                  description: Transaction statement create date-time.
                updatedAt:
                  type: string
                  format: date-time
                  example: '2021-09-22T23:21:42+02:00'
                  description: Transaction statement last update date-time.
                paid:
                  type: boolean
                  description: Is paid
                  example: false
                note:
                  type: string
                  description: Additional info about statement
                userId:
                  type: integer
                  description: User Id
                  nullable: true
                number:
                  type: string
                  description: Statement number
                  nullable: true
                uuid:
                  type: string
                  description: Unique string identifier
                paymentRef:
                  type: string
                  description: Payment reference
                  nullable: true
                uploadId:
                  type: integer
                  description: Upload Id
                  nullable: true
                paidAt:
                  type: string
                  format: date-time
                  example: '2021-09-22T23:21:42+02:00'
                  description: Date of payment.
                  nullable: true
                dueAt:
                  type: string
                  format: date-time
                  example: '2021-09-22T23:21:42+02:00'
                  description: Due at.
                  nullable: true
              required:
                - id
                - sellerId
                - startDate
                - endDate
                - openingBalance
                - guaranteeDeposit
                - closingBalance
                - payout
                - currency
                - createdAt
                - updatedAt
                - paid
                - note
                - userId
                - number
                - uuid
                - paymentRef
                - uploadId
                - paidAt
                - dueAt
    RolesCollection:
      description: List of roles
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 1
                  description: |
                    Id of role.
                name:
                  type: string
                  example: maintenance
                  description: |
                    The name of the role.
                displayName:
                  type: string
                  example: Maintenance
                  description: |
                    The display name of the role.
                group:
                  type: string
                  example: venture
                  description: |
                    What group the role belongs to.
                description:
                  type: string
                  example: Some details about the role
                  description: |
                    A descriptive text of the user role.
                canBeEditedByRoleIds:
                  type: array
                  items:
                    type: integer
                    example: 1
                  description: Ids of roles that can edit the role
                userCount:
                  type: integer
                  example: 103
                  description: |
                    How many users share the user role.
                canEdit:
                  type: boolean
                  example: true
                  description: >
                    Whether or not you have enough rights to edit the role. Use
                    this to check whether or not to show the resources.
                canDelete:
                  type: boolean
                  example: false
                  description: >
                    Whether or not you can delete the role. If there are users
                    that are assigned to the role, this will

                    be false even if you have enough permissions for deletion.
                resources:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                        description: |
                          Id of user resource.
                      name:
                        type: string
                        example: login
                        description: |
                          The name of the user resource.
                      label:
                        type: string
                        example: Frontend login
                        description: |
                          The label of the user resource.
                      description:
                        type: string
                        example: Some details about the user resource
                        description: |
                          A descriptive text of the user resource.
                      maintenanceOnly:
                        type: boolean
                        example: true
                        description: >
                          Whether or not the resource is only available for
                          maintenance user.
                      tags:
                        type: array
                        items:
                          type: string
                          example: seller
    RoleAdd:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 123
                description: |
                  Id of role.
              displayName:
                type: string
                example: Maintenance
                description: |
                  The display name of the role.
              group:
                type: string
                example: venture
                description: |
                  What group the role belongs to.
              description:
                type: string
                example: Some details about the role
                description: |
                  A descriptive text of the user role.
              canBeEditedByRoleIds:
                type: array
                items:
                  type: integer
                  example: 1
                description: Ids of roles that can edit the role
    RoleEdit:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 123
                description: |
                  Id of role.
              displayName:
                type: string
                example: Maintenance
                description: |
                  The display name of the role.
              group:
                type: string
                example: venture
                description: |
                  What group the role belongs to.
              description:
                type: string
                example: Some details about the role
                description: |
                  A descriptive text of the user role.
              canBeEditedByRoleIds:
                type: array
                items:
                  type: integer
                  example: 1
                description: Ids of roles that can edit the role
    ResourcesCollection:
      description: List of enabled resources and available resources
      content:
        application/json:
          schema:
            type: object
            properties:
              enabledResourcesList:
                type: array
                description: |
                  The list of enabled resources.
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: |
                        Id of user resource.
                    name:
                      type: string
                      example: login
                      description: |
                        The name of the user resource.
                    label:
                      type: string
                      example: Frontend login
                      description: |
                        The label of the user resource.
                    description:
                      type: string
                      example: Some details about the user resource
                      description: |
                        A descriptive text of the user resource.
                    maintenanceOnly:
                      type: boolean
                      example: true
                      description: >
                        Whether or not the resource is only available for
                        maintenance user.
                    tags:
                      type: array
                      items:
                        type: string
                        example: seller
              resourcesList:
                type: array
                description: |
                  The list of available resources.
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                      description: |
                        Id of user resource.
                    name:
                      type: string
                      example: login
                      description: |
                        The name of the user resource.
                    label:
                      type: string
                      example: Frontend login
                      description: |
                        The label of the user resource.
                    description:
                      type: string
                      example: Some details about the user resource
                      description: |
                        A descriptive text of the user resource.
                    maintenanceOnly:
                      type: boolean
                      example: true
                      description: >
                        Whether or not the resource is only available for
                        maintenance user.
                    tags:
                      type: array
                      items:
                        type: string
                        example: seller
    ApiKeyGenerate:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              apiKey:
                type: string
                example: 3b521ea8c6e7fcaf7e9ed82fc9a869bc
                description: The generated api key.
    SwitchSeller:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                enum:
                  - true
    CreditNoteNumber:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              generationType:
                type: string
                description: Generation type
                example: autoincrement_number
              prefix:
                type: string
                description: Prefix for the credit note number
                example: ABC
              nextNumber:
                type: integer
                description: The next number
                example: 123
              nextFormatedValue:
                type: string
                description: The next formated value
                example: CNCODEABC123
    SellerExternalFiles:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  type: object
                  properties:
                    fileType:
                      description: >
                        Type of the file. Note that types can be added and/or
                        removed in future.
                      type: string
                      example: generic
                      enum:
                        - generic
                        - contract
                        - terms
                    fileName:
                      description: >
                        Name of the file, usually original name of the file. You
                        can use this field to display the file name in the UI 
                        and to understand what kind of information is in certain
                        file.
                      type: string
                      example: Addendum_May2024.pdf
                    uploadedAt:
                      description: |
                        Date and time when the file was uploaded.
                      type: string
                      format: date-time
                      example: '2024-10-08T13:35:17+00:00'
                    downloadUrl:
                      description: >
                        Temporal link to download the file. This link is valid
                        for 1 hour and can be used to download the file.
                      type: string
                      example: >-
                        https://some-s3-bucket.s3.amazonaws.com/path/to/your/object?Expires=EXPIRATION_TIMESTAMP&Signature=SIGNATURE
              pagination:
                type: object
                properties:
                  limit:
                    type: integer
                    format: int32
                    description: |
                      Entity limit per request
                    example: 20
                  offset:
                    type: integer
                    format: int32
                    description: |
                      Offset for entities in repository
                    example: 10
                  totalCount:
                    type: integer
                    format: int32
                    description: |
                      Total count of entities for request
                    example: 100
  requestBodies:
    Import:
      content:
        multipart/form-data:
          schema:
            type: object
            description: |
              The field name 'file1' is temporary - it will be changed
            required:
              - file1
            properties:
              file1:
                type: string
                format: binary
    ImportProductStocksXml:
      content:
        text/xml:
          schema:
            type: object
            description: |-
              XML Request Example ``` <Request>
                  <Product>
                      <SellerSku>AAA3</SellerSku>
                      <Quantity>1030</Quantity>
                  </Product>
                  <Product>
                      <SellerSku>AAA1</SellerSku>
                      <Quantity>1010</Quantity>
                  </Product>
              </Request>
            properties:
              Product:
                type: object
                properties:
                  SellerSku:
                    type: string
                  Quantity:
                    type: integer
            xml:
              name: Request
              wrapped: true
    ImportProductCreationXmlImport:
      content:
        text/xml:
          schema:
            type: object
            description: |-
              ``` XML Request Example <Request>
                <Product>
                  <SellerSku>4105382173aaee4</SellerSku>
                  <ParentSku>asd23eadas</ParentSku>
                  <Status>active</Status>
                  <Name>Magic Product</Name>
                  <Variation>XXL</Variation>
                  <PrimaryCategory>4</PrimaryCategory>
                  <Categories>2,3,5</Categories>
                  <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
                  <Brand>ASM</Brand>
                  <Price>100.00</Price>
                  <SalePrice>32.5</SalePrice>
                  <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
                  <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
                  <ShipmentType>dropshipping</ShipmentType>
                  <ProductId>xyzabc</ProductId>
                  <ProductData>
                    <Megapixels>490</Megapixels>
                    <OpticalZoom>7</OpticalZoom>
                    <SystemMemory>4</SystemMemory>
                    <NumberCpus>32</NumberCpus>
                    <Network>This is network</Network>
                  </ProductData>
                  <Quantity>10</Quantity>
                </Product>
                <Product>
                  <SellerSku>4105382173aaee4</SellerSku>
                  <ParentSku>asd23eadas<ParentSku/>
                  <Status>active</Status>
                  <Name>Magic Product</Name>
                  <Variation>XXL</Variation>
                  <PrimaryCategory>4</PrimaryCategory>
                  <Categories>2,3,5</Categories>
                  <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
                  <Brand>ASM</Brand>
                  <Price>100.00</Price>
                  <SalePrice>32.5</SalePrice>
                  <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
                  <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
                  <ShipmentType>dropshipping</ShipmentType>
                  <ProductId>xyzabc</ProductId>
                  <ProductData>
                    <Megapixels>490</Megapixels>
                    <OpticalZoom>7</OpticalZoom>
                    <SystemMemory>4</SystemMemory>
                    <NumberCpus>32</NumberCpus>
                    <Network>This is network</Network>
                  </ProductData>
                  <Quantity>10</Quantity>
                </Product>
              </Request>
            properties:
              Product:
                type: object
                properties:
                  SellerSku:
                    type: string
                  ParentSku:
                    type: string
                  Status:
                    type: string
                  Name:
                    type: string
                  Variation:
                    type: string
                  PrimaryCategory:
                    type: integer
                  Categories:
                    type: string
                  BrowseNodes:
                    type: string
                  Description:
                    type: string
                  Brand:
                    type: string
                  Price:
                    type: number
                    example: 123.56
                  SalePrice:
                    type: number
                    example: 123.56
                  SaleStartDate:
                    type: string
                    format: date-time
                    example: '2023-11-01 03:33:47'
                  SaleEndDate:
                    type: string
                    format: date-time
                    example: '2023-11-12 03:33:47'
                  TaxClass:
                    type: string
                  ShipmentType:
                    type: string
                  ProductId:
                    description: ProductId is not id of product, it is EAN/GTIN
                    type: string
                  ProductData:
                    type: array
                    items:
                      type: object
                      properties:
                        Megapixels:
                          type: integer
                          example: 490
                        OpticalZoom:
                          type: integer
                          example: 7
                        SystemMemory:
                          type: integer
                          example: 4
                        NumberCpus:
                          type: integer
                          example: 7
                        Network:
                          type: string
                  Quantity:
                    type: integer
            required:
              - SellerSku
              - Name
              - PrimaryCategory
              - Description
              - Brand
              - Price
            xml:
              name: Request
              wrapped: true
    ImportProductUpdateXmlImport:
      content:
        text/xml:
          schema:
            type: object
            description: |-
              ``` XML Request Example <Request>
                <Product>
                  <SellerSku>4105382173aaee4</SellerSku>
                  <ParentSku>asd23eadas</ParentSku>
                  <Status>active</Status>
                  <Name>Magic Product</Name>
                  <Variation>XXL</Variation>
                  <PrimaryCategory>4</PrimaryCategory>
                  <Categories>2,3,5</Categories>
                  <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
                  <Brand>ASM</Brand>
                  <Price>100.00</Price>
                  <SalePrice>32.5</SalePrice>
                  <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
                  <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
                  <ShipmentType>dropshipping</ShipmentType>
                  <ProductId>xyzabc</ProductId>
                  <ProductData>
                    <Megapixels>490</Megapixels>
                    <OpticalZoom>7</OpticalZoom>
                    <SystemMemory>4</SystemMemory>
                    <NumberCpus>32</NumberCpus>
                    <Network>This is network</Network>
                  </ProductData>
                  <Quantity>10</Quantity>
                </Product>
                <Product>
                  <SellerSku>4105382173aaee4</SellerSku>
                  <ParentSku>asd23eadas<ParentSku/>
                  <Status>active</Status>
                  <Name>Magic Product</Name>
                  <Variation>XXL</Variation>
                  <PrimaryCategory>4</PrimaryCategory>
                  <Categories>2,3,5</Categories>
                  <Description><![CDATA[This is a <b>bold</b> product.]]></Description>
                  <Brand>ASM</Brand>
                  <Price>100.00</Price>
                  <SalePrice>32.5</SalePrice>
                  <SaleStartDate>2023-11-01 03:33:47</SaleStartDate>
                  <SaleEndDate>2023-11-12 03:33:47</SaleEndDate>
                  <ShipmentType>dropshipping</ShipmentType>
                  <ProductId>xyzabc</ProductId>
                  <ProductData>
                    <Megapixels>490</Megapixels>
                    <OpticalZoom>7</OpticalZoom>
                    <SystemMemory>4</SystemMemory>
                    <NumberCpus>32</NumberCpus>
                    <Network>This is network</Network>
                  </ProductData>
                  <Quantity>10</Quantity>
                </Product>
              </Request>
            properties:
              Product:
                type: object
                properties:
                  SellerSku:
                    type: string
                  ParentSku:
                    type: string
                  Status:
                    type: string
                  Name:
                    type: string
                  Variation:
                    type: string
                  PrimaryCategory:
                    type: integer
                  Categories:
                    type: string
                  BrowseNodes:
                    type: string
                  Description:
                    type: string
                  Brand:
                    type: string
                  Price:
                    type: number
                    example: 123.56
                  SalePrice:
                    type: number
                    example: 123.56
                  SaleStartDate:
                    type: string
                    format: date-time
                    example: '2023-11-02 03:33:47'
                  SaleEndDate:
                    type: string
                    format: date-time
                    example: '2023-11-12 03:33:47'
                  TaxClass:
                    type: string
                  ShipmentType:
                    type: string
                  ProductId:
                    type: string
                  ProductData:
                    type: array
                    items:
                      type: object
                      properties:
                        Megapixels:
                          type: integer
                          example: 490
                        OpticalZoom:
                          type: integer
                          example: 7
                        SystemMemory:
                          type: integer
                          example: 4
                        NumberCpus:
                          type: integer
                          example: 7
                        Network:
                          type: string
                  Quantity:
                    type: integer
                  ProductGroup:
                    type: string
            required:
              - SellerSku
            xml:
              name: Request
              wrapped: true
    Product:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                description: Product identifier
                type: integer
                example: 7865
                readOnly: true
              uuid:
                description: Product UUID identifier
                example: 060cef12-08ef-4ae6-b15e-79398fedc774
                type: string
                readOnly: true
              srcId:
                description: >
                  ID of product in Shop system. If empty means that product was
                  not yet syncronized with Shop and is

                  not visible to end customers.
                example: '94345'
                type: string
                nullable: true
                readOnly: true
              shopSku:
                description: >
                  SKU on the shop's side. Usually it is visible to end customer.
                  If value is null, it means that product is not yet

                  syncronized with shop and SKU was not assigned.
                type: string
                example: NI464AKLCEZ0
                nullable: true
                readOnly: true
              sellerSku:
                description: >-
                  SKU from seller's side. Should be unique across products of
                  seller.
                type: string
                example: shoe-123
              sin:
                description: >
                  Sometimes several sellers are selling same product. In this
                  case products of different sellers can be displayed

                  using one single product card in shop. This parameter, if set,
                  identifies to which product in shop system this

                  product of seller belongs to.
                type: string
                example: KMPWJ5
                readOnly: true
              sellerId:
                type: integer
                example: 252
                readOnly: true
              productSetId:
                type: integer
                example: 744
                readOnly: true
              approvalStatus:
                type: string
                description: Product approval status
                example: approved
                readOnly: true
                enum:
                  - pending
                  - approved
                  - rejected
              updatedByUserId:
                type: integer
                example: 8732
                readOnly: true
              status:
                description: Product status
                type: string
                example: active
                enum:
                  - active
                  - inactive
                  - deleted
              variation:
                description: name of variation, usually size like XL, 39, 62.
                type: string
                example: '38'
              taxClassId:
                description: Tax class Id specific for this particular size.
                type: integer
                example: 1
                readOnly: true
              shipmentTypeId:
                description: >-
                  Shipment type Id specific for this particular size. The Value
                  include 1 - warehouse; 2 - dropshipping; 3 - crossdocking;  if
                  the value is empty the variation will be created with the
                  default value of this endpoint /v2/seller-settings with this
                  parameter product_default_shipment_type
                type: integer
                example: 1
              productIdentifier:
                description: Identifier like EAN, Code-39, etc
                type: string
                example: '460232163234'
              duplicateGroupId:
                type: integer
                example: 51
                readOnly: true
              srcUpdatedAt:
                type: string
                description: >-
                  Datetime when product was last updated(synced) with shop
                  system.
                format: date-time
                nullable: true
                readOnly: true
              createdAt:
                type: string
                format: date-time
                readOnly: true
              updatedAt:
                type: string
                format: date-time
                readOnly: true
              name:
                type: string
                description: name of the product
                example: '1600 Slim Brushed Chrome '
    ProductSetCreate:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - price
              - sellerSku
              - brandId
              - primaryCategoryId
              - attributes
            properties:
              name:
                type: string
                example: Block Shell Jacket
                description: Name of a productSet. Doesn't have to be unique.
              price:
                type: number
                format: float
                minimum: 0
                exclusiveMinimum: true
                description: Price of a product, has to be higher than 0.
                example: 100.1
              status:
                type: string
                description: >-
                  Status of first product which will be created in product set.
                  Can be active or inactive.
                enum:
                  - active
                  - inactive
                example: active
              sellerSku:
                type: string
                description: >-
                  This value has to be unique across products of seller. It is
                  string identifier of your product. Usually it is bar code,
                  your internal identifier of SKU or string like
                  "NameOfModel-Size". Together with  creation of product set
                  there will be first product created in this product set with
                  given sellerSku.
                example: 68040427550-1
              parentSku:
                type: string
                example: '68040427550'
                description: >-
                  Parent SKU is text identifier for your product set used in
                  exports and imports. When you want to add new size to existing
                  product set through importing file, you will provide Parent
                  SKU for that new size and  it will be added to product set
                  with given Parent SKU. You may omit providing Parent SKU, in
                  this  case it will be autogenerated: we will take Seller SKU
                  of first product within product set and it will be used as
                  Parent SKU.
              description:
                type: string
                description: >-
                  Description which will be visible by end customers. Depending
                  on settings of your seller and general configuration, there
                  could be limit of minimum and maximum length of the
                  description. Also, depending on configuration, description
                  should be plain text or may contain HTML markup.


                  Description may be required or not required depending on
                  configuration of attribute with name "Description" that you
                  can get by getting attributes for desired category. If
                  description is not mandatory but you send it anyway, then it
                  will be validated according to attribute validation rules (for
                  example, there can be minimum length restriction applied).
                example: >-
                  Experience the ultimate expression of functionality at
                  BrandName with the Women's Block Shell Jacket. Our model is
                  wearing size *. She usually wears a size 8 and is 177cm tall.
              brandId:
                type: integer
                description: >-
                  Please, note that not every brand can be used without prior
                  approval. Also, there are some brand-specific limitation for
                  variations (for example, for brand A it is possible to use
                  only sizes 34, 35, 36, 37, 38, 39, 40, but size 35.5 or 33
                  will lead to validation error).
                example: 78
              primaryCategoryId:
                type: integer
                description: >-
                  Please, note that there could limitation for certain sellers
                  in which categories seller allowed to create ProductSets.
                  Also, in course of time categories can be marked as inactive
                  (for example when category A is splitted to categories B and
                  C).
                example: 309
              categories:
                type: array
                items:
                  type: integer
                description: >-
                  ProductSet can be listed in multiple additional categories.
                  There is a seller-specific limit regarding maximum count of
                  additional categories. Those categories are within one branch
                  of the category tree, where the primary category is located.
                example:
                  - 421
                  - 567
              attributes:
                type: object
                description: >-
                  Array of attributes' values. Key is attribute ID and value
                  depends on type of attribute. It can be one of: string (for
                  "free text attributes" like "Warranty duration"), integer (for
                  attributes with list of options, for example "Material" can
                  have some set of fixed options), array of integers (for
                  attributes with multiple choice of predefined options), null
                  (when you didn't provide value for optional attribute), array
                  of strings for attributes which allow multiple values with
                  free text.
                example:
                  '421': string value
                  '533':
                    - 4
                    - 5
                  '567': 123
                  '721':
                    - string1
                    - string2
                  '854': null
              sizeSystem:
                description: >
                  Nullable field with same value as attribute that represents
                  "size system". Please, read description of

                  "GET /v2/brands/{brandId}/attributes" for more detailed
                  explanation. This field will be removed in future

                  versions of this endpoint and "size system" will be passed
                  only in array of attributes.
                type: integer
                example: 5
              browseNodes:
                type: array
                items:
                  type: integer
                example:
                  - 421
                  - 567
                default: []
                description: >-
                  -> Any other category of the category tree, where you think
                  the product shall fit also besides main 'categories', so it
                  gets listed in the catalog under those categories as well.
              variation:
                type: string
                description: >
                  When the category has this variation attribute as a dropdown
                  choice, one option must be entered here.  Otherwise it can be
                  user generated or even omitted. In some categories ("shoes" as
                  example) you can  create products only with given options for
                  variation like "36, 38, 40" or "S, M, L, XL". In other
                  categories ("hand made" for example) variation can be free
                  text: continuing with "hand made" it can be like product set
                  "hand made leather bag" with products/variation "black",
                  "brown" and "white" in this product set.

                  **Please, note that value is string here.** That means instead
                  of providing ID of option (like 5342), you need to provide
                  string value for size (like "XL" or "42"). Reason for this is
                  that in some  categories variation can be selected from list
                  of predefined options, but in other categories it is free text
                  as mentioned in previous paragraph.
                nullable: true
                example: Talle único
              shipmentTypeId:
                type: integer
                description: >-
                  The type of the product shipment. Can be one of 3 types: Cross
                  Docking, Drop Shipping and  Fulfillment by/Consignment. Also 2
                  types can be used together: Default Drop Shipping allow Cross
                  docking and  Default Cross Docking allow Drop Shipping.
                  Available options depend on the configuration and enabled 
                  shipping models.
                nullable: true
                example: 1
              productIdentifier:
                type: string
                description: >
                  EAN/GTIN or BarCode of product. Please, note that even if you
                  have it with only numbers, parameter type is string, because
                  we support different types of them and in some cases they are
                  not numeric. Parameter is  optional, when not provided first
                  product withing product set will be created with empty product
                  identifier. At any time in future you can update/change it.
                nullable: true
                example: '46023216444'
    ProductSetUpdate:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: Block Shell Jacket
              description:
                type: string
                description: >-
                  Description which will be visible by end customers. Depending
                  on settings of your seller and general configuration, there
                  could be limit of minimum and maximum length of the
                  description. Also, depending on configuration, description
                  should be plain text or may contain HTML markup.
                example: >-
                  Experience the ultimate expression of functionality at
                  BrandName with the Women's Block Shell Jacket. Our model is
                  wearing size *. She usually wears a size 8 and is 177cm tall.
              parentSku:
                type: string
                example: '68040427550'
                description: >-
                  Parent SKU is text identifier for your product set used in
                  exports and imports. When you want to add new size to existing
                  product set through importing file, you will provide Parent
                  SKU for that new size and  it will be added to product set
                  with given Parent SKU. You may omit providing Parent SKU, in
                  this  case it will be autogenerated: we will take Seller SKU
                  of first product within product set and it will be used as
                  Parent SKU.
              brandId:
                type: integer
                description: >-
                  Please, note that not every brand can be used without prior
                  approval. Also, there are some brand-specific limitation for
                  variations (for example, for brand A it is possible to use
                  only sizes 34, 35, 36, 37, 38, 39, 40, but size 35.5 or 33
                  will lead to validation error).
                example: 78
              primaryCategoryId:
                type: integer
                description: >-
                  Please, note that there could limitation for certain sellers
                  in which categories seller allowed to create ProductSets.
                  Also, in cource of time categories can be marked as inactive
                  (for example when category A is splitted to categories B and
                  C).
                example: 309
              categories:
                type: array
                items:
                  type: integer
                description: >-
                  ProductSet can be listed in multiple additional categories.
                  There is a seller-specific limit regarding maximum count of
                  additional categories. Those categories are within one branch
                  of the category tree, where the primary category is located.
                example:
                  - 421
                  - 567
              attributes:
                type: object
                description: >-
                  Array of attributes' values. Key is attribute ID and value
                  depends on type of attribute. It can be one of: string (for
                  "free text attributes" like "Warranty duration"), integer (for
                  attributes with list of options, for example "Material" can
                  have some set of fixed options), array of integers (for
                  attributes with multiple choise of predefined options), null
                  (when you didn't provide value for optional attribute), array
                  of strings for attributes which allow multiple values with
                  free text.
                example:
                  '421': string value
                  '533':
                    - 4
                    - 5
                  '567': 123
                  '721':
                    - string1
                    - string2
                  '854': null
              sizeSystem:
                description: >
                  Represents the id of the attribute option that can represent
                  for ex a country (AU). The values depend on the

                  attribute mappings for sizeSystem. When creating the
                  productSet this field can be null.
                type: integer
                example: 5
              browseNodes:
                type: array
                items:
                  type: integer
                example:
                  - 421
                  - 567
                default: []
                description: >-
                  -> Any other category of the category tree, where you think
                  the product shall fit also besides main 'categories', so it
                  gets listed in the catalog under those categories as well.
    OauthAppCreate:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - redirectUri
            properties:
              isGlobal:
                type: boolean
                description: Whether the application is global or not.
                example: true
              name:
                type: string
                description: The application name.
                example: My Application
              website:
                type: string
                description: The application website.
                example: http://example.com
              redirectUri:
                type: string
                description: >-
                  The application redirect uri that will be redirected by
                  SellerCenter.
                example: http://example.com/redirect_uri
    OauthAppUpdate:
      content:
        application/json:
          schema:
            type: object
            required:
              - redirectUri
            properties:
              website:
                type: string
                description: The application website.
                example: http://example.com
              redirectUri:
                type: string
                description: >-
                  The application redirect uri that will be redirected by
                  SellerCenter.
                example: http://example.com/redirect_uri
    OrderPackageDocument:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              documentType:
                description: Document Type of the file uploaded.
                type: string
              documentFile:
                description: >-
                  The file uploaded. Please, be aware about allowed document
                  types. For example, for type <code>invoice</code> only png,
                  jpg and pdf are allowed.
                type: string
                format: binary
            required:
              - documentType
              - documentFile
    CustomKpiUpdate:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                externalKpiName:
                  type: string
                  example: Operational Score
                sellerShortCode:
                  type: string
                  example: NG1003C
                value:
                  type: number
                  format: float
                  example: 50
                  minimum: 0.01
                  maximum: 100
    CountryPriceUpdate:
      content:
        application/json:
          schema:
            type: object
            properties:
              price:
                type: number
                format: float
                example: 7.89
                description: >
                  Price of a product.

                  Might be restricted by maximum or minimum allowed category
                  price.
              salePrice:
                type: number
                format: float
                example: 6
                nullable: true
                description: >
                  Sale price of a product. Can be added only if sale price
                  feature is unlocked for the country.

                  User settings may forbid user from changing it.

                  Country settings may require minimum period of time product is
                  active before sale price can be set.

                  Must be lower than regular price.

                  Might be restricted by maximum or minimum allowed category
                  price and by allowed discount.
              saleStartDate:
                type: string
                format: date-time
                nullable: true
                description: >
                  Start date of a sale pricing. Can be added only if sale price
                  feature is unlocked for the country.

                  User settings may forbid user from changing it.

                  Must be set after 2010-01-01.
              saleEndDate:
                type: string
                format: date-time
                nullable: true
                description: >
                  End date of a sale pricing. Can be added only if sale price
                  feature is unlocked for the country.

                  User settings may forbid user from changing it.

                  Must be set in the future and be further in time than
                  saleStartDate.

                  Also the end date cannot be more than 100 years from now.
              status:
                description: >
                  Indicates whether certain product should be sold in given
                  country. In use only in multi-country

                  SellerCenters where you may want to allow or not allow certain
                  product to be sold in certain

                  countries. For example, your catalog has shoes and jackets and
                  you are selling in TW and HK.

                  It can be that your warehouse capacity in TW allow you to
                  store only shoes in this case you

                  can set status to "inactive" for jackets in TW only.


                  In case if it is not present in request body it will be
                  considered as "active" by default.
                type: string
                nullable: false
                default: active
                enum:
                  - active
                  - inactive
                example: active
    MultiplePricesUpdate:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              required:
                - productId
                - country
              properties:
                productId:
                  description: Numeric id of the product
                  type: number
                  example: 5642
                  nullable: false
                country:
                  description: Country the price should be available in.
                  type: string
                  example: DE
                  nullable: false
                price:
                  type: number
                  format: float
                  example: 7.89
                  description: >
                    Price of a product.

                    Might be restricted by maximum or minimum allowed category
                    price.
                salePrice:
                  type: number
                  format: float
                  example: 6
                  nullable: true
                  description: >
                    Sale price of a product. Can be added only if sale price
                    feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Country settings may require minimum period of time product
                    is active before sale price can be set.

                    Must be lower than regular price.

                    Might be restricted by maximum or minimum allowed category
                    price and by allowed discount.
                saleStartDate:
                  type: string
                  format: date-time
                  nullable: true
                  description: >
                    Start date of a sale pricing. Can be added only if sale
                    price feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Must be set after 2010-01-01.
                saleEndDate:
                  type: string
                  format: date-time
                  nullable: true
                  description: >
                    End date of a sale pricing. Can be added only if sale price
                    feature is unlocked for the country.

                    User settings may forbid user from changing it.

                    Must be set in the future and be further in time than
                    saleStartDate.

                    Also the end date cannot be more than 100 years from now.
                status:
                  description: >
                    Indicates whether certain product should be sold in given
                    country. In use only in multi-country

                    SellerCenters where you may want to allow or not allow
                    certain product to be sold in certain

                    countries. For example, your catalog has shoes and jackets
                    and you are selling in TW and HK.

                    It can be that your warehouse capacity in TW allow you to
                    store only shoes in this case you

                    can set status to "inactive" for jackets in TW only.


                    In case if it is not present in request body it will be
                    considered as "active" by default.
                  type: string
                  nullable: false
                  default: active
                  enum:
                    - active
                    - inactive
                  example: active
    ProductStockUpdate:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                productId:
                  type: integer
                  example: 5283
                  description: Numeric ID of a product.
                quantity:
                  type: integer
                  example: 12
                  description: The current level of inventory for this product.
    WarehouseProductStockUpdate:
      content:
        application/json:
          schema:
            type: object
            required:
              - quantity
            properties:
              quantity:
                type: integer
                nullable: false
                example: 144
    OrderItemIds:
      content:
        application/json:
          schema:
            type: object
            properties:
              orderItemIds:
                type: array
                items:
                  type: integer
                example:
                  - 123456
                  - 654321
    CancelOrderItemsIds:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
              - type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    description: >-
                      Failure reason. The list of reasons you can find
                      /v2/orders-failure-reasons.
                    example: Not reachable
                  reasonDetail:
                    type: string
                    description: Additional information
                    example: Details
                    nullable: true
    AdminChangeStatusOrderItems:
      content:
        application/json:
          schema:
            type: object
            properties:
              orderItems:
                type: array
                items:
                  type: object
                  required:
                    - orderItemId
                  properties:
                    orderItemId:
                      type: integer
                    status:
                      type: string
                    reason:
                      type: string
                example:
                  - orderItemId: 12
                    status: canceled
                    reason: defect
    SetReadyToShip:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - orderItems
              - trackingNumber
            properties:
              orderItems:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: integer
                      example: 1
                    serialNumber:
                      type: string
                      example: de312312351234
              trackingNumber:
                type: string
                example: de312312351234
                description: >-
                  For shipment providers which have api integration 
                  (apiIntegrationAvailable = true of geShipmentProvider API
                  call) the tracking number is optional otherwise tracking
                  number is mandatory.
              deliveryType:
                type: string
                enum:
                  - dropship
                  - pickup
                  - send_to_warehouse
                description: >-
                  One of the following: 'dropship' - The seller will send out
                  the package on his own; 'pickup' -  Shop should pick up the
                  item from the seller (cross-docking); 'send_to_warehouse' - 
                  The seller will send the item to the warehouse (crossdocking).
                example: dropship
              shippingProvider:
                example: DHL
                type: string
              accessKey:
                example: access_key
                type: string
              documentUrl:
                example: http://doc.com/my_doc
                type: string
              invoiceEncodedXml:
                type: string
    SetDeliveryFailed:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
              - type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    description: >-
                      Failure reason. The list of reasons you can find
                      /v2/orders-failure-reasons.
                    example: Not reachable
                  reasonDetail:
                    type: string
                    description: Additional information
                    example: Details
                    nullable: true
    SetReturned:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
              - type: object
                properties:
                  reason:
                    type: string
                    example: Changed mind
                    nullable: true
    PackedByMarketplaceItemIds:
      content:
        application/json:
          schema:
            type: object
            required:
              - orderItems
              - deliveryType
            properties:
              orderItems:
                type: array
                items:
                  type: object
                  required:
                    - orderItemId
                  properties:
                    orderItemId:
                      type: integer
                    serialNumber:
                      description: >-
                        Only applicable if serial number feature has been
                        enabled for platform and seller.  Unique serial number
                        for tracking order items. Can be specified as
                        comma-separated list of serials or JSON array,  in which
                        case there must be exactly as many serials as there are
                        OrderItemIds.  Can also be specified as a JSON object
                        where keys are order item ids and values are
                        corresponding serial numbers;  in this case the order
                        item id from OMS will be used as serial for items where
                        it has not been explicitly specified.
                      type: string
                example:
                  - orderItemId: 12
                    serialNumber: NVFXXXRT
              deliveryType:
                type: string
                enum:
                  - dropship
                  - pickup
                  - send_to_warehouse
                description: >-
                  One of the following: 'dropship' - The seller will send out
                  the package on his own; 'pickup' -  Shop should pick up the
                  item from the seller (cross-docking); 'send_to_warehouse' - 
                  The seller will send the item to the warehouse (crossdocking).
                example: dropship
              shippingProvider:
                type: string
                description: >-
                  Valid shipment provider name as looked up via
                  v2/orders-shipment-providers.  Mandatory always drop-shipping
                  and mandatory of cross-docking when DeliveryType
                  'send_to_warehouse' is used
                example: Aramax
              trackingNumber:
                type: string
                description: >-
                  The actual tracking number, needs to be provided when passed
                  shippingProvider does not have API integration enabled
                example: '123'
    ProductCreateBySin:
      content:
        application/json:
          schema:
            type: object
            properties:
              sin:
                description: SIN value of the product in Shop’s catalog
                type: string
                example: '1'
    WebhookCreate:
      content:
        application/json:
          schema:
            type: object
            properties:
              callbackUrl:
                type: string
                description: The webhook url that will be called by SellerCenter.
                example: http://example.com/callback
              events:
                type: array
                description: List of webhook related events identified by its alias.
                items:
                  type: string
                example:
                  - onOrderCreated
                  - onProductCreated
    WebhookUpdate:
      content:
        application/json:
          schema:
            type: object
            properties:
              callbackUrl:
                type: string
                description: The webhook url that will be called by SellerCenter.
                example: http://example.com/callback
              events:
                type: array
                description: List of webhook related events identified by its alias.
                items:
                  type: string
                example:
                  - onOrderCreated
                  - onProductCreated
    WebhookStatusUpdate:
      content:
        application/json:
          schema:
            type: object
            properties:
              isEnabled:
                type: boolean
                description: The status of the webhook.
                example: true
    CalculateContentScore:
      content:
        application/json:
          schema:
            type: object
            required:
              - categoryId
            properties:
              productSetId:
                type: integer
              categoryId:
                type: integer
              name:
                type: string
              description:
                type: string
              shortDescription:
                description: >
                  Value of attribute with **name** "short_description" or
                  "highlights" (if any). This is legacy parameter and rules

                  relying on this parameter are in general not in use.
                type: string
              attributeSetId:
                description: >
                  Previously when product changed category initial attribute set
                  was kept (for example product was created in 

                  category "T-Shirts" with one attribute set, but then moved to
                  category "Shoes" which has another attribute set). 

                  This parameter was used, among other, to calculate content
                  score. Currently this parameter is not used in 

                  content score calculation. AttributeSetId is now taken from
                  current category. 


                  This parameter is deprecated and will be removed in future
                  versions of this endpoint.
                deprecated: true
                type: string
              attributes:
                description: >
                  Array with attribute IDs as key plus value of attributes.
                  Please, see description of endpoint for example value.

                  Make sure to send all attributes, even with empty values.
                type: object
                additionalProperties: true
              variations:
                description: >
                  Array of products (variations). Only one key is in each
                  variation is expected - `ean`, as there is only

                  one content score rule for products itself. Deleted variations
                  do not participate in calculating content

                  score, so when you are sending not yet saved data, then you
                  should omit sending deleted variations.
                type: object
                additionalProperties: true
            example:
              productSetId: 364215
              categoryId: 524
              name: Name
              description: Here is the long description
              shortDescription: Short description
              attributeSetId: 12
              attributes:
                '2': value2
                '254': value1
              variations:
                - ean: 4059326403862
    UserCreate:
      content:
        application/json:
          schema:
            type: object
            properties:
              aclRoleId:
                type: integer
                description: Role Id
                example: 2
              apiKey:
                type: string
                example: 093a9e34dqw2312241gcz53766e338abf
              email:
                type: string
                example: email@gmail.com
              languageId:
                type: integer
                description: Language Id
                example: 3
              name:
                type: string
                example: John
              notifyNewUser:
                type: boolean
              sellerId:
                type: integer
                example: 1
              status:
                type: string
                enum:
                  - active
                  - inactive
              enablePassword:
                type: boolean
                description: >-
                  Indicates whether the user is allowed to use a password for
                  authentication
                example: true
              switchableSellerIds:
                type: array
                items:
                  type: integer
                description: Array of seller IDs that the user can switch between
                example:
                  - 1
                  - 2
                  - 232
            required:
              - sellerId
              - aclRoleId
              - email
              - languageId
              - name
              - status
    UserUpdate:
      content:
        application/json:
          schema:
            type: object
            properties:
              roleId:
                type: integer
                description: Role Id
                example: 2
              apiKey:
                type: string
                example: 093a9e34dqw2312241gcz53766e338abf
              email:
                type: string
                example: email@gmail.com
              name:
                type: string
                example: John
              status:
                type: string
                enum:
                  - active
                  - inactive
              enablePassword:
                type: boolean
                description: >-
                  Indicates whether the user is allowed to use a password for
                  authentication
                example: true
              switchableSellerIds:
                type: array
                items:
                  type: integer
                description: Array of seller IDs that the user can switch between
                example:
                  - 1
                  - 2
                  - 232
            required:
              - roleId
              - email
              - status
              - name
    UserChangePassword:
      content:
        application/json:
          schema:
            type: object
            properties:
              currentPassword:
                type: string
                description: Current password
              newPassword:
                type: string
                description: New password
    SellerUpdate:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: testemail@sellercenter.com
    SellerContractAccept:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: testemail@sellercenter.com
    SellerProfileGeneralUpdate:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  example: 123
                value:
                  type: string
                  example: 000-111-222-33345
    SellerProfileFileUpload:
      content:
        multipart/form-data:
          schema:
            type: object
            description: |
              The field name 'file1' is temporary - it will be changed
            required:
              - file1
            properties:
              file1:
                type: string
                format: binary
    SellerContractIds:
      content:
        application/json:
          schema:
            type: object
            required:
              - contractIds
            properties:
              contractIds:
                type: array
                items:
                  type: integer
                example:
                  - 123456
                  - 654321
    OrderExportDocument:
      content:
        application/json:
          schema:
            type: object
            required:
              - documentType
            properties:
              orderIds:
                type: array
                description: Order ids. Either orderIds or orderItemIds must be set.
                items:
                  type: integer
                example:
                  - 123456
                  - 654321
              orderItemIds:
                type: array
                description: Order item ids. Either orderIds or orderItemIds must be set.
                items:
                  type: integer
                example:
                  - 1234
                  - 1235
              documentType:
                type: string
                description: >-
                  Document type - see available options, multiple can be used at
                  once (comma separated)
                enum:
                  - all_documents
                  - invoice
                  - exportInvoice
                  - shippingLabel
                  - shippingParcel
                  - carrierManifest
                  - serialNumber
                  - picklist
                  - checklist
                  - creditNote
                  - manifest
                example: invoice,shippingLabel
              format:
                type: string
                description: Requested document format (extension)
                default: pdf
                example: pdf
                enum:
                  - pdf
                  - html
    OrderItemShippingProvider:
      content:
        application/json:
          schema:
            type: object
            required:
              - shippingProvider
            properties:
              shippingProvider:
                type: string
                example: DafitiCarrier
              trackingCode:
                type: string
                example: ASDF123
    OrderItemTrackingCode:
      content:
        application/json:
          schema:
            type: object
            properties:
              trackingCode:
                type: string
                example: ASDF123
    RoleAdd:
      content:
        application/json:
          schema:
            type: object
            properties:
              displayName:
                type: string
                example: New role
              group:
                type: string
                example: seller
              canBeEditedByRoleIds:
                type: array
                items:
                  type: integer
                  example: 2
              description:
                type: string
                example: A small descriptive text
    RoleEdit:
      content:
        application/json:
          schema:
            type: object
            properties:
              displayName:
                type: string
                example: New display name
              group:
                type: string
                example: seller
              canBeEditedByRoleIds:
                type: array
                items:
                  type: integer
                  example: 2
              description:
                type: string
                example: A small descriptive text
    ReturnRejected:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - type: object
                required:
                  - orderItemIds
                properties:
                  orderItemIds:
                    type: array
                    items:
                      type: integer
                    example:
                      - 123456
                      - 654321
              - type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    description: >-
                      Failure reason. The list of reasons you can find
                      /v2/orders-failure-reasons.
                    example: Not reachable
                  reasonDetail:
                    type: string
                    description: Additional information
                    example: Details
                    nullable: true
    CreateTransaction:
      content:
        application/json:
          schema:
            type: object
            required:
              - sellerId
              - transactionTypeId
              - accountStatementGroupId
              - value
              - currency
            properties:
              sellerId:
                type: integer
                description: Seller identifier
                example: 1
              description:
                type: string
                description: Transaction description
                example: Balance Deduction
              accountStatementGroupId:
                type: integer
                description: >-
                  Account statement group identifier  - can be fetched by
                  endpoint: /v2/finance/transaction/account_statement_groups
                example: 1
              transactionTypeId:
                type: integer
                description: >-
                  Transaction type identifier - can be fetched by endpoint:
                  /v2/finance/transaction/types
                example: 1
              value:
                type: number
                description: Transaction value (positive or negative)
                example: 123.45
              currency:
                type: string
                description: >-
                  Transaction currency - if the currency is not supported by
                  Seller, the transaction won't be created
                example: USD
              referenceId:
                type: integer
                description: Reference identifier - required for order and product context
                example: 1234
              vatTax:
                type: number
                description: VAT tax value
                example: 12.3
              whtTax:
                type: number
                description: WHT tax value
                example: 12.3
    CreditNoteNumberGeneration:
      content:
        application/json:
          schema:
            type: object
            required:
              - prefix
              - nextNumber
            properties:
              generationType:
                type: string
                description: >-
                  Accept only 'autoincrement_number', default value is
                  'autoincrement_number'
                example: autoincrement_number
              prefix:
                type: string
                description: Prefix for the credit note number
                example: ABC
              nextNumber:
                type: integer
                description: The next number
                example: 123
    InvoiceNumberSettings:
      content:
        application/json:
          schema:
            type: object
            required:
              - generationType
            properties:
              generationType:
                type: string
                description: Accept 'autoincrement_number', 'order_number', 'show_dialog'
                example: autoincrement_number
              prefix:
                type: string
                description: Prefix for the credit note number
                example: ABC
              nextNumber:
                type: integer
                description: The next number
                example: 123
  securitySchemes:
    oAuth:
      type: oauth2
      description: >-
        In order to get Bearer token (which you will use next in requests), you
        need to send your application ID and secret to this endpoint.
      flows:
        clientCredentials:
          tokenUrl: /oauth/client-credentials
          scopes: {}
tags:
  - name: Orders
    externalDocs:
      description: Find more info about status work flow here
      url: /docs/images/order_status_flow.png
  - name: Attribute
